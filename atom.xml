<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZERO开发</title>
  
  <subtitle>一个探索副业的独立开发人博客</subtitle>
  <link href="https://www.zerofc.cn/atom.xml" rel="self"/>
  
  <link href="https://www.zerofc.cn/"/>
  <updated>2025-05-08T06:03:39.575Z</updated>
  <id>https://www.zerofc.cn/</id>
  
  <author>
    <name>北桥苏</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Blender入门教程（四）：动画制作</title>
    <link href="https://www.zerofc.cn/2025/05/08/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/"/>
    <id>https://www.zerofc.cn/2025/05/08/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/</id>
    <published>2025-05-08T02:13:50.000Z</published>
    <updated>2025-05-08T06:03:39.575Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>在从一个模型到，完成贴图，完成蒙皮（骨骼绑定）后，已经算是一阶段的任务完成了，因为这样既可以拿去做Mod，也可以直接导入动作源完成动画。但是对于独立游戏，为了差异化，有些动作还是要自己制作的，所以就有了下面的这个3D模型的动画制作过程，最后也会演示一下如何导入CocosCreator等游戏引擎中。</p><h2 id="二、动画制作"><a href="#二、动画制作" class="headerlink" title="二、动画制作"></a>二、动画制作</h2><h3 id="1-打开时间线"><a href="#1-打开时间线" class="headerlink" title="1.打开时间线"></a>1.打开时间线</h3><p>记得是在姿势模式下，然后在Blender底部把 “时间线” 拉高一点，折叠的 “汇总” 也点击展开来。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/image-20250508113742306.png" alt="image-20250508113742306"></p><h3 id="2-开始K帧"><a href="#2-开始K帧" class="headerlink" title="2.开始K帧"></a>2.开始K帧</h3><p>点亮 “自动插帧” 按钮，将关键帧放到0帧位置，开始对某个骨骼进行变换，旋转，移动等，然后再移动到指定关键帧位置再变换，播放一下就可以看到动画了。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/image-20250508114350091.png" alt="image-20250508114350091"></p><h2 id="三、多组动画"><a href="#三、多组动画" class="headerlink" title="三、多组动画"></a>三、多组动画</h2><p>在游戏引擎中导入模型时，一个模型往往会制作多组动画，比如待机、攻击、死亡、大招等不同的动作，开发只需要在开发时添加控制器，不同的时候播放对应的动画即可。</p><h3 id="1-动画摄影表"><a href="#1-动画摄影表" class="headerlink" title="1.动画摄影表"></a>1.动画摄影表</h3><p>从 “时间线” 切换到 “动画摄影表”，然后再选择 “动作编辑器”，点击 “新建动作”，然后还是和前面一样，在指定帧数位置做变换。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/image-20250508131402641.png" alt="image-20250508131402641"></p><h3 id="2-切换动作"><a href="#2-切换动作" class="headerlink" title="2.切换动作"></a>2.切换动作</h3><p>在编辑了多组动作后，大纲里只会显示一个动作，要想查看需要切换，为了好记，在新建动作时可以重命名，然后在 “浏览要关联的动作” 的地方进行切换。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/image-20250508131737899.png" alt="image-20250508131737899"></p><h2 id="四、游戏引擎中使用"><a href="#四、游戏引擎中使用" class="headerlink" title="四、游戏引擎中使用"></a>四、游戏引擎中使用</h2><p>我这里为了方便，就没用这个机械臂了，直接拿之前已经导进去的Fbx做示例了。</p><h3 id="1-导入CocosCreator"><a href="#1-导入CocosCreator" class="headerlink" title="1.导入CocosCreator"></a>1.导入CocosCreator</h3><p>首先将有动画的模型导出为Fbx，然后将其复制到CocosCreator项目的assets下的某个位置。</p><h3 id="2-拖入模型"><a href="#2-拖入模型" class="headerlink" title="2.拖入模型"></a>2.拖入模型</h3><p>在游戏场景下，先创建一个空节点，然后把已经放到项目资源目录下的Fbx，拖入在该节点下。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/image-20250508134320920.png" alt="image-20250508134320920"></p><h3 id="3-创建脚本"><a href="#3-创建脚本" class="headerlink" title="3.创建脚本"></a>3.创建脚本</h3><p>给新建的空节点绑定一个脚本，脚本接收一个SkeletalAnimation属性，也就是带动画的Fbx，就是空节点下的整个目录拖入。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; _decorator, <span class="title class_">Component</span>, <span class="title class_">SkeletalAnimation</span>, input, <span class="title class_">Input</span>, <span class="title class_">EventMouse</span>, <span class="title class_">Vec3</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;cc&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; ccclass, property &#125; = _decorator;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ccclass</span>(<span class="string">&#x27;MyPlayController&#x27;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">PlayController</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Component</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@property</span>(&#123; <span class="attr">type</span>: <span class="title class_">SkeletalAnimation</span> &#125;)</span><br><span class="line">    <span class="keyword">public</span> <span class="title class_">CocosAnim</span>: <span class="title class_">SkeletalAnimation</span> | <span class="literal">null</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">CocosAnim</span>.<span class="title function_">play</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">onMouseMove</span>(<span class="params">event: EventMouse</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(event);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">update</span>(<span class="params">deltaTime: <span class="built_in">number</span></span>) &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">onStartButtonClicked</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">CocosAnim</span>.<span class="title function_">play</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">onStopButtonClicked</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">CocosAnim</span>.<span class="title function_">stop</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-开始运行"><a href="#4-开始运行" class="headerlink" title="4.开始运行"></a>4.开始运行</h3><p>这个只要是启动就自动播放，而且Fbx只有一个时间线的默认动画，没有多动作组，其实也差不多，就只是对指定动作进行播放。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/image-20250508135414690.png" alt="image-20250508135414690"></p><h2 id="五、写在后面"><a href="#五、写在后面" class="headerlink" title="五、写在后面"></a>五、写在后面</h2><p>如果只是制作游戏，到这里就完全够用了，但如果是影视后期的话，还有渲染部分，因为在制作完模型还要放到实拍场景中，目前这个我也还不会，等后面学习了我再总结一下了。</p><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何用Blender制作动画。</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Blender" scheme="https://www.zerofc.cn/tags/Blender/"/>
    
  </entry>
  
  <entry>
    <title>Blender入门教程（三）：骨骼绑定</title>
    <link href="https://www.zerofc.cn/2025/05/07/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/"/>
    <id>https://www.zerofc.cn/2025/05/07/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/</id>
    <published>2025-05-07T02:13:50.000Z</published>
    <updated>2025-05-08T06:03:28.607Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>不知道大家有没有玩过一些单机游戏的Mod，比如《侠盗猎车》里主角变成奥特曼，各种新能源汽车乱入等等。这些都是别人对原有模型就行修改换皮，并重新绑定骨骼完成的，所以如果会了骨骼绑定后，你也就可以自己制作一些模型到单机游戏里，当然还要一些解包封包的技巧，这个有时间聊，那下面开始Blender的骨骼绑定实操了。</p><h2 id="二、模型准备"><a href="#二、模型准备" class="headerlink" title="二、模型准备"></a>二、模型准备</h2><h3 id="1-创建模型"><a href="#1-创建模型" class="headerlink" title="1.创建模型"></a>1.创建模型</h3><p>我这里以一个机械臂为例，先添加一个立方体变形成长方体，然后添加一个圆柱体，添加时设置顶点为8。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/image-20250507165800868.png" alt="image-20250507165800868"></p><h3 id="2-快速复制"><a href="#2-快速复制" class="headerlink" title="2.快速复制"></a>2.快速复制</h3><p>为了让骨骼绑定的效果更明显，我们要做一个两个节点的机械波，可以对前面的部分进行快速复制（Shift+D）到指定位置，然后按快捷键 ~ 进行视角切换，用来对齐前面的组合。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/image-20250507174252103.png" alt="image-20250507174252103"></p><h2 id="三、骨骼设置"><a href="#三、骨骼设置" class="headerlink" title="三、骨骼设置"></a>三、骨骼设置</h2><h3 id="1-添加骨骼"><a href="#1-添加骨骼" class="headerlink" title="1.添加骨骼"></a>1.添加骨骼</h3><p>点击添加-&gt;骨架-&gt;单段骨骼，一开始他会被模型挡住，这时候找到属性的 “物体” -&gt;视图显示，勾选 “在前面”，还可以把名称显示出来。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/image-20250507175558694.png" alt="image-20250507175558694"></p><h3 id="2-骨骼挤出"><a href="#2-骨骼挤出" class="headerlink" title="2.骨骼挤出"></a>2.骨骼挤出</h3><p>点击骨骼，进入 “编辑模式”，再点击骨骼头部的小圆点，工具栏选择 “挤出” 或按快捷键 “E”，然后朝着需要的方向拖动就能在上一个骨骼上创建一个子骨骼。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/image-20250507192209091.png" alt="image-20250507192209091"></p><h3 id="3-断开骨骼链接"><a href="#3-断开骨骼链接" class="headerlink" title="3.断开骨骼链接"></a>3.断开骨骼链接</h3><p>我这里要做的是第一个骨骼是根骨骼，而他下面的子骨骼要放到模型的内部去。所以就需要和根骨骼进行断开，然后移动子骨骼到指定位置。</p><p>首先点击框选，选中两个骨骼，然后按快捷键 “Alt+P”，</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/image-20250507192627301.png" alt="image-20250507192627301"></p><h2 id="四、骨骼绑定"><a href="#四、骨骼绑定" class="headerlink" title="四、骨骼绑定"></a>四、骨骼绑定</h2><h3 id="1-模型绑定"><a href="#1-模型绑定" class="headerlink" title="1.模型绑定"></a>1.模型绑定</h3><p>切换到物体模式，Shift 选中所有的模型和骨骼(一定要最后选骨骼)，快捷键 “Ctrl+P”，然后选择 “附带自动权重”。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/image-20250507201707775.png" alt="image-20250507201707775"></p><h3 id="2-姿势模式"><a href="#2-姿势模式" class="headerlink" title="2.姿势模式"></a>2.姿势模式</h3><p>点击骨骼，进入姿势模式（只有骨骼物体特有），选中一个骨骼，然后在工具栏选择 旋转，可以发现旋转或移动骨骼，模型也会相应的变换，但还是有个问题，因为是自动权重，有时候后面的骨骼会影响到前面的模型变形，这时候就要我们手动刷一下权重了。</p><p><img src="E:\4work\23md笔记\1_Hexo博客备份\Blender入门教程：骨骼绑定\img\Blender入门教程：骨骼绑定\image-20250508100712867.png" alt="image-20250508100712867"></p><ol start="3"><li><h3 id="顶点组"><a href="#顶点组" class="headerlink" title="顶点组"></a>顶点组</h3></li></ol><p>还一个看是否绑定成功的方法：进入物体模式，点击一个模型，然后在属性视图找到 “数据”-&gt;“顶点组”，里面就是当前模型能被哪些骨骼影响，如果要删除绑定，在顶点组里移除就可以。</p><p><img src="E:\4work\23md笔记\1_Hexo博客备份\Blender入门教程：骨骼绑定\img\Blender入门教程：骨骼绑定\image-20250508101003681.png" alt="image-20250508101003681"></p><h2 id="五、重刷权重"><a href="#五、重刷权重" class="headerlink" title="五、重刷权重"></a>五、重刷权重</h2><h3 id="1-进入权重绘制"><a href="#1-进入权重绘制" class="headerlink" title="1.进入权重绘制"></a>1.进入权重绘制</h3><p>先切到物体模式，然后选中一个模型，再选择 “权重绘制”，还是找到 属性-&gt;数据-&gt;顶点组，里面某一个骨骼都有对当前模型的权重。</p><p>红色到蓝色，接近等于红色权重越高，而越接近蓝色等于蓝色权重越低，为了让对应骨骼能有效控制对应的模型部分，所以就单独进行修改了。</p><p><img src="E:\4work\23md笔记\1_Hexo博客备份\Blender入门教程：骨骼绑定\img\Blender入门教程：骨骼绑定\image-20250508103501511.png" alt="image-20250508103501511"></p><h3 id="2-修改权重"><a href="#2-修改权重" class="headerlink" title="2.修改权重"></a>2.修改权重</h3><p>在能准备修改权重时，最好是能知道顶点组里的每个名称是对应哪个骨骼，在对模型上颜色（权重值）进行修改时，有几个选项，如下：</p><ul><li>F Add (加法)：用于增加选中的权重值。</li><li>F Darken (变暗)：减少选中的权重值，使其变得更暗或更接近0。</li><li>F Draw (绘制)：直接设置选中的权重值，覆盖原有的权重值。</li><li>F Lighten (变亮)：增加选中的权重值，使其变得更亮或更接近1。</li><li>F Mix (混合)：以一种混合的方式结合新绘制的权重值与原有权重值。通常会根据新旧权重值的比例进行混合。</li><li>F Multiply (乘法)：将新绘制的权重值与原有权重值相乘，这通常会使权重值变得更小。</li><li>F Subtract (减法)：从原有权重值中减去新绘制的权重值，降低该区域的权重。</li></ul><p><img src="E:\4work\23md笔记\1_Hexo博客备份\Blender入门教程：骨骼绑定\img\Blender入门教程：骨骼绑定\image-20250508104336512.png" alt="image-20250508104336512"></p><h2 id="六、其他"><a href="#六、其他" class="headerlink" title="六、其他"></a>六、其他</h2><h3 id="1-设置模型关系"><a href="#1-设置模型关系" class="headerlink" title="1.设置模型关系"></a>1.设置模型关系</h3><p>设置模型关系就是父子关系，如果将一个模型作为一个模型的子级，那父级移动旋转他也会移动旋转，在相对规则的动画下可以用这种方式代替骨骼绑定。</p><p>而操作方法有两种：一个是在 “大纲视图”选中一个模型，将其移到另一个模型下，那他就是这个模型的子级了；另一个方法是Shift选中两个模型，“Ctrl+P” 后选择 “物体”，后面就可以看到两个模型间有根虚线。</p><p><img src="E:\4work\23md笔记\1_Hexo博客备份\Blender入门教程：骨骼绑定\img\Blender入门教程：骨骼绑定\image-20250508095131490.png" alt="image-20250508095131490"></p><h3 id="2-模型合并"><a href="#2-模型合并" class="headerlink" title="2.模型合并"></a>2.模型合并</h3><p>为了能后面对模型进行权重绘制，最好对这四个模型合并，不然就是每个都绘制一遍权重。先在物体模式下，Shift 选中四个模型，然后按快捷键 “Ctrl+J”；</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/image-20250507201415939.png" alt="image-20250507201415939"></p><h2 id="七、写在后面"><a href="#七、写在后面" class="headerlink" title="七、写在后面"></a>七、写在后面</h2><p>权重重新修改后，就可以进入姿势模式看效果，旋转一下刚刚超出控制范围的骨骼，如果没有之前那种大范围变形，且比较符合你的预期。</p><p>那么，后面就可以开始用这个骨架进行动画制作了，和Spine类似，在时间轴上做不同的变换，当然里面很多细节性的技巧也有，那下一篇就开始了。</p><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何用Blender对模型进行骨骼绑定。</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Blender" scheme="https://www.zerofc.cn/tags/Blender/"/>
    
  </entry>
  
  <entry>
    <title>Blender入门教程（二）：纹理绘制</title>
    <link href="https://www.zerofc.cn/2025/05/06/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/"/>
    <id>https://www.zerofc.cn/2025/05/06/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/</id>
    <published>2025-05-06T05:13:50.000Z</published>
    <updated>2025-05-08T06:03:16.111Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>通过上一篇文章的简单介绍，我们就可以独立完成模型的创建，但还只是一些灰溜溜的轮廓，少了鲜艳的表皮。所以，这篇文章就开始介绍如何制作皮肤，就是给模型着色，下面就用一个立方体做示例了。</p><h2 id="二、UV编辑"><a href="#二、UV编辑" class="headerlink" title="二、UV编辑"></a>二、UV编辑</h2><h3 id="1-标记缝合边"><a href="#1-标记缝合边" class="headerlink" title="1.标记缝合边"></a>1.标记缝合边</h3><p>选中物体，进入编辑模式后，选择 “边选择模式”，点击物体的一个边，按 “shift” 选中了多个边。怎么选择看你自己对物体剖开的边，UV编辑就是相当于对一个立方体的空包装盒展开平铺。</p><p>选择了多个边后，右键选择 “标记缝合边”，此时的这几条边会加粗显示，代表成功标记，然后打开导航栏的 “UV编辑”。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507144014979.png" alt="image-20250507144014979"></p><h3 id="2-UV展开"><a href="#2-UV展开" class="headerlink" title="2.UV展开"></a>2.UV展开</h3><p>进入UV编辑后，会有两个窗口，一般左边是展开的样子，右边是模型的样子。但是刚开始左边是没有UV的，这时候我们在右边的模型的全选，可以直接快捷键 “A”，也可以点击 “选择”-&gt; “全部”，然后左边就可以看到展开后的样子了。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507144418331.png" alt="image-20250507144418331"></p><h2 id="三、着色编辑"><a href="#三、着色编辑" class="headerlink" title="三、着色编辑"></a>三、着色编辑</h2><h3 id="1-进入着色器编辑"><a href="#1-进入着色器编辑" class="headerlink" title="1.进入着色器编辑"></a>1.进入着色器编辑</h3><p>进入着色器编辑有两种方式，一种是回到导航栏的 “布局”，在下面部分，时间轴点击 “编辑器类型”（回放的左边），然后选择 “着色器编辑器”。另一个就直接点击导航栏的 “着色”。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507144928988.png" alt="image-20250507144928988"></p><h3 id="2-添加纹理"><a href="#2-添加纹理" class="headerlink" title="2.添加纹理"></a>2.添加纹理</h3><p>进入着色编辑器后，点击 “添加”-&gt;“纹理”-&gt;“图像纹理”，然后将新弹出的纹理的 “颜色” 连接到“原理化BSDF”的 “基础色”。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507145448757.png" alt="image-20250507145448757"></p><h3 id="3-新建图像"><a href="#3-新建图像" class="headerlink" title="3.新建图像"></a>3.新建图像</h3><p>新建图像就是给UV上色后的一张图片，也就是模型导出后的皮肤图。找到刚刚添加的那个图像纹理，然后点击 “新建”，输入名称，其他的默认就可以，最后点击确定。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507145913297.png" alt="image-20250507145913297"></p><h2 id="四、纹理绘制"><a href="#四、纹理绘制" class="headerlink" title="四、纹理绘制"></a>四、纹理绘制</h2><h3 id="1-进入纹理绘制"><a href="#1-进入纹理绘制" class="headerlink" title="1.进入纹理绘制"></a>1.进入纹理绘制</h3><p>找到导航栏里的 “纹理绘制”，一般也有有两个窗口，左边是UV展开，右边是模型，一开始都是黑色的。不过要先确认一下左边UV展开窗口上面，是不是显示图像绘制，关联的图像是不是你新建图像的名称。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507150451703.png" alt="image-20250507150451703"></p><h3 id="2-开始绘制"><a href="#2-开始绘制" class="headerlink" title="2.开始绘制"></a>2.开始绘制</h3><p>绘制就在右边窗口，可以旋转角度的上色，我这里是直接填充蓝色，然后再切换到自由线（画笔），在一个面上涂上绿色，用作区别。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507150901683.png" alt="image-20250507150901683"></p><h3 id="3-保存图像"><a href="#3-保存图像" class="headerlink" title="3.保存图像"></a>3.保存图像</h3><p>绘制完毕后，在左边UV展开窗口上面，找到 “图像”，然后保存，这样就把绘制的皮肤存下来的，后面如果你导出模型出来，要和这张图一起发给别人。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507151346938.png" alt="image-20250507151346938"></p><h2 id="五、预览和导出"><a href="#五、预览和导出" class="headerlink" title="五、预览和导出"></a>五、预览和导出</h2><h3 id="1-预览"><a href="#1-预览" class="headerlink" title="1.预览"></a>1.预览</h3><p>绘制和保存图像后，如果我们要先整体预览一下，可以回到导航栏的 “布局” 或者 “建模”，只需要把着色方式改成 “材质预览” 就可以了。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507151718388.png" alt="image-20250507151718388"></p><h3 id="2-导出"><a href="#2-导出" class="headerlink" title="2.导出"></a>2.导出</h3><p>导出的格式有很多，我就以常用的FBX为例，但需要注意的是，纹理有两种，一种是分开为单独的图片，另一种是纹理直接内嵌到FBX中。</p><p>点击导出，选择FBX，弹出的窗口，路径模式，如果是内嵌式纹理，要选择 “复制”，然后把右边的小图标打开，最后导出就可以了。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507152424356.png" alt="image-20250507152424356"></p><h2 id="六、写在后面"><a href="#六、写在后面" class="headerlink" title="六、写在后面"></a>六、写在后面</h2><p>经过这一顿操作，就可以结合布线，拿现有的模型就行调整了，比如换皮肤加一些装饰等等。但只是静态的，要想在游戏中使用或者对游戏改Mod，还需要做骨骼绑定，制作动画，所以接下来就是Blender这方面的实操了，敬请期待~</p><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何用Blender对模型进行贴图绘制。</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Blender" scheme="https://www.zerofc.cn/tags/Blender/"/>
    
  </entry>
  
  <entry>
    <title>Blender入门教程（一）：模型创建</title>
    <link href="https://www.zerofc.cn/2025/05/06/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/"/>
    <id>https://www.zerofc.cn/2025/05/06/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/</id>
    <published>2025-05-06T03:13:50.000Z</published>
    <updated>2025-05-08T06:02:52.407Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>大家都知道，现在AIGC领域日新月异，今天AI大模型能生成粗糙的3D模型，明天就能做成商业级的3D模型，但是如果想要一些细节上也有的，还是需要自己手动对模型的布线进行调整，然后再蒙皮等等。</p><p>所以，AI大模型强大的当下，如果我们是独立开发者或建模爱好者，还是有必要再系统性学习一下基础的建模流程。因为这个世界每当有新技术出现，且能大幅提升生产力的同时，还会继续保有手工的余地的。</p><p>再回到主题，我这个Blender入门教程，其实并不很系统，都是我零零散散实践后总结的。一是给自己做的建模备忘录笔记，二是给同样是作为开发者（非专业建模）的同学，用来快速入门作参考。因为我们职业类似，视角应该也差不多，直接看专业的教程可能比较晦涩，我的虽然粗糙但是浅显易懂呀。</p><h2 id="二、操作"><a href="#二、操作" class="headerlink" title="二、操作"></a>二、操作</h2><h3 id="1-新建项目"><a href="#1-新建项目" class="headerlink" title="1.新建项目"></a>1.新建项目</h3><p>打开Blender软件，点击常规。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/image-20250506154809955.png" alt="image-20250506154809955"></p><h3 id="2-添加网格"><a href="#2-添加网格" class="headerlink" title="2.添加网格"></a>2.添加网格</h3><p>进入窗口后，默认有三个物体，分别是：摄像头、灯光、立方体网格，第一次玩的话，可以先不管这些，直接添加一个新的网格，点击 “添加-&gt;网格-&gt;立方体”。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/image-20250506160226880.png" alt="image-20250506160226880"></p><h3 id="3-编辑模式"><a href="#3-编辑模式" class="headerlink" title="3.编辑模式"></a>3.编辑模式</h3><p>在对网格编辑前，可以先了解一下物体的几个交互模式： 物体模式、编辑模式、雕刻模式、顶点绘制、权重绘制、纹理绘制、姿态模式。</p><p>因为物体有分很多种，比如上面的摄像头网格外，还有骨架、文本等等，而不同的物体就有不同的交互模式，像骨架就没有什么权重绘制什么的。</p><p>网格的就比较多，要对他进行修改，就要选择 “编辑模式”，切换后，左侧工具栏就会多了很多像：挤出选取、环切、倒角、切割等等工具。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/image-20250506161624710.png" alt="image-20250506161624710"></p><h3 id="4-移动快捷键"><a href="#4-移动快捷键" class="headerlink" title="4.移动快捷键"></a>4.移动快捷键</h3><p>这个是我自己总结的叫法，分别是旋转视图和移动视图，因为在对模型修改时特别常用，所以快捷键用起来很方便。</p><p>旋转视图（拖动时可以查看模型的各个角度的面）：鼠标中键盘，移动视图（拖动时平移窗口）：shift+鼠标中键，缩放视图：滚轮滚动。</p><h3 id="5-模型环切"><a href="#5-模型环切" class="headerlink" title="5.模型环切"></a>5.模型环切</h3><p>选择网格，进入编辑模式，选中网格体，然后工具栏选 “环切”，对每个面添加切线，也可以用快捷键 “Ctrl+R” 按住不放再滚动滚轮，能快速切分网格， 如下图（正&#x2F;上: 4x3，侧: 3x3）。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/image-20250506192431444.png" alt="image-20250506192431444"></p><h3 id="6-模型挤出面"><a href="#6-模型挤出面" class="headerlink" title="6.模型挤出面"></a>6.模型挤出面</h3><p>点击 选择模式的 “面选择”，然后点击两侧的一个面，用来延伸出类似手臂的挤出面。选中面后点击工具栏的 “挤出选区”，拖出来就可以了。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/image-20250506192744183.png" alt="image-20250506192744183"></p><h3 id="7-添加镜像生成器"><a href="#7-添加镜像生成器" class="headerlink" title="7.添加镜像生成器"></a>7.添加镜像生成器</h3><p>视图着色方式选择 “线框显示”，工具栏选择 “框选”，然后框选左侧一边后删除顶点。找到属性栏的修改器，添加修改器-&gt;生成-&gt;镜像，因为我们是以Z轴切的，所以对称是Y轴，添加后就可以看到下面图形了。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/image-20250506193316943.png" alt="image-20250506193316943"></p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/image-20250506193626337.png" alt="image-20250506193626337"></p><h3 id="8-挤出头部和腿部"><a href="#8-挤出头部和腿部" class="headerlink" title="8.挤出头部和腿部"></a>8.挤出头部和腿部</h3><p>用同样的方法，将头部和腿部用模型挤出面实现，最后我们一个人形的简单模型就创建成功了。当然要建人物模型，这种方法是不对的，我这里只是演示了一下基本创建和变形的用法。</p><h2 id="五、写在后面"><a href="#五、写在后面" class="headerlink" title="五、写在后面"></a>五、写在后面</h2><p>模型创建只是演示，其实我们最主要目的是熟悉布线的基本方法后，用来对AI生成的、别人做好的模型进行修改。而对模型的修改，布线只是小部分调整，最主要还是修改皮肤，然后重新做动画，所以我后面就是纹理绘制和蒙皮、动画了。</p><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何用Blender创建第一个模型。</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Blender" scheme="https://www.zerofc.cn/tags/Blender/"/>
    
  </entry>
  
  <entry>
    <title>DotNet入门：项目运行</title>
    <link href="https://www.zerofc.cn/2025/04/28/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/"/>
    <id>https://www.zerofc.cn/2025/04/28/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/</id>
    <published>2025-04-28T06:13:50.000Z</published>
    <updated>2025-04-28T08:46:53.621Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>.Net是一个集合了丰富的类库和工具的开发平台，由于他几大主要的组件，使他支持C#、VB、F#等多种编程语言，同时能开发Web应用、桌面应用、控制台应用、移动应用、游戏开发、嵌入式物联网应用、云和微服务等多种类型的应用程序。</p><p>之前只是记录了.Net的环境的搭建，这次将通过一个简单的控制台应用，介绍一下.Net项目的创建，其中包括Visual Studio工具配置、依赖安装、项目创建、项目运行等。</p><h2 id="二、创建项目"><a href="#二、创建项目" class="headerlink" title="二、创建项目"></a>二、创建项目</h2><p>点击 文件-&gt;新建-&gt;项目，在弹出的窗口中，搜索模板：“控制台应用” 或者 ”Console App“。然后选择目标框架：.Net Core 或 .Net Framework （注.高版本如.Net 6已经部分整合了.Net Core和.Net Framework），最后输入项目名，保存。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/image-20250428154033858.png" alt="image-20250428154033858"></p><h2 id="三、依赖安装"><a href="#三、依赖安装" class="headerlink" title="三、依赖安装"></a>三、依赖安装</h2><p>由于我的项目是一个别人写的游戏后台服务，里面有MySql.Data的依赖，所以在运行代码前需要先安装。这里有个小Tips，就是对依赖安装位置的修改，如果不修改，以后下载的都在C盘了。</p><h4 id="1-修改依赖位置"><a href="#1-修改依赖位置" class="headerlink" title="1.修改依赖位置"></a>1.修改依赖位置</h4><p>打开visual studio，工具-&gt;NuGet包管理器-&gt;程序包管理器设置-&gt;NuGet包管理器-&gt;配置文件，然后打开三个文件中的NuGet.Config，添加下面代码（注. globalPackagesFolder位置）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;packageSources&gt;</span><br><span class="line">    &lt;add key=&quot;nuget.org&quot; value=&quot;https://api.nuget.org/v3/index.json&quot; protocolVersion=&quot;3&quot; /&gt;</span><br><span class="line">  &lt;/packageSources&gt;</span><br><span class="line">  &lt;config&gt;</span><br><span class="line">&lt;add key=&quot;globalPackagesFolder&quot; value=&quot;E:/2setsoft/4other/visual-studio-nuget&quot; /&gt;</span><br><span class="line">  &lt;/config&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/image-20250428155148289.png" alt="image-20250428155148289"></p><h4 id="2-下载依赖"><a href="#2-下载依赖" class="headerlink" title="2.下载依赖"></a>2.下载依赖</h4><p>继续从工具里找到 ”管理解决方案的 NuGet 程序包“。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/image-20250428155602050.png" alt="image-20250428155602050"></p><p>点击进去后，点击 ”浏览“，搜索 需要的包，找到后点击安装。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/image-20250428160043916.png" alt="image-20250428160043916"></p><h4 id="3-检查是否引用"><a href="#3-检查是否引用" class="headerlink" title="3.检查是否引用"></a>3.检查是否引用</h4><p>安装完毕后，进入”解决方案资源管理器“，展开 ”引用“，是否有安装的包。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/image-20250428160500906.png" alt="image-20250428160500906"></p><p>如果在引用中没有看到安装的包，或者有感叹号，可以对项目进行清理。点击菜单下 生成-&gt;清理解决方案，然后再 ”重新生成解决方案“。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/image-20250428160721793.png" alt="image-20250428160721793"></p><h2 id="四、运行程序"><a href="#四、运行程序" class="headerlink" title="四、运行程序"></a>四、运行程序</h2><p>安装依赖后，项目根目录会生成一个packages.config，入口文件一般是Mian.cs或Program.cs。然后点击 调试-&gt;开始执行，随后就会弹出一个控制台窗口，同时项目根目录的bin文件夹也会生成exe文件。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/image-20250428162633319.png" alt="image-20250428162633319"></p><h2 id="五、写在后面"><a href="#五、写在后面" class="headerlink" title="五、写在后面"></a>五、写在后面</h2><p>在几个开发平台间，再结合市场和我个人，我还是觉得用.Net更适合一点。首先如果是用的Unity3D引擎，C#语言就是无缝衔接，而且在Visual Studio中有直接和Unity联调的选项，在帧同步网络框架也有很多，比如GDNet、ENet-C#等等。</p><p><img src="https://www.zerofc.cn/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/image-20240805201033707.png" alt="image-20250408165643830"></p>]]></content>
    
    
    <summary type="html">DotNet入门：项目运行</summary>
    
    
    
    <category term="其他编程" scheme="https://www.zerofc.cn/categories/%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="DotNet" scheme="https://www.zerofc.cn/tags/DotNet/"/>
    
  </entry>
  
  <entry>
    <title>DotNet入门：环境安装</title>
    <link href="https://www.zerofc.cn/2025/04/26/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
    <id>https://www.zerofc.cn/2025/04/26/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</id>
    <published>2025-04-26T06:13:50.000Z</published>
    <updated>2025-04-26T12:32:03.559Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>本想用 Go 语言实现一个通过小爱同学操作电脑的，比如我对着手机说打开音乐，或调小音乐，电脑能做相应的处理。奈何我一时间没看懂，就想着用.Net来试一下，于是就有了下面这篇文章。</p><h2 id="二、安装-Net环境"><a href="#二、安装-Net环境" class="headerlink" title="二、安装.Net环境"></a>二、安装.Net环境</h2><h4 id="1-下载位置"><a href="#1-下载位置" class="headerlink" title="1.下载位置"></a>1.下载位置</h4><p>下载.Net SDK，位置：<a href="https://dotnet.microsoft.com/zh-cn/download">https://dotnet.microsoft.com/zh-cn/download</a></p><h4 id="2-开始安装"><a href="#2-开始安装" class="headerlink" title="2.开始安装"></a>2.开始安装</h4><p>运行下载后的SDK安装包，默认会安装到系统盘，直接下一步，最后cmd输入下面命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet --version</span><br></pre></td></tr></table></figure><p>查看版本后，表示已经安装成功，这里强调一下Visual Studio版本和.Net版本有关联，比如.NET 8需要VS 2022 17.8+支持。如果下面VS编辑器无法选择单独安装的.Net8，就要检查或升级一下Visual Studio了。</p><h2 id="三、Visual-Studio-编辑器安装"><a href="#三、Visual-Studio-编辑器安装" class="headerlink" title="三、Visual Studio 编辑器安装"></a>三、Visual Studio 编辑器安装</h2><h4 id="1-安装WPF组件"><a href="#1-安装WPF组件" class="headerlink" title="1.安装WPF组件"></a>1.安装WPF组件</h4><p>点击创建项目，搜索WPF，如果没有该模板，就选择 “安装多个工具和功能”。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/image-20250426173040523.png" alt="image-20250426173040523"></p><h4 id="2-下载-NET桌面开发"><a href="#2-下载-NET桌面开发" class="headerlink" title="2.下载.NET桌面开发"></a>2.下载.NET桌面开发</h4><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/image-20250426173315673.png" alt="image-20250426173315673"></p><h2 id="四、创建项目"><a href="#四、创建项目" class="headerlink" title="四、创建项目"></a>四、创建项目</h2><h4 id="1-选择模板"><a href="#1-选择模板" class="headerlink" title="1.选择模板"></a>1.选择模板</h4><p>选择创建新项目后，搜索 “WPF” 后选中进入。</p><h4 id="2-项目结构说明"><a href="#2-项目结构说明" class="headerlink" title="2.项目结构说明"></a>2.项目结构说明</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HelloWorldWPF/</span><br><span class="line">├── Properties/</span><br><span class="line">├── App.xaml        // 应用程序入口</span><br><span class="line">├── App.xaml.cs</span><br><span class="line">├── MainWindow.xaml // 主窗口定义</span><br><span class="line">└── MainWindow.xaml.cs</span><br></pre></td></tr></table></figure><h4 id="3-修改XAML-MainWindow-xaml"><a href="#3-修改XAML-MainWindow-xaml" class="headerlink" title="3.修改XAML(MainWindow.xaml)"></a>3.修改XAML(MainWindow.xaml)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;Window x:Class=&quot;HelloWorldWPF.MainWindow&quot;</span><br><span class="line">        xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span><br><span class="line">        xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span><br><span class="line">        xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span><br><span class="line">        xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span><br><span class="line">        xmlns:local=&quot;clr-namespace:HelloWorldWPF&quot;</span><br><span class="line">        mc:Ignorable=&quot;d&quot;</span><br><span class="line">        Title=&quot;Hello World App&quot; Height=&quot;200&quot; Width=&quot;300&quot;&gt;</span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;StackPanel VerticalAlignment=&quot;Center&quot; HorizontalAlignment=&quot;Center&quot;&gt;</span><br><span class="line">            &lt;Button x:Name=&quot;ClickButton&quot; </span><br><span class="line">                    Content=&quot;点击显示问候语&quot; </span><br><span class="line">                    Padding=&quot;10&quot; </span><br><span class="line">                    Margin=&quot;5&quot;</span><br><span class="line">                    Click=&quot;ClickButton_Click&quot;/&gt;</span><br><span class="line">            &lt;TextBlock x:Name=&quot;HelloText&quot; </span><br><span class="line">                       Text=&quot;等待点击...&quot;</span><br><span class="line">                       FontSize=&quot;16&quot;</span><br><span class="line">                       Margin=&quot;5&quot;</span><br><span class="line">                       HorizontalAlignment=&quot;Center&quot;/&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Window&gt;</span><br></pre></td></tr></table></figure><h4 id="4-添加-C-代码（MainWindow-xaml-cs）"><a href="#4-添加-C-代码（MainWindow-xaml-cs）" class="headerlink" title="4.添加 C# 代码（MainWindow.xaml.cs）"></a>4.添加 C# 代码（MainWindow.xaml.cs）</h4><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Windows;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorldWPF</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ClickButton_Click</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            HelloText.Text = <span class="string">&quot;Hello World! \n欢迎来到WPF世界！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-运行程序"><a href="#4-运行程序" class="headerlink" title="4.运行程序"></a>4.运行程序</h4><p>按 Ctrl+F5 或 绿色箭头运行后，会弹出预览窗口，并在项目的bin中生成对应的打包exe程序。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/image-20250426201625098.png" alt="image-20250426201625098"></p><h2 id="五、写在后面"><a href="#五、写在后面" class="headerlink" title="五、写在后面"></a>五、写在后面</h2><p>试玩.Net还有一个原因是，我之前还有一个Unity3D小游戏在做。也看了很多别人的案例，都是用 .Net 做的服务端，学了这个，也方便以后能将单机小游戏改成多人实时对战的联机游戏。</p><p><img src="https://www.zerofc.cn/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/image-20240805201033707.png" alt="image-20250408165643830"></p>]]></content>
    
    
    <summary type="html">DotNet入门：环境安装</summary>
    
    
    
    <category term="其他编程" scheme="https://www.zerofc.cn/categories/%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="DotNet" scheme="https://www.zerofc.cn/tags/DotNet/"/>
    
  </entry>
  
  <entry>
    <title>Go语言入门：环境安装</title>
    <link href="https://www.zerofc.cn/2025/04/25/Go%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
    <id>https://www.zerofc.cn/2025/04/25/Go%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</id>
    <published>2025-04-25T08:13:50.000Z</published>
    <updated>2025-04-25T09:31:29.312Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>这里不同于其他人的Go语言入门，环境安装我向来注重配置，比如依赖包、缓存的默认目录。因为前期不弄好，后面要整理又影响这影响那的，所以就干脆写成文章，方便后期捡起。</p><h2 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h2><h4 id="1-安装包"><a href="#1-安装包" class="headerlink" title="1.安装包"></a>1.安装包</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://go.dev/dl/</span><br><span class="line">https://golang.google.cn/dl/</span><br></pre></td></tr></table></figure><h4 id="2-操作"><a href="#2-操作" class="headerlink" title="2.操作"></a>2.操作</h4><p>将msi安装到指定位置， D:\Go\bin添加到环境变量path</p><h4 id="3-验证"><a href="#3-验证" class="headerlink" title="3.验证"></a>3.验证</h4><p>cmd输入go version查看版本号，go run test.go执行脚本</p><h2 id="三、环境配置"><a href="#三、环境配置" class="headerlink" title="三、环境配置"></a>三、环境配置</h2><h4 id="1-查看Go变量"><a href="#1-查看Go变量" class="headerlink" title="1.查看Go变量"></a>1.查看Go变量</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go env</span><br></pre></td></tr></table></figure><h4 id="2-修改环境配置"><a href="#2-修改环境配置" class="headerlink" title="2.修改环境配置"></a>2.修改环境配置</h4><p>通过上面命令查看基本默认配置后，这里就是用来修改go运行的缓存位置，模块安装位置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go env -w GOMODCACHE=E:\2setsoft\2tool\go\ENV\go_modcache</span><br></pre></td></tr></table></figure><h2 id="四、项目创建"><a href="#四、项目创建" class="headerlink" title="四、项目创建"></a>四、项目创建</h2><h4 id="1-基本目录"><a href="#1-基本目录" class="headerlink" title="1.基本目录"></a>1.基本目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">src 目录存放源代码。</span><br><span class="line">pkg 目录存放编译后的包。</span><br><span class="line">bin 目录存放编译后的可执行文件。</span><br></pre></td></tr></table></figure><h4 id="2-初始化Go模块"><a href="#2-初始化Go模块" class="headerlink" title="2.初始化Go模块"></a>2.初始化Go模块</h4><p>在项目目录中运行 go mod init 命令来初始化一个新的 Go 模块。你需要提供一个唯一的模块路径，通常是代码仓库的 URL。</p><p>生成一个 go.mod 文件，用于记录项目的依赖关系, 初始化时只有一个go版本，当go get下载了依赖包后，会自动在go.mod文件中记录依赖包的版本号，并生成.sum文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go mod init myfirstgo</span><br></pre></td></tr></table></figure><h4 id="3-添加依赖"><a href="#3-添加依赖" class="headerlink" title="3.添加依赖"></a>3.添加依赖</h4><p>如果你的项目需要使用第三方库，可以使用 go get 命令来添加依赖。例如，如果你想使用 github.com&#x2F;gin-gonic&#x2F;gin 这个库，可以运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get fyne.io/fyne/v2/app</span><br></pre></td></tr></table></figure><p>这将自动更新 go.mod 文件，添加相应的依赖项。</p><h4 id="4-编写Go程序"><a href="#4-编写Go程序" class="headerlink" title="4.编写Go程序"></a>4.编写Go程序</h4><p>根目录下创建main.go 文件并编写你的 Go 程序。以下是一个简单的示例代码，它将输出“Hello, World!”：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">    fmt.Println(&quot;Hello, World!&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-运行Go程序"><a href="#5-运行Go程序" class="headerlink" title="5.运行Go程序"></a>5.运行Go程序</h4><p>在项目目录中，使用 go run 命令来编译并运行你的 Go 程序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go run main.go</span><br></pre></td></tr></table></figure><h4 id="6-构建Go程序-打包exe"><a href="#6-构建Go程序-打包exe" class="headerlink" title="6.构建Go程序 (打包exe)"></a>6.构建Go程序 (打包exe)</h4><p>(1). 进入当前目录</p><p>(2). 输入命令 go run main.go</p><p>(3). 不打开GUI黑框的打包命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -ldflags=&quot;-H=windowsgui&quot; -o download_tool.exe  main.go</span><br></pre></td></tr></table></figure><p>(4). 直接编译打包运行，有黑框</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -o download_tool.exe main.go</span><br></pre></td></tr></table></figure><h2 id="五、附加"><a href="#五、附加" class="headerlink" title="五、附加"></a>五、附加</h2><h4 id="1-单元测试"><a href="#1-单元测试" class="headerlink" title="1.单元测试"></a>1.单元测试</h4><p>Go 提供了简单的单元测试框架。你可以在项目中添加测试文件，文件名通常以 _test.go 结尾。例如，创建一个 main_test.go 文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">    &quot;testing&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func TestHelloWorld(t *testing.T) &#123;</span><br><span class="line">    expected := &quot;Hello, World!&quot;</span><br><span class="line">    actual := &quot;Hello, World!&quot;</span><br><span class="line">    if actual != expected &#123;</span><br><span class="line">        t.Errorf(&quot;Expected %q, but got %q&quot;, expected, actual)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-格式化代码"><a href="#2-格式化代码" class="headerlink" title="2.格式化代码"></a>2.格式化代码</h4><p>Go 提供了 gofmt 命令来格式化代码，使其符合 Go 的代码风格规范：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gofmt -w .</span><br></pre></td></tr></table></figure><p>这将自动格式化项目目录下的所有 Go 文件。</p><h4 id="3-打包程序不退出"><a href="#3-打包程序不退出" class="headerlink" title="3.打包程序不退出"></a>3.打包程序不退出</h4><p>编写的Go程序，为了让其打包后exe应用启动后不退出，可以这样处理：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(&quot;按回车键退出……&quot;)</span><br><span class="line">fmt.Scanln()</span><br></pre></td></tr></table></figure><h4 id="4-AI编程助手"><a href="#4-AI编程助手" class="headerlink" title="4.AI编程助手"></a>4.AI编程助手</h4><p>在VsCode安装 <strong>Fitten Code</strong> 后，点击左上角工具栏中的Fitten Code – 开始对话或者使用快捷键Ctrl+Alt+C</p><h2 id="六、写在后面"><a href="#六、写在后面" class="headerlink" title="六、写在后面"></a>六、写在后面</h2><p>写完环境搭建，后面可能是用Go来做一些小工具，比如批量的文件图片下载器，office批量转pdf，可以手机在局域网内控制电脑基本操作等等，敬请期待~</p><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">Go语言入门：环境安装</summary>
    
    
    
    <category term="其他编程" scheme="https://www.zerofc.cn/categories/%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Go语言" scheme="https://www.zerofc.cn/tags/Go%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>PHP如何在Windows中定义CMD命令</title>
    <link href="https://www.zerofc.cn/2025/04/15/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/"/>
    <id>https://www.zerofc.cn/2025/04/15/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/</id>
    <published>2025-04-15T08:13:50.000Z</published>
    <updated>2025-04-16T11:25:08.086Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>不知道大家有没有遇到过，自己做的系统最后业务操作得自己来。对于那种一条数据要一个一个点进去操作得，作为程序员哪能忍，顺手就要做一个批量操作的功能！</p><p>但是，要做功能还得改UI界面，为了偷懒，直接做成命令型的，反正也是给自己用的，最好就是用Windows的命令直接操作。</p><h2 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h2><p>1.PHP项目下自定义指令</p><p>2.将指令启动做成windows批处理</p><p>3.批处理文件添加到环境变量</p><h2 id="三、自定义指令"><a href="#三、自定义指令" class="headerlink" title="三、自定义指令"></a>三、自定义指令</h2><p>项目使用ThinkPHP框架，通过继承Command实现一个符合业务的指令，以下为演示代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params">Input <span class="variable">$input</span>, Output <span class="variable">$output</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$envMap</span> = [</span><br><span class="line">[</span><br><span class="line"><span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;\033[31m▲开发环境\033[0m&quot;</span>,</span><br><span class="line"><span class="string">&quot;database&quot;</span> =&gt; <span class="string">&quot;xxx.xx.xxx.xxx&quot;</span>,</span><br><span class="line">],</span><br><span class="line">[</span><br><span class="line"><span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;\033[33m★生产环境\033[0m&quot;</span>,</span><br><span class="line"><span class="string">&quot;database&quot;</span> =&gt; <span class="string">&quot;yyy.yyy.yyy.yy&quot;</span></span><br><span class="line">]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="variable">$envMapReset</span> = <span class="title function_ invoke__">array_column</span>(<span class="variable">$envMap</span>, <span class="literal">null</span>, <span class="string">&quot;database&quot;</span>);</span><br><span class="line"><span class="variable">$currEnv</span> = <span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&quot;database.hostname&quot;</span>) ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$currEnvName</span> = <span class="variable">$envMapReset</span>[<span class="variable">$currEnv</span>][<span class="string">&quot;name&quot;</span>] ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$currEnvName</span>) &#123;</span><br><span class="line"><span class="variable">$output</span>-&gt;<span class="title function_ invoke__">error</span>(<span class="string">&quot;\033[33m当前未连接数据库~\033[0m&quot;</span>);<span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//$res = $output-&gt;ask($input, &quot;当前数据库为1，是否继续&quot;);</span></span><br><span class="line"><span class="comment">//$isContinue = $output-&gt;choice($input, &quot;当前是&quot;.$currEnvName. &quot;，是否继续？&quot;,[&quot;A.继续&quot;, &quot;B.取消&quot;]);</span></span><br><span class="line"><span class="variable">$isContinue</span> = <span class="variable">$output</span>-&gt;<span class="title function_ invoke__">confirm</span>(<span class="variable">$input</span>, <span class="string">&quot;当前&quot;</span>.<span class="variable">$currEnvName</span>. <span class="string">&quot;，是否继续？&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$isContinue</span>) &#123;</span><br><span class="line"><span class="variable">$excelPath</span> = <span class="variable">$output</span>-&gt;<span class="title function_ invoke__">ask</span>(<span class="variable">$input</span>, <span class="string">&quot;\033[32m请输入表格地址：\033[0m&quot;</span>);</span><br><span class="line"><span class="variable">$excelObj</span> = <span class="keyword">new</span> <span class="title class_">Excel</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入获取数据</span></span><br><span class="line"><span class="variable">$baseImportPath</span> = <span class="string">&quot;E:\\4work\\01_Upload_Price\\01_Import\\&quot;</span>;</span><br><span class="line"><span class="variable">$excelData</span> = <span class="variable">$excelObj</span>-&gt;<span class="title function_ invoke__">importExcel</span>(<span class="variable">$baseImportPath</span>.<span class="variable">$excelPath</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$goodsItemArr</span> = <span class="title class_">Excel</span>::<span class="title function_ invoke__">formattingCells</span>(<span class="variable">$excelData</span>, <span class="variable">$this</span>-&gt;importDict);</span><br><span class="line"></span><br><span class="line"><span class="variable">$orderArr</span> = <span class="title function_ invoke__">array_column</span>(<span class="variable">$goodsItemArr</span>, <span class="string">&#x27;sn&#x27;</span>);</span><br><span class="line"><span class="variable">$orderMap</span>[] = [<span class="string">&#x27;sn&#x27;</span>, <span class="string">&#x27;in&#x27;</span>, <span class="variable">$orderArr</span>];</span><br><span class="line"><span class="variable">$fields</span> = [<span class="string">&#x27;sn, user_coupon_id&#x27;</span>];</span><br><span class="line"><span class="variable">$orderList</span> = <span class="title class_">Db</span>::<span class="title function_ invoke__">name</span>(<span class="string">&#x27;order&#x27;</span>)-&gt;<span class="title function_ invoke__">field</span>(<span class="variable">$fields</span>)-&gt;<span class="title function_ invoke__">where</span>(<span class="variable">$orderMap</span>)-&gt;<span class="title function_ invoke__">select</span>();</span><br><span class="line"><span class="variable">$orderListReset</span> = <span class="title function_ invoke__">array_column</span>(<span class="variable">$orderList</span>, <span class="literal">null</span>, <span class="string">&#x27;sn&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$noMatchOrder</span> = [];</span><br><span class="line"><span class="variable">$ReMatchOrder</span> = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$goodsItemArr</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; &amp;<span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$transactionPrice</span> = <span class="variable">$value</span>[<span class="string">&#x27;transaction_price&#x27;</span>];</span><br><span class="line"><span class="variable">$currOrder</span> = <span class="variable">$orderListReset</span>[<span class="variable">$value</span>[<span class="string">&#x27;sn&#x27;</span>]];</span><br><span class="line"><span class="variable">$currOrderCouponId</span> = <span class="variable">$currOrder</span>[<span class="string">&#x27;user_coupon_id&#x27;</span>] ?? <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$coupon</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">automaticMatch</span>(<span class="variable">$currOrder</span>, <span class="variable">$transactionPrice</span>);</span><br><span class="line"><span class="variable">$couponValue</span> = <span class="variable">$coupon</span>[<span class="string">&#x27;coupon_value&#x27;</span>] ?? <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$currOrderCouponId</span> != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$couponValue</span> == <span class="number">0</span> &amp;&amp; <span class="variable">$transactionPrice</span> &gt;= <span class="number">200</span>) &#123;</span><br><span class="line"><span class="variable">$noMatchOrder</span>[] = <span class="variable">$value</span>[<span class="string">&#x27;sn&#x27;</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable">$value</span>[<span class="string">&#x27;coupon_price&#x27;</span>] = <span class="variable">$couponValue</span>;</span><br><span class="line"><span class="variable">$ReMatchOrder</span>[] = <span class="variable">$value</span>[<span class="string">&#x27;sn&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$output</span>-&gt;<span class="title function_ invoke__">writeln</span>(<span class="string">&quot;\033[31m未匹配到加价券订单：\033[0m&quot;</span>. <span class="title function_ invoke__">implode</span>(<span class="string">&quot;,&quot;</span>, <span class="variable">$noMatchOrder</span>) . <span class="string">&quot;;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$output</span>-&gt;<span class="title function_ invoke__">newLine</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$output</span>-&gt;<span class="title function_ invoke__">writeln</span>(<span class="string">&quot;\033[36m重新匹配的加价券订单：\033[0m&quot;</span>. <span class="title function_ invoke__">implode</span>(<span class="string">&quot;,&quot;</span>, <span class="variable">$ReMatchOrder</span>) . <span class="string">&quot;;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$output</span>-&gt;<span class="title function_ invoke__">newLine</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$savePath</span> = <span class="string">&quot;E:\\4work\\01_Upload_Price\\02_Output\\&quot;</span>;</span><br><span class="line"><span class="variable">$filePath</span> = <span class="variable">$excelObj</span>-&gt;<span class="title function_ invoke__">outPutToPath</span>(<span class="variable">$goodsItemArr</span>, <span class="variable">$this</span>-&gt;outputDict, <span class="variable">$savePath</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$output</span>-&gt;<span class="title function_ invoke__">writeln</span>(<span class="string">&quot;导出地址：&quot;</span>. <span class="variable">$filePath</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、添加批处理"><a href="#四、添加批处理" class="headerlink" title="四、添加批处理"></a>四、添加批处理</h2><p>在TP的项目根目录下新建一个批处理文件，并将绝对路径复制进入，比如php_think.bat，可以把下面代码改成自己的保存就可以了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">php &quot;E:\2setsoft\1dev\phpstudy_pro\WWW\1work\hhhs_admin\think&quot; %*</span><br></pre></td></tr></table></figure><h2 id="五、添加环境变量"><a href="#五、添加环境变量" class="headerlink" title="五、添加环境变量"></a>五、添加环境变量</h2><p>打开“我的电脑”-&gt;“属性”-&gt;“高级系统设置”-&gt;“环境变量”, 找到系统变量下的“path”，然后将创建了批处理的bat的绝对路径粘贴到Path中。</p><h2 id="六、运行"><a href="#六、运行" class="headerlink" title="六、运行"></a>六、运行</h2><p>打开电脑的cmd面板，直接输入创建的批处理名称，比如我的是php_think.bat，在面板中输入php_think就会调起项目中的指令，后面再带上PHP项目指令名称。</p><p><img src="/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20250416172110092.png" alt="image-20250416172110092"></p><h2 id="七、写在后面"><a href="#七、写在后面" class="headerlink" title="七、写在后面"></a>七、写在后面</h2><p>其实这样有一个问题，就是我们项目中的所有指令都暴露在CMD之下了，所以，留下一个延伸点，如何限制不同的系统用户操作命令权限？</p><p><img src="/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何在Windows下自定义Cmd命令。</summary>
    
    
    
    <category term="PHP开发" scheme="https://www.zerofc.cn/categories/PHP%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="windows技巧" scheme="https://www.zerofc.cn/tags/windows%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Spine动画教程：剪裁的应用</title>
    <link href="https://www.zerofc.cn/2025/04/08/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>https://www.zerofc.cn/2025/04/08/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/</id>
    <published>2025-04-08T08:13:50.000Z</published>
    <updated>2025-04-14T08:48:59.826Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>Spine中的剪裁功能，其实就是类似于视频工具里的遮罩，常被用来做带有专场的结算动画。比如那种开场全屏后冒出一些文字的这种酷炫效果，那下面就演示一下吧。</p><h2 id="二、操作"><a href="#二、操作" class="headerlink" title="二、操作"></a>二、操作</h2><h4 id="1-创建骨骼"><a href="#1-创建骨骼" class="headerlink" title="1.创建骨骼"></a>1.创建骨骼</h4><p>先按正常操作，将图片素材放到装配窗口，绑定骨骼。</p><h4 id="2-添加剪裁"><a href="#2-添加剪裁" class="headerlink" title="2.添加剪裁"></a>2.添加剪裁</h4><p>点击根骨骼root，在层级树下方新建，添加 “剪裁”。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/image-20250414152914443.png" alt="image-20250414152914443"></p><h4 id="3-编辑剪裁"><a href="#3-编辑剪裁" class="headerlink" title="3.编辑剪裁"></a>3.编辑剪裁</h4><p>点击新建，在装配窗口添加几个顶点，自定义一个形状。退出编辑后，除那个形状里的内容能显示外，其他的都隐藏起来了。</p><h4 id="4-编辑动画"><a href="#4-编辑动画" class="headerlink" title="4.编辑动画"></a>4.编辑动画</h4><p>有了剪裁，那要完成转场效果，就是将剪裁框外的素材陆续移动进去就可以了。</p><p>但如果要完成渐入渐出的效果，就要用到颜色了。</p><h4 id="5-渐入渐出效果"><a href="#5-渐入渐出效果" class="headerlink" title="5.渐入渐出效果"></a>5.渐入渐出效果</h4><p>在动画模式下，选中需要有渐隐效果的插槽，在第一帧时候，找到插槽的颜色。如果一开始要显示，则颜色不动，再到需要隐藏的关键帧位置，点击颜色，将透明度调低。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/image-20250414161738952.png" alt="image-20250414161738952"></p><h4 id="6-切换附件效果"><a href="#6-切换附件效果" class="headerlink" title="6.切换附件效果"></a>6.切换附件效果</h4><p>这个效果有点类似皮肤，只不过是不能被比如Unity3D操作的皮肤。效果就是动画到一个时间点后，脸部的表情换了一个，或者可以将同一个插槽下的附件（不同的颜色），通过显示隐藏的切换，能放在不同的动画下。</p><p>操作就是找到一个要切换的插槽，在层级树的图片中拖入到该插槽下，插槽下的附件左边有一个小圆点。在动画模式下，只需要在指定关键帧下，显示隐藏对应的附件即可。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/image-20250414162710225.png" alt="image-20250414162710225"></p><h2 id="三、写在后面"><a href="#三、写在后面" class="headerlink" title="三、写在后面"></a>三、写在后面</h2><p>可能当时Spine这个软件定位就是制作立绘动画，所以才没有像类似镜头的功能，导致要实现那种很酷炫的带运镜动画，就要导出后在别的软件中编辑。</p><p>但是我之前看过别人同样是用Spine，实现了很多伪运镜的动画，找时间我也研究一下再拆解分享出来，这次就到这里了，下次再见~</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何在Spine3.8.75中设置约束。</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Spine" scheme="https://www.zerofc.cn/tags/Spine/"/>
    
  </entry>
  
  <entry>
    <title>Spine动画教程：约束设置</title>
    <link href="https://www.zerofc.cn/2025/04/08/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/"/>
    <id>https://www.zerofc.cn/2025/04/08/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/</id>
    <published>2025-04-08T08:13:50.000Z</published>
    <updated>2025-04-14T08:50:26.722Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>在Spine编辑工具中，约束有三个，分别是：IK约束，路径约束，变换约束，每个都有不同的作用，但是最主要的就是为了节省K帧步骤。</p><p>比如变换约束是对两个骨骼的联动操作，控制一个骨骼的移动旋转，可以控制另一个骨骼的移动旋转等；</p><p>路径约束是一个骨骼要沿着一个画好的路径移动，常用于动画的寻轨，如果没有这个，对于不是直线的移动，到了转弯的地方就要打关键帧，一点一点K出来。</p><p>IK约束，反向运动学约束，就是通过控制两个骨骼末端，两个骨骼在运动时，由算法自动模拟出符合人类直觉的运动轨迹，常用于手、腿和脚等关节位置。</p><p>下面就对这三个约束设置进行简单的演示。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414100527042.png" alt="image-20250414100527042"></p><h2 id="二、变换约束"><a href="#二、变换约束" class="headerlink" title="二、变换约束"></a>二、变换约束</h2><h4 id="1-导入图片并绑定骨骼"><a href="#1-导入图片并绑定骨骼" class="headerlink" title="1.导入图片并绑定骨骼"></a>1.导入图片并绑定骨骼</h4><h4 id="2-新建骨骼（用于被操作）"><a href="#2-新建骨骼（用于被操作）" class="headerlink" title="2.新建骨骼（用于被操作）"></a>2.新建骨骼（用于被操作）</h4><p>这个骨骼可以是其他骨骼下的子骨骼，就是操作这个骨骼能影响其他的骨骼。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414110138345.png" alt="image-20250414110138345"></p><h4 id="3-创建变换约束"><a href="#3-创建变换约束" class="headerlink" title="3.创建变换约束"></a>3.创建变换约束</h4><p>点击一个骨骼，在层级树窗下方新建 “变换约束”。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414110250420.png" alt="image-20250414110250420"></p><h4 id="4-变换约束设置"><a href="#4-变换约束设置" class="headerlink" title="4.变换约束设置"></a>4.变换约束设置</h4><p>新建后选中上面创建的骨骼并输入一个名字后，在层级树窗口就可以看到新建的约束了。点击该约束名，就是配置参数了，混合是变化的力度，要对某项控制就移动滑滚，最后点击匹配。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414110546403.png" alt="image-20250414110546403"></p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414110947459.png" alt="image-20250414110947459"></p><h4 id="5-操作"><a href="#5-操作" class="headerlink" title="5.操作"></a>5.操作</h4><p>点击匹配后，再点击被操作骨骼，旋转和移动他，就会根据变换约束设置的混合参数进行变换了。根据参数其实也能做出很多玩法，比如操作A骨骼，使B骨骼反向移动后旋转等。</p><h2 id="三、路径约束"><a href="#三、路径约束" class="headerlink" title="三、路径约束"></a>三、路径约束</h2><h4 id="1-新建路径"><a href="#1-新建路径" class="headerlink" title="1.新建路径"></a>1.新建路径</h4><p>还是用上面的两个骨骼，这里就分别叫 “图片骨骼” 和 “被操作骨骼” 了。选择图片骨骼，在层级树窗口下点击新建，添加路径，进入到路径编辑，添加一条自定义的路径后退出。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414113336757.png" alt="image-20250414113336757"></p><h4 id="2-新建路径约束"><a href="#2-新建路径约束" class="headerlink" title="2.新建路径约束"></a>2.新建路径约束</h4><p>点击图片骨骼，再在层级树窗口，新建选择 “路径约束”，选中上面创建的路径，这样图片骨骼就和路径进行绑定了。通过点击参数窗的 “位置”，就可以看到图片在路径上移动。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414114434305.png" alt="image-20250414114434305"></p><h2 id="四、IK约束"><a href="#四、IK约束" class="headerlink" title="四、IK约束"></a>四、IK约束</h2><h4 id="1-创建两个骨骼"><a href="#1-创建两个骨骼" class="headerlink" title="1.创建两个骨骼"></a>1.创建两个骨骼</h4><p>两个骨骼全都绑定了图片。</p><h4 id="2-创建IK约束"><a href="#2-创建IK约束" class="headerlink" title="2.创建IK约束"></a>2.创建IK约束</h4><p>选中一个骨骼，在层级树窗口下新建，选择 “IK约束”，自定义一个名称后，选中另一个骨骼（目标）。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414131518631.png" alt="image-20250414131518631"></p><h4 id="3-操作"><a href="#3-操作" class="headerlink" title="3.操作"></a>3.操作</h4><p>设置完后，通过拖动目标骨骼，进行移动，IK约束就会对另一个骨骼进行算法驱动。比如往下拉，上面的骨骼也会根据夹角往下移动。</p><h2 id="五、写在后面"><a href="#五、写在后面" class="headerlink" title="五、写在后面"></a>五、写在后面</h2><p>在Spine中，掌握了骨骼绑定，网格操作和约束后，其实就可以非常流畅的制作很多动画了。</p><p>其他的就是在K帧中的小技巧了，比如渐入渐出，换皮肤，遮罩，这些要用到颜色，剪裁了。</p><p>如果做的是游戏动画，事件、边界框、音频，这些掌握后，Spine的功能几乎就没有了。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何在Spine3.8.75中设置约束。</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Spine" scheme="https://www.zerofc.cn/tags/Spine/"/>
    
  </entry>
  
  <entry>
    <title>Spine动画教程：皮肤制作</title>
    <link href="https://www.zerofc.cn/2025/04/08/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/"/>
    <id>https://www.zerofc.cn/2025/04/08/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/</id>
    <published>2025-04-08T08:13:50.000Z</published>
    <updated>2025-04-08T12:06:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>搁了很久的抖音直播小玩法开发，最近又让我想起来了。由于是初次尝试，所以我将开发费用的预算降到为零。不但不买服务器采用UnitySDK的指令直推，而且游戏的资产也用AI生成，主打省时又省钱。</p><p>但是图片有了，动画还是得自己做，于是我又从零开始学了一下Spine动画制作。整个过程也是有很多值得记录下来的，比如制作皮肤的教程，网上还是比较少，问DeepSeek也不全，做完后导入Unity3D报错等问题。所以，跟着我这篇文章动手走一遍，还是能快速制作动画皮肤的。</p><h2 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h2><p>Spine 3.8.75</p><p>spine-unity-3.8-2021-11-10</p><h2 id="三、皮肤制作"><a href="#三、皮肤制作" class="headerlink" title="三、皮肤制作"></a>三、皮肤制作</h2><p>在动手制作前，可以先对照一下自己的Spine版本，和Unity3D的Spine插件版本，后面我会说一个很有意思的导入问题，那下面就开始如何制作皮肤了。</p><h3 id="1-简单的图片皮肤示例"><a href="#1-简单的图片皮肤示例" class="headerlink" title="1.简单的图片皮肤示例"></a>1.简单的图片皮肤示例</h3><h4 id="1-1-画面创建"><a href="#1-1-画面创建" class="headerlink" title="1.1.画面创建"></a>1.1.画面创建</h4><p>导入两张形状一致，但纹理不同的图片，然后两张图全部绑定在一个骨骼下，层级结构参考下图。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408165643830.png" alt="image-20250408165643830"></p><h4 id="1-2-添加皮肤"><a href="#1-2-添加皮肤" class="headerlink" title="1.2.添加皮肤"></a>1.2.添加皮肤</h4><p>在层级树的皮肤中，点击创建两个皮肤，名字自定义。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408165839140.png" alt="image-20250408165839140"></p><h4 id="1-3-创建皮肤占位符"><a href="#1-3-创建皮肤占位符" class="headerlink" title="1.3.创建皮肤占位符"></a>1.3.创建皮肤占位符</h4><p>在层级树中选择一个皮肤，点击左边的 “眼睛（小圆点，表显示）”，然后选中某插槽下的一个附件（图片）。选择后再点击下面的 “新建” -&gt; “皮肤占位符”。，名字自定。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408171257613.png" alt="image-20250408171257613"></p><h4 id="1-4-检查皮肤切换"><a href="#1-4-检查皮肤切换" class="headerlink" title="1.4.检查皮肤切换"></a>1.4.检查皮肤切换</h4><p>通过点击皮肤左边的眼睛按钮，看看能不能展开皮肤占位符里的附件，因为给附件添加皮肤占位符后，就被折叠进占位符中了。</p><h4 id="1-5-创建动画"><a href="#1-5-创建动画" class="headerlink" title="1.5.创建动画"></a>1.5.创建动画</h4><p>进入动画模式后，点击两张图片上的骨骼，在摄影表中给该骨骼添加移动的关键帧，最后我们在播放时就可以切换皮肤了。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408171833203.png" alt="image-20250408171833203"></p><h3 id="2-简单的网格皮肤演示"><a href="#2-简单的网格皮肤演示" class="headerlink" title="2.简单的网格皮肤演示"></a>2.简单的网格皮肤演示</h3><p>装配和上面图片的皮肤示例一样，但是在绑定骨骼前，现对图片网格处理（蒙皮），然后绑骨骼，刷权重。</p><h4 id="2-1-网格编辑"><a href="#2-1-网格编辑" class="headerlink" title="2.1.网格编辑"></a>2.1.网格编辑</h4><p>点击图片-&gt;勾选网格-&gt;编辑网格-&gt;新建，然后对图片的轮廓围起来（像PS里的钢笔一样操作）。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408172921833.png" alt="image-20250408172921833"></p><h4 id="2-2-添加骨骼"><a href="#2-2-添加骨骼" class="headerlink" title="2.2.添加骨骼"></a>2.2.添加骨骼</h4><p>选择自定义的根骨骼，按照预期的动画效果，添加几个骨骼。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408173418643.png" alt="image-20250408173418643"></p><h4 id="2-3-给网格绑定骨骼"><a href="#2-3-给网格绑定骨骼" class="headerlink" title="2.3.给网格绑定骨骼"></a>2.3.给网格绑定骨骼</h4><p>选中网格，点击添加骨骼上方的 “权重” 按钮，弹出一个权重窗口，点击绑定，然后将下面添加的几个骨骼选中（按ctrl多选），最后再点一下绑定。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408173830107.png" alt="image-20250408173830107"></p><h4 id="2-4-添加皮肤"><a href="#2-4-添加皮肤" class="headerlink" title="2.4.添加皮肤"></a>2.4.添加皮肤</h4><p>第二张图片重复前面的添加网格，但是不用再新建骨骼，和第一张共用，皮肤切换的作用就在这里了，多个皮肤共用一套骨骼动画。</p><p>就像我们玩游戏的时候，不管怎么换皮肤，英雄的招式是一样的，当然打击特效可能也拆分出了皮肤除外。</p><h4 id="2-5-创建皮肤占位符"><a href="#2-5-创建皮肤占位符" class="headerlink" title="2.5.创建皮肤占位符"></a>2.5.创建皮肤占位符</h4><p>皮肤添加和占位符创建和前面的图片皮肤示例一样，只是这次是点击网格而不是附件了。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408175516573.png" alt="image-20250408175516573"></p><h2 id="四、导出与导入"><a href="#四、导出与导入" class="headerlink" title="四、导出与导入"></a>四、导出与导入</h2><p>导出是在Spine中导出能在Unity3D中使用的动画文件，这里要注意格式和添加方法，还有前面提到的导入游戏引擎中报错问题。</p><h3 id="Spine导出"><a href="#Spine导出" class="headerlink" title="Spine导出"></a>Spine导出</h3><p>点击导出，选择 “JSON”，确定输出文件夹后，点击 “打包设置”，为了被Unity3D支持，图集扩展名要加上 “.txt”。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408191026555.png" alt="image-20250408191026555"></p><h3 id="导入Unity3D"><a href="#导入Unity3D" class="headerlink" title="导入Unity3D"></a>导入Unity3D</h3><p>从Spine导出后有三个文件，分别是atlas.txt的图集文件，json数据和png贴图。</p><p>放入一个文件夹后直接复制到Unity3D项目的Resources后，游戏引擎会再生成一个atlas和skeletonData的asset文件，以及一个mat文件。</p><p>进入编辑器中，只需要将SkeletonData.asset拖到场景中即可。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408192003300.png" alt="image-20250408192003300"></p><h3 id="导入运行报错"><a href="#导入运行报错" class="headerlink" title="导入运行报错"></a>导入运行报错</h3><p>当我第一次导进去后就提示错误：Error reading skeleton JSON file for SkeletonData asset: skeleton_SkeletonData Unsupported skeleton data, please export with a newer version of Spine。</p><p>根据提示是导出的Spine文件版本太低，其实就是我安装的Spine-Unity插件和Spine3.8.75不匹配。一般的做法就是换新版Spine，或安装低版本Unity插件，但是我这次就对比了一下可以使用的spine动画json文件。</p><p>发现格式都差不多，唯一不同的只是skeleton下的spine版本号，原本的是3.8.75，当我改成3.8.99重新加载进去后竟然就可以了。这整得我也是很无语，就只是校验了一下版本号，我还以为是格式不对。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408192801332.png" alt="image-20250408192801332"></p><h2 id="五、写在后面"><a href="#五、写在后面" class="headerlink" title="五、写在后面"></a>五、写在后面</h2><p>其实想要快速制作游戏动画，还有以一种更好的方法，那就是序列帧动画。首先将AI生成的图片，再输入指定动作的提示词，用图生视频。然后将视频拆成图片帧，最后只需要挑选一些抠图做成图片精灵就可以了。</p><p>虽然我一开始就是这样想的，但是了解到Spine优点后就放弃这种方式。第二个原因，通过学习Spine我可以可持续制作动画贴图，还能上传到平台赚取收益，以后有时间我也会不定时地更新Spine动画制作小案例。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何在Spine3.8.75中制作多套皮肤，并导入Unity3D。</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Spine" scheme="https://www.zerofc.cn/tags/Spine/"/>
    
  </entry>
  
  <entry>
    <title>如何在Unity3D导入Spine动画</title>
    <link href="https://www.zerofc.cn/2025/02/26/%E5%A6%82%E4%BD%95%E5%9C%A8Unity3D%E5%AF%BC%E5%85%A5Spine%E5%8A%A8%E7%94%BB/"/>
    <id>https://www.zerofc.cn/2025/02/26/%E5%A6%82%E4%BD%95%E5%9C%A8Unity3D%E5%AF%BC%E5%85%A5Spine%E5%8A%A8%E7%94%BB/</id>
    <published>2025-02-26T02:13:50.000Z</published>
    <updated>2025-02-26T05:22:40.805Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>《如何在Unity3D项目中导入Spine动画》，虽然在网上有很多这种文章，直接将问题交给<strong>DeepSeek</strong>也能得到具体的操作流程，但是照着他们提供的方法还是能遇到几个问题，比如：</p><ol><li>AI回答没有提到Unity无法识别.altas，要修改动画文件后缀部分；</li><li>导入到游戏场景中，动画总是被Canvas的背景图或元素挡住，层级低；</li></ol><p>所以针对这几点问题和操作流程，再带上<strong>Spine的基本操作</strong>，我整理成文章，那么，下面先参照一下我的工具版本开始。</p><p> <img src="https://image-static.segmentfault.com/299/005/2990051870-67be8f22347ee_fix732" alt="img"></p><h1 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h1><ul><li>Unity3D 2020.3</li><li>Spine 3.8.75</li><li>spine-unity-3.8-2021-11-10</li><li>2D场景游戏</li></ul><h1 id="三、Spine操作"><a href="#三、Spine操作" class="headerlink" title="三、Spine操作"></a>三、Spine操作</h1><p>因为练习时，多数动画文件是直接下载的别人制作好的json导出文件（非工程）。所以如果要在游戏场景前看效果，可以先导进Spine工具中查看一下。</p><h3 id="json导出文件目录"><a href="#json导出文件目录" class="headerlink" title="json导出文件目录"></a>json导出文件目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fileName.altas // 图集描述文件</span><br><span class="line">fileName.json  // 骨骼动画数据</span><br><span class="line">fileName.png   // 纹理图集</span><br></pre></td></tr></table></figure><h3 id="导入文件"><a href="#导入文件" class="headerlink" title="导入文件"></a>导入文件</h3><p>1.导入数据&gt;选择“JSON或二进制文件”&gt;文件选“json”格式文件&gt;导入</p><p>2.保存更改&gt;浏览&gt;自定义名称的“spine”格式文件</p><p><img src="https://image-static.segmentfault.com/319/894/3198943486-67bea4a8be2be_fix732" alt="img"></p><h3 id="展示纹理"><a href="#展示纹理" class="headerlink" title="展示纹理"></a>展示纹理</h3><p>1.纹理解包器&gt;图集文件选择“.atlas”格式文件&gt;输出文件夹随便指定即可&gt;解开</p><p>2.Hierarchy&gt;图片&gt;图片文件&gt;路径，找到纹理解包后的输出文件夹</p><p><img src="https://image-static.segmentfault.com/418/251/4182516544-67bea4cf2835a_fix732" alt="img"></p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>通常一个json导出文件里可以包含很多个动画，可以看到预览右边的列表，每一个选项就是一个动画，选中可以预览，左边的工程窗的设置可以进入K帧窗。</p><p>更多的比如骨骼绑定，蒙皮刷权重，K帧，我后面再出一个单独的文章说明，下面就进入正题到Unity的导入了。</p><p><img src="https://image-static.segmentfault.com/231/247/2312472564-67bea4ffaa22f_fix732" alt="img"></p><h1 id="四、导入Unity3D"><a href="#四、导入Unity3D" class="headerlink" title="四、导入Unity3D"></a>四、导入Unity3D</h1><p>要在Unity3D导入前需要先下载Spine Unity运行库，可以网上找Spine官方下载页；第二个是前面提到的Unity不识别.atlas文件，将动画放到Unity项目的资源文件夹下需要将.atlas改成.txt后缀的文件。</p><h3 id="Spine-Unity运行库安装"><a href="#Spine-Unity运行库安装" class="headerlink" title="Spine Unity运行库安装"></a>Spine Unity运行库安装</h3><p>在Unity中，点击菜单栏 <strong>Assets &gt; Import Package &gt; Custom Package</strong>，选择下载的<code>.unitypackage</code>文件，导入全部内容。</p><p>最后在工具栏的GameObject下，查看是否有Spine选项，就可以验证安装成功与否。</p><h3 id="Spine数据资源生成"><a href="#Spine数据资源生成" class="headerlink" title="Spine数据资源生成"></a>Spine数据资源生成</h3><p>前面提到的Spine动画的三个文件，再放入游戏资产文件夹中修改了图片描述文件格式后，打开项目后，Unity会自动生成一个.meta和两个.asset文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_Atlas.asset             与之前的atlas对应的图集描述文件</span><br><span class="line">_Material.mat            与之前的png对应的素材纹理</span><br><span class="line">_SkeletonData.asset      与之前的json对应的骨骼数据文件</span><br></pre></td></tr></table></figure><h3 id="创建动画对象"><a href="#创建动画对象" class="headerlink" title="创建动画对象"></a>创建动画对象</h3><p>因为游戏是2D的，我主体场景用的是Canvas，开头也提到过的导入后总是显示在Canvas背景图的下层，所以第一步就从设置画面开始。</p><p>1.选中Canvas后，Render Mode选择 “Screen Space-Camera”，Hierachy中的Main Camera拖入Render Camera中。</p><p><img src="https://image-static.segmentfault.com/192/673/1926736657-67be848795f75_fix732" alt="img"></p><p>2.在场景中创建空对象（如右键Hierarchy &gt; <strong>Create Empty</strong>），命名为 SpineCharacter</p><p>3.添加组件：点击 <strong>Add Component</strong>，搜索并添加 <strong>Skeleton Animation</strong></p><p>4.配置组件：</p><ul><li><strong>Skeleton Data Asset</strong>：拖入前面“Spine数据资源”生成的<code>_SkeletonData.asset</code>文件。</li><li><strong>Animation Name</strong>：输入默认播放的动画名称（如<code>idle</code>）。</li><li><strong>Loop</strong>：勾选以循环播放。</li><li><strong>Scale</strong>：调整 Rect Transform 的 Scale，大小自行尝试。</li></ul><p>5.Shader设置 <strong>UI&#x2F;Default</strong>，默认的Spine Skeleton素材拼接得有点锯齿，详细的可以自行选择尝试。</p><p><img src="https://image-static.segmentfault.com/133/888/1338888192-67be8ccd42a5c_fix732" alt="img"></p><h3 id="脚本控制动画"><a href="#脚本控制动画" class="headerlink" title="脚本控制动画"></a>脚本控制动画</h3><p>创建C#脚本（如<code>SpineController.cs</code>）并附加到角色对象</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Spine.Unity;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SpineController</span> : <span class="title">MonoBehaviour</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> SkeletonAnimation skeletonAnim;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> runAnimation = <span class="string">&quot;run&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span> &#123;</span><br><span class="line">        skeletonAnim.AnimationState.SetAnimation(<span class="number">0</span>, runAnimation, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 切换动画</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">PlayAnimation</span>(<span class="params"><span class="built_in">string</span> animName</span>)</span> &#123;</span><br><span class="line">        skeletonAnim.AnimationState.SetAnimation(<span class="number">0</span>, animName, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>为什么我做小游戏从CocosCreator切到了Unity3D，原因是这次尝试的是抖音直播小玩法，也就是弹幕小游戏。</p><p>前期为了跑通流程，所以我要避开所有要用到服务端的产品开发，从而采用指令直推方式，但官网只有Unity SDK的案例，最后有了这篇文章，当然后续还有更多。</p><p>当然CocosCreator制作普通单机小游戏我也会继续，不过当前以2D为主，毕竟现在用AI抽卡来生成游戏资产太方便了，等图生3D模型较完善的时候，以后再用AI制作3D小游戏。</p>]]></content>
    
    
    <summary type="html">如何在Unity3D导入Spine动画</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Unity3D" scheme="https://www.zerofc.cn/tags/Unity3D/"/>
    
  </entry>
  
  <entry>
    <title>Spine动画教程：快捷键汇总</title>
    <link href="https://www.zerofc.cn/2025/01/20/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%B1%87%E6%80%BB/"/>
    <id>https://www.zerofc.cn/2025/01/20/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%BF%AB%E6%8D%B7%E9%94%AE%E6%B1%87%E6%80%BB/</id>
    <published>2025-01-20T06:13:50.000Z</published>
    <updated>2025-04-27T08:50:31.154Z</updated>
    
    <content type="html"><![CDATA[<p>鼠标右键： 拖动装配窗口</p><p>Ctrl：绑定骨骼时对附件进行预选中（悬浮会显示图片的轮廓）</p><p>预览（鼠标右键） ： 切换对应的动画（多动画情况）</p><p>空格键（动画模式）： 展开全部骨骼的K帧（鼠标左键，进入当前骨骼关键帧）</p><p>Alt+C：插槽颜色</p><p>Alt+W：权重</p><p>Alt+S：皮肤</p><p>Alt+E：网格工具</p><p>Alt+A：动画</p><p>Alt+G：图表</p><p>Alt+H：幻影</p><p>Alt+D：摄影表</p><p>Alt+P：播放</p><p>Alt+L：时间轴</p><p>Alt+T：层级树</p><p>Alt+M：指标</p><p>Alt+O：轮廓</p><p>Alt+U：音频</p><p>Alt+R：预览</p><p>Ctrl+N：新建骨骼</p><p>Ctrl+E：导出</p><p>Ctrl+P：纹理打包器</p><p><img src="https://www.zerofc.cn/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/image-20240805201033707.png" alt="image-20250408165643830"></p>]]></content>
    
    
    <summary type="html">Spine动画教程：快捷键汇总</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Spine" scheme="https://www.zerofc.cn/tags/Spine/"/>
    
  </entry>
  
  <entry>
    <title>天天AI生图，生文的，有什么用？</title>
    <link href="https://www.zerofc.cn/2025/01/20/%E5%A4%A9%E5%A4%A9AI%E7%94%9F%E5%9B%BE%EF%BC%8C%E7%94%9F%E6%96%87%E7%9A%84%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8%EF%BC%9F/"/>
    <id>https://www.zerofc.cn/2025/01/20/%E5%A4%A9%E5%A4%A9AI%E7%94%9F%E5%9B%BE%EF%BC%8C%E7%94%9F%E6%96%87%E7%9A%84%EF%BC%8C%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8%EF%BC%9F/</id>
    <published>2025-01-20T06:13:50.000Z</published>
    <updated>2025-04-23T03:42:00.539Z</updated>
    
    <content type="html"><![CDATA[<p>天天就整个AI生图，生文有什么用，有本事就做个AI机器人啊！</p><p>常常在一些论坛里看过类似这种质疑和挑性的言论，我表示认同又不认同。</p><p>认同是我作为观察者，市面上确实没有做出特别惊艳且符合预期的产品，还多少有点吹嘘成分。</p><p>更多的是不认同: 我也算AI的参与者，上面这句话其实是AI应用的两个场景，并不能直接做比较的。</p><p>AI生图生文是AI信息领域，而人形机器人是AI物理领域，说白了，一个虚拟一个实体。</p><p>现实中来说，做实体的确实更高大上，但经过一些客观数据评估后，我认为做AI信息领域更适合绝大多数普通人。</p><p>第一成本，信息领域生产资料可以忽略，只有生产没有量产一说，边际成本为零。</p><p>第二规模，信息技术这三十多年发展，已经有了非常完善的商业模式和几十亿的网民规模。</p><p>所以，AI机器人作为新兴智造业，其实还是属于制造业，虽然我没呆过这个行业，但流程还是知道一点点。</p><p>就比如生产物料不说自产也得采购，装配的损耗，做市场验证的不敏捷性等都是我们普通人承受不住的成本支出。</p><p>回到AI信息领域，虽然Low了点，但应用起来确实好使，大幅度提升生产力。</p><p>拿来做游戏，秒变资源整合器，GPT出策划，MJ出图出美术，还有那个啥出代码，从创意到落地一气呵成。</p><p><img src="https://www.zerofc.cn/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/image-20240805201033707.png" alt="image-20250408165643830"></p>]]></content>
    
    
    <summary type="html">天天AI生图，生文的，有什么用？</summary>
    
    
    
    <category term="思维思考" scheme="https://www.zerofc.cn/categories/%E6%80%9D%E7%BB%B4%E6%80%9D%E8%80%83/"/>
    
    
    <category term="变现" scheme="https://www.zerofc.cn/tags/%E5%8F%98%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>就升级个版本，错误日志多了22个G，你敢想！</title>
    <link href="https://www.zerofc.cn/2025/01/19/%E5%B0%B1%E5%8D%87%E7%BA%A7%E4%B8%AA%E7%89%88%E6%9C%AC%EF%BC%8C%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97%E5%A4%9A%E4%BA%8622%E4%B8%AAG%EF%BC%8C%E4%BD%A0%E6%95%A2%E6%83%B3%EF%BC%81/"/>
    <id>https://www.zerofc.cn/2025/01/19/%E5%B0%B1%E5%8D%87%E7%BA%A7%E4%B8%AA%E7%89%88%E6%9C%AC%EF%BC%8C%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97%E5%A4%9A%E4%BA%8622%E4%B8%AAG%EF%BC%8C%E4%BD%A0%E6%95%A2%E6%83%B3%EF%BC%81/</id>
    <published>2025-01-19T06:13:50.000Z</published>
    <updated>2025-04-23T03:42:33.387Z</updated>
    
    <content type="html"><![CDATA[<p>今天抽空给朋友跑了个项目(改东西)，系统源码要求PHP8.0以上版本。</p><p>于是，我二话不说就在本地整了个新的，打开请求地址后， 不光报502还一直转圈。<br>虽然我最近都在弄游戏动画没怎么折腾，但至少也是吃饭的东西，我顺手就打开了本地环境的日志目录。</p><p>22个G的错误日志，你敢想，还好是在我本地，要是出现在线上，又得是一场轮番批斗会了。</p><p>然后打开windows日志，错误决方法也简单，注释或删掉配置中的这一项就可以了。</p><p>但是问题又来了，我什么也没干，就升级了个版本，看官方默认配置也没有track_errors，那到底是谁干的，我表示很怀疑集成开发环境工具，未完待续~</p><p><img src="https://www.zerofc.cn/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/image-20240805201033707.png" alt="image-20250408165643830"></p>]]></content>
    
    
    <summary type="html">就升级个版本，错误日志多了22个G，你敢想！</summary>
    
    
    
    <category term="思维思考" scheme="https://www.zerofc.cn/categories/%E6%80%9D%E7%BB%B4%E6%80%9D%E8%80%83/"/>
    
    
    <category term="生活" scheme="https://www.zerofc.cn/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>我的2024年终总结，持续尝试</title>
    <link href="https://www.zerofc.cn/2024/12/23/%E6%88%91%E7%9A%842024%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93%EF%BC%8C%E6%8C%81%E7%BB%AD%E5%B0%9D%E8%AF%95/"/>
    <id>https://www.zerofc.cn/2024/12/23/%E6%88%91%E7%9A%842024%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93%EF%BC%8C%E6%8C%81%E7%BB%AD%E5%B0%9D%E8%AF%95/</id>
    <published>2024-12-23T06:13:50.000Z</published>
    <updated>2024-12-23T06:07:37.356Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>时光飞逝，一晃就到2024的年底了，按照我近年来的传统，我要复盘一下今年做过的关于探索收入多样性的事件。包括这一年的工作进展，收获的事项，遇到的各种问题，以及来年计划等，希望能对你有所参考意义。</p><p><img src="https://image-static.segmentfault.com/232/901/2329019790-67495ca328071_fix732" alt="img"></p><h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><ol><li><p>Cocos小游戏《忍者疾风转》开发，并上架到微信和抖音平台。</p></li><li><p>微信小程序《有用工具盒》开发并上架。</p></li><li><p>视频号《一曲小北》，主打编曲和吉他，首次开通广告分成计划。</p></li><li><p>QQ小程序《实用工具箱》上架，暂未开通广告分成。</p></li><li><p>微信公众号《ZERO开发》发布推文23篇，首次小绿书1篇，爆文5篇。</p></li><li><p>三个QQ短视频账号注册孵化，均已开通广告共享计划。</p></li><li><p>鸿蒙Next应用开发，暂未上架，发布相关教程3篇，视频1个。</p></li><li><p>全网粉丝数达20000人，含抖音账号《小北玩游戏》。</p></li><li><p>微信问一问《ZERO开发》，累计回答40个，推流3w+，粉丝132人。</p></li><li><p>重新搭建个人博客，加入独立博客联盟，友链，每日UV稳定破零。</p></li></ol><p><img src="https://image-static.segmentfault.com/336/491/3364910669-67495cac11bcf_fix732" alt="img"></p><h1 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h1><h3 id="技能"><a href="#技能" class="headerlink" title="技能"></a>技能</h3><ol><li><p>工作上的开发语言学习，新增Go语言和鸿蒙Next的ArkTs。</p></li><li><p>单机游戏的Mod简单制作，游戏解包与封包。</p></li><li><p>Adobe Audition混音制作，用于视频号《一曲小北》更新。</p></li></ol><h3 id="收入"><a href="#收入" class="headerlink" title="收入"></a>收入</h3><ol><li><p>公众号《ZERO开发》广告收益，付费文章1篇支付3人，账号打赏4人。</p></li><li><p>视频号《北桥苏》、《一曲小北》原创视频，每日广告收益。</p></li><li><p>微信小游戏、抖音小游戏《忍者疾风转》每日激励广告收益。</p></li><li><p>微信小程序《有用工具盒》每日开屏广告、信息流广告收益。</p></li><li><p>其他内容创作平台收益，哔哩哔哩，知乎，今日头条，QQ短视频，大鱼号。</p></li></ol><h3 id="社交"><a href="#社交" class="headerlink" title="社交"></a>社交</h3><ol><li><p>加入副业交流群3个，小游戏、小程序开发交流群2个。</p></li><li><p>个人运营程序员技术交流群1个，小程序交流QQ群1个。</p></li><li><p>线下交友活动较缺失，2024年属于非常独来独往的一年。</p></li></ol><h3 id="投资"><a href="#投资" class="headerlink" title="投资"></a>投资</h3><p>年初我就关闭了自2019年末以来购买的所有基金，也错过了今年10月前后的一次A股大涨时机。转而放到了余额宝和微信零钱通，每天固定几块钱的收益。为什么要这样做，因为关于金融产品的收入方向，我现在并不了解所以持保守态度，以后再慢慢学，重资产投资我没有尝试就不赘述了。</p><p><img src="https://image-static.segmentfault.com/552/933/55293385-67495cb696533_fix732" alt="img"></p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><ol><li>个人产品自然流量普遍偏低</li></ol><p>因为以前技术崇拜，而不看重产品本身，导致入局独立开发比较晚，产品思维也跟不上，进一步影响我做出来的小程序，只能算是小应用而非产品。所以我现在才开始学习调研，需求分析，推广营销等等，毕竟独立产品开发是程序员晚期收入很重要的布局之一。</p><ol start="2"><li>视频创作方向不明确</li></ol><p>不管是我的短视频还是中视频账号风格还没定调，因为过去都是用来学习新东西后的记录视频，没有真人出镜和真人发声。平台既不给流量，在观感上也显得不真诚，给人种营销号的感觉，这个只能慢慢摸索方向，之后再尝试出镜和口播。</p><p><img src="https://image-static.segmentfault.com/893/939/89393987-67495cbf81eb5_fix732" alt="img"></p><h1 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h1><ol><li><p>2025年每周都写日志复盘，博客新增周刊栏目。</p></li><li><p>注册个人微信服务号，探索新方向，持续内容输出。 </p></li><li><p>直播弹幕小游戏，直播插件开发并上架。</p></li><li><p>用Unity3D引擎独立开发一个偏大型的单机游戏。</p></li><li><p>Blender、3D Max建模改模学习，Mod制作升级。</p></li><li><p>持续探索AI大模型个人项目变现，AI应用开发。</p></li><li><p>加大小红书内容更新力度，完成商单权限开通。</p></li><li><p>个人资源（代码，创作源文件）变现，网盘拉新。</p></li></ol><p><img src="https://image-static.segmentfault.com/185/484/1854843107-67495cc82284d_fix732" alt="img"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>2024年的我的复盘结论就是 “持续尝试”，告别技术崇拜，但依然相信技术改变世界。二者不矛盾，因为技术服务于业务，建立在价值产出之上，任何优秀的代码结构终将会成为 “屎山”（有点俗）。</p><p>好的技术架构值得骄傲与推崇，但也只能延缓逐渐臃肿的进程，世界总是向熵增的方向演进，总是向混乱的方向发展，唯一不变的就是变，多方向尝试，多次推倒重来，就算是草台班子也能找到个方向，最后我也希望2025年的复盘主题是 “持续深耕”。</p><p><img src="https://image-static.segmentfault.com/284/079/2840796087-67495ccfd0bd4_fix732" alt="img"></p><p><img src="https://image-static.segmentfault.com/888/012/888012046-66b330428a248_fix732" alt="img"></p>]]></content>
    
    
    <summary type="html">我的2024年终总结，持续尝试</summary>
    
    
    
    <category term="思维思考" scheme="https://www.zerofc.cn/categories/%E6%80%9D%E7%BB%B4%E6%80%9D%E8%80%83/"/>
    
    
    <category term="年终总结" scheme="https://www.zerofc.cn/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>个人开发者，还能入局抖音直播小玩法吗？</title>
    <link href="https://www.zerofc.cn/2024/12/21/%E4%B8%AA%E4%BA%BA%E5%BC%80%E5%8F%91%E8%80%85%EF%BC%8C%E8%BF%98%E8%83%BD%E5%85%A5%E5%B1%80%E6%8A%96%E9%9F%B3%E7%9B%B4%E6%92%AD%E5%B0%8F%E7%8E%A9%E6%B3%95%E5%90%97%EF%BC%9F/"/>
    <id>https://www.zerofc.cn/2024/12/21/%E4%B8%AA%E4%BA%BA%E5%BC%80%E5%8F%91%E8%80%85%EF%BC%8C%E8%BF%98%E8%83%BD%E5%85%A5%E5%B1%80%E6%8A%96%E9%9F%B3%E7%9B%B4%E6%92%AD%E5%B0%8F%E7%8E%A9%E6%B3%95%E5%90%97%EF%BC%9F/</id>
    <published>2024-12-21T09:13:50.000Z</published>
    <updated>2024-12-23T06:08:02.953Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前段时间，我在微信问一问里回答了一个关于 “一天赚几十块钱副业有哪些？”的问题。主要推荐的是直播小玩法的副业，截至目前收获了官方1万的推流和超5千人的围观。由此我认为，当前开发直播小玩法还是比较小众，竞争小，个人开发者入局应该能躺赚一笔，真的很适合参考以前的回合制游戏。</p><p><img src="https://image-static.segmentfault.com/240/818/240818257-674924b25adcf_fix732" alt="img"></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>直播小玩法是抖音里的一种统称，其他平台有叫直播弹幕小游戏，而抖音里的直播小玩法包括两种，弹幕小游戏和互动插件。个人主体开发者申请软著后，符合平台规范都能上架。上架后，只要有主播用了你的开播，就能享受直播间的礼物分成，分成比例见下图。</p><p><img src="https://image-static.segmentfault.com/116/601/1166018645-67492500142db_fix732" alt="img"></p><p>比例看着确实比较低，但他也有一个很符合被动收益的优势：一经开发，多端部署，多人开播，无需直接面向观众。就是我们开发后，其实是可以发布到多个平台的，已知对个人开发者开发弹幕游戏上架的平台有：</p><ol><li><p>抖音</p></li><li><p>哔哩哔哩</p></li><li><p>虎牙</p></li></ol><p>同一平台可以让多个主播同时开播，看似一场直播分百分之八，但如果一天有100个主播，就可以从100个直播间分走百分点的收入。</p><p><img src="https://image-static.segmentfault.com/115/806/1158064410-6749251e03deb_fix732" alt="img"></p><h1 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h1><p>上架直播小玩法虽然是小众行业，但也同样有二八效应，据业内人士说，弹幕游戏有榜单，如果上架后能冲进前30，那每月被动收入十几W很常见。比如2023年的两款，《兵临城下》这款游戏全平台月流水超过6000万，《星辰无双》日均流水突破150万元。</p><p>这些头部爆款多数是开发团队完成的，个人开发者前期不试水，上架后可能就是主播一日游，然后还要承担服务器的费用。当然前面的优势和收益也是很可观的，这里只是在入局前给个预期中和一下，防止后期沉默成本过高。</p><p><img src="https://image-static.segmentfault.com/116/881/1168810401-67492536ee170_fix732" alt="img"></p><h1 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h1><p>根据官方开发文档介绍，互动插件和弹幕小游戏都支持单价版开发，也就是无需购买服务器，通过客户端接收推送完成交互。互动插件这里就不详细介绍了，类似直播里的点歌，点击屏幕上一个按钮，下拉出一些歌曲列表，选中后可以发送到直播间，这种的交互性更似小程序，可专门为开课，舞蹈博客定制相应的业务型互动插件。</p><p>而弹幕小游戏的开发，主要的是通过接收直播间的弹幕、礼物数据后，在游戏中显示对应的增益效果，比如送出仙女棒触发什么，阵营能提升什么。大部分是大同小异，更多的是主题和效果的设计，哪些更能迎合主播和观众，下面就用服务器+文档API，介绍一下大致的开发过程。</p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><ol><li><p>用直播伴侣打开后获取Token请求服务器接口</p></li><li><p>服务端根据Token获取房间ID并返回到小玩法</p></li><li><p>服务端将监听的房间数据通过长链接推送到小玩法</p></li><li><p>小玩法根据礼物、弹幕等数据展示buff效果</p></li><li><p>时间结束后根据业务数值判断阵营输赢并排名</p></li></ol><p><img src="https://image-static.segmentfault.com/256/557/2565572183-6749255545bf1_fix732" alt="img"></p><h2 id="服务端接口"><a href="#服务端接口" class="headerlink" title="服务端接口"></a>服务端接口</h2><p>下面就从官方文档里列出一些服务端业务中需要用的请求接口，详细可见开放平台的小玩法文档的服务端API介绍。</p><h4 id="接口调用凭证"><a href="#接口调用凭证" class="headerlink" title="接口调用凭证"></a>接口调用凭证</h4><p>access_token 是服务端接口的全局唯一调用凭据，如下面直播信息里的 “X-Token”，任务启动的 “access-token”传递的请求头参数用的都是这个。access_token 的有效期为 2 个小时，需要定时刷新 access_token。</p><h4 id="直播信息"><a href="#直播信息" class="headerlink" title="直播信息"></a>直播信息</h4><p>主播使用直播伴侣或移动端云启动玩法后，直播伴侣&#x2F;移动端云启动会传入 token 到玩法中，当玩法获取 token 后，传递给玩法的服务端。玩法服务端通过该接口，使用 token 获取直播间信息，在返回到客户端前，服务端还需要调用 “任务启动”、“礼物置顶”。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;data&quot;: &#123;</span><br><span class="line">    &quot;ack_cfg&quot;: [ // 预留信息，sdk接入使用，开发者不用感知</span><br><span class="line">    ],</span><br><span class="line">    &quot;linker_info&quot;: &#123; // 连屏数据预留信息，开发者目前不用感知</span><br><span class="line">        &quot;linker_id&quot;: 0,</span><br><span class="line">        &quot;linker_status&quot;: 0,</span><br><span class="line">        &quot;master_status&quot;: 0</span><br><span class="line">    &#125;，</span><br><span class="line">    &quot;info&quot;: &#123;</span><br><span class="line">        &quot;room_id&quot;: 7214015683695250235,</span><br><span class="line">        &quot;anchor_open_id&quot;: &quot;_000oJIu6APhomK7KIBGqSYm5XYPxCJB_xxx&quot;,</span><br><span class="line">        &quot;avatar_url&quot;: &quot;https://p11.douyinpic.com/aweme/720x720/aweme-avatar/tos-cn-avt-0015_973c31e8055f78a41d3f7de3def9821d.jpeg?from=3067671334&quot;,</span><br><span class="line">        &quot;nick_name&quot;: &quot;xxx&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="任务启动"><a href="#任务启动" class="headerlink" title="任务启动"></a>任务启动</h4><p>调用任务启动后，直播间数据才会同步推送给开发者服务器，注意：不同类型的数据需要启动不同的任务单独监听，比如礼物数据单独启动一个，评论数据单独启动一个，见文档的数据开发。</p><h4 id="礼物置顶"><a href="#礼物置顶" class="headerlink" title="礼物置顶"></a>礼物置顶</h4><p>为什么还要调这个接口，因为置顶的礼物被送出，才会有礼物数据推送（后期会废用不需要这一步），实现时可以在获取房间ID后异步调用。然后直播挂载小玩法后，开发者根据玩法场景自主控制当前场景需要置顶的礼物，前提是置顶的礼物在玩法维度礼物配置中。调用置顶礼物接口的条件：</p><ul><li>已开通“获取礼物互动数据能力”。</li><li>置顶的礼物数量不能超过6个，且必须为礼物配置列表中已勾选的礼物。</li></ul><h4 id="分页查询推送失败数据"><a href="#分页查询推送失败数据" class="headerlink" title="分页查询推送失败数据"></a>分页查询推送失败数据</h4><p>可以用定时任务对已经开播的RoomId请求 api 分页查询推送失败的数据，返回空代表全部推送成功，否则可以根据业务需求记录失败的数据和重新推送到小玩法客户端。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line">  &quot;err_no&quot;: 0,</span><br><span class="line">  &quot;err_msg&quot;: &quot;ok&quot;,</span><br><span class="line">  &quot;logid&quot;: &quot;20220927122238291&quot;,</span><br><span class="line">  &quot;data&quot;: &#123;</span><br><span class="line">    &quot;page_num&quot;: 1,</span><br><span class="line">    &quot;total_count&quot;: 100,</span><br><span class="line">    &quot;data_list&quot;: [</span><br><span class="line">      // 当页的数据列表</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;roomid&quot;: &quot;12345&quot;, // string类型，消息的房间id</span><br><span class="line">        &quot;msg_type&quot;: &quot;live_gift&quot;, // string类型，表示消息类型</span><br><span class="line">        &quot;payload&quot;: &quot;[...]&quot; // string类型， 对应推送协议中的payload字符串，需要unmarshal</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="其他接口"><a href="#其他接口" class="headerlink" title="其他接口"></a>其他接口</h4><p>弹幕数据上报、用户战绩与排行榜看自身业务使用，而小玩法客户端主要就和服务端保持长链接，接收直播间互动数据，以及三个Http业务接口。</p><ul><li>开启，获取roomId</li><li>结算，传递比赛结果</li><li>获取排行榜单</li></ul><p><img src="https://image-static.segmentfault.com/344/432/3444326852-674925738f7e0_fix732" alt="img"></p><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>上面的是官方玩法，其实还有第三方，而且抖音推出抖音小玩法可能也是打不过就加入的策略。因为以前盛行一时的无人直播，像修狗云蹦迪、挤地铁、马保国格斗等，都是别人用技术手段实现弹幕礼物接收实现的小游戏。</p><p>因为没有人出境和抓取数据等原因，开播的房间经常被封，虽然被封，但收益不错也屡禁不止，所以抖音干脆开放小玩法模块（个人猜想），更大程度实现主播、开发者、观众双收。我已知第三方平台有：咩播、阿比整蛊、青播，有机会我再聊聊关于这些平台软件的内部概况。</p><p><img src="https://image-static.segmentfault.com/888/012/888012046-66b330428a248_fix732" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;前段时间，我在微信问一问里回答了一个关于 “一天赚几十块钱副业有哪些？”的问题。主要推荐的是直播小玩法的副业，截至目前收获了官方1万的推流和</summary>
      
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="直播弹幕小游戏" scheme="https://www.zerofc.cn/tags/%E7%9B%B4%E6%92%AD%E5%BC%B9%E5%B9%95%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>QQ小程序互帮互助</title>
    <link href="https://www.zerofc.cn/2024/12/20/QQ%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%92%E5%B8%AE%E4%BA%92%E5%8A%A9/"/>
    <id>https://www.zerofc.cn/2024/12/20/QQ%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BA%92%E5%B8%AE%E4%BA%92%E5%8A%A9/</id>
    <published>2024-12-20T06:51:50.000Z</published>
    <updated>2024-12-23T06:09:23.561Z</updated>
    
    <content type="html"><![CDATA[<p>个人主体的 QQ 小程序，到底是哪些人开通了流量主在玩啊？</p><p>从微信端移植并修改了一个工具类的 QQ 小程序，然后备案审核上架后，自然流量没有一点，你说尴不尴尬！</p><p><img src="https://cdn.learnku.com/uploads/images/202410/30/121806/5iNp282ZdW.jpg!large" alt="img"></p><p>还有一点呢，QQ 小程序开通流量主的条件还是很高的，相比微信小程序。</p><p>要求连续 7 天内，每天的访问 UV 都不能低于 100，也就是在一个连续周期内要完成 700UV。</p><p>于是，我就去某宝找找有没有做流量主开通的，我先是输入 “QQ 小程序流量主开通”，根本就没有。</p><p>然后就只搜小程序流量主开通，清一色微信小程序的，没辙，随便找几家问问有没有能做 QQ 小程序的。</p><p><img src="https://cdn.learnku.com/uploads/images/202410/30/121806/KTXMYnwr1s.png!large" alt="img"></p><p>结果就是，根本没人做这玩意的流量主开通业务，不过也意外地知道了他们做一个微信小程序地普遍报价 150 上下，同样也是刷访问，10 天完成 500UV。</p><p>最后我就找群找论坛，QQ 小程序互助，也没有，不知道有没有和我一样的，有的话，我建了一个扣扣群，或加我 QQ：2652364582，互帮互助。</p><p><img src="https://cdn.learnku.com/uploads/images/202410/30/121806/pTGBTnmZFZ.jpg!large" alt="img"></p>]]></content>
    
    
    <summary type="html">QQ小程序流量主开通</summary>
    
    
    
    <category term="前端开发" scheme="https://www.zerofc.cn/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="小程序" scheme="https://www.zerofc.cn/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>守护C盘，3种指令清理方法</title>
    <link href="https://www.zerofc.cn/2024/12/20/%E5%AE%88%E6%8A%A4C%E7%9B%98%EF%BC%8C3%E7%A7%8D%E6%8C%87%E4%BB%A4%E6%B8%85%E7%90%86%E6%96%B9%E6%B3%95/"/>
    <id>https://www.zerofc.cn/2024/12/20/%E5%AE%88%E6%8A%A4C%E7%9B%98%EF%BC%8C3%E7%A7%8D%E6%8C%87%E4%BB%A4%E6%B8%85%E7%90%86%E6%96%B9%E6%B3%95/</id>
    <published>2024-12-20T02:13:50.000Z</published>
    <updated>2024-12-24T12:38:33.660Z</updated>
    
    <content type="html"><![CDATA[<p>磁盘清理工具虽然有很多，但是对于一些开发工具，或较为隐蔽的缓存还是无法有效清理。</p><p>眼看着C盘的“垃圾”越积越多，电脑使用起来越来越卡，我们只有两种方法：</p><ol><li>将较大的软件转移到其他磁盘（直接移动 or 软链接）</li><li>一条路走到底，对 “垃圾” 大清理。</li></ol><p>下面我就简单介绍一下软链接和两种指令清理的方法。</p><h4 id="一、软链接"><a href="#一、软链接" class="headerlink" title="一、软链接"></a>一、软链接</h4><p>mklink &#x2F;J 目标文件&#x2F;文件夹 源文件&#x2F;文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mklink /J D:\target-dir E:\src-dir</span><br></pre></td></tr></table></figure><h4 id="二、清理临时文件"><a href="#二、清理临时文件" class="headerlink" title="二、清理临时文件"></a>二、清理临时文件</h4><p>通过下面命令进入到临时文件的默认位置，然后再点击删除，也可以将这个默认位置指定到其他磁盘。</p><p>只需要在环境变量种创建变量名TEMP，值为上面显示的默认位置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd 输入 %temp%</span><br></pre></td></tr></table></figure><h4 id="三、指令清理"><a href="#三、指令清理" class="headerlink" title="三、指令清理"></a>三、指令清理</h4><p>管理员身份运行命令行 C盘瘦身</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、  DISM.exe /Online /Cleanup-Image /StartComponentCleanup</span><br><span class="line">2、  powercfg hibernate off</span><br></pre></td></tr></table></figure><p><img src="https://image-static.segmentfault.com/170/672/1706722225-666d5d93e0e9d_fix732" alt="img"></p>]]></content>
    
    
    <summary type="html">3种用指令清理C盘的方法</summary>
    
    
    
    <category term="运维相关" scheme="https://www.zerofc.cn/categories/%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3/"/>
    
    
    <category term="C盘清理" scheme="https://www.zerofc.cn/tags/C%E7%9B%98%E6%B8%85%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>2024年，个人申请小游戏软著速通指南</title>
    <link href="https://www.zerofc.cn/2024/12/10/2024%E5%B9%B4%EF%BC%8C%E4%B8%AA%E4%BA%BA%E7%94%B3%E8%AF%B7%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AF%E8%91%97%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97/"/>
    <id>https://www.zerofc.cn/2024/12/10/2024%E5%B9%B4%EF%BC%8C%E4%B8%AA%E4%BA%BA%E7%94%B3%E8%AF%B7%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AF%E8%91%97%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97/</id>
    <published>2024-12-10T08:13:50.000Z</published>
    <updated>2024-12-23T06:14:24.425Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2024年6月26号，我申请的小游戏软著通过了。由于等待时间太长，所以就总结了一下整个申请过程踩过的坑。帮助未了解或即将申请个人软著的同学绕过下面三点，可以节省至少三分之一的时间（小游戏类目）。</p><p>当然，这里也会围绕大家关心的几个问题展开，比如：软著申请的费用、软著申请到底要多久以及整个申请的流程。最后再给大家两份我自己的申请模板，软件源程序文档和软件说明书文档。</p><p><img src="/img/2024%E5%B9%B4%EF%BC%8C%E4%B8%AA%E4%BA%BA%E7%94%B3%E8%AF%B7%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AF%E8%91%97%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97/1.png" alt="img"></p><h1 id="费用"><a href="#费用" class="headerlink" title="费用"></a>费用</h1><p>2024年申请软著不用钱，如果说一分钱不用也说不过去，因为在申请时的签章页要打印签字，所以整个过程的花费就是一张纸的打印钱。要是你找的第三方代办收取高费用，并且说要打印这打印那的就自己弄吧。因为现在关于软著的登记都是采用电子版形式了。之前既要打印源码文档和软件说明书，还要寄过去，然后才能收到纸张版软著。</p><h1 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h1><p>我从申请到通过一共是三个月时间，但是在过程中有三次补正，也就是提交的信息和资料不符和要求。而每次补正再审核大概在8-15天（个人观察），错三次也就要多一个月时间，按正常填写一遍过的话应该两个月以内就能获取。</p><h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><h2 id="注册与开始申请"><a href="#注册与开始申请" class="headerlink" title="注册与开始申请"></a>注册与开始申请</h2><p>进入“国家版权保护中心官网”，选择个人身份，填写手机邮箱等信息后注册成功后登陆。然后回到官网首页导航栏选择 “版权登记” -&gt; “软件登记” -&gt; ”计算机软件著作权登记申请（R11）“, 然后进入到办理身份，是自己就选 ”我是申请人“。</p><p><img src="/img/2024%E5%B9%B4%EF%BC%8C%E4%B8%AA%E4%BA%BA%E7%94%B3%E8%AF%B7%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AF%E8%91%97%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97/2.jpg" alt="img"></p><h2 id="软件申请信息"><a href="#软件申请信息" class="headerlink" title="软件申请信息"></a>软件申请信息</h2><p>这是第一步要填写的表单，其中权利取得方式、软件全称、版本号、权利范围为必填，权利取得方式按默认原始取得，权利范围按默认全部权利，其他的可以参考我下面截图。而 ”软件全称“ 一定要注意，因为我其中一项补正就是软件全称和后面的软件说明、源码文档里的页眉软件名称不一致。</p><p><img src="/img/2024%E5%B9%B4%EF%BC%8C%E4%B8%AA%E4%BA%BA%E7%94%B3%E8%AF%B7%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AF%E8%91%97%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97/3.jpg" alt="img"></p><h2 id="软件开发信息"><a href="#软件开发信息" class="headerlink" title="软件开发信息"></a>软件开发信息</h2><p>软件开发信息都为必填，软件分类选择 ”应用软件“，软件说明 ”原创“，开发方式 ”单独开发“，开发完成日期自己选择，发表状态 ”未发表“。</p><p><img src="/img/2024%E5%B9%B4%EF%BC%8C%E4%B8%AA%E4%BA%BA%E7%94%B3%E8%AF%B7%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AF%E8%91%97%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97/4.jpg" alt="img"></p><h2 id="软件功能与特点"><a href="#软件功能与特点" class="headerlink" title="软件功能与特点"></a>软件功能与特点</h2><p><img src="/img/2024%E5%B9%B4%EF%BC%8C%E4%B8%AA%E4%BA%BA%E7%94%B3%E8%AF%B7%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AF%E8%91%97%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97/5.jpg" alt="img"></p><p><img src="/img/2024%E5%B9%B4%EF%BC%8C%E4%B8%AA%E4%BA%BA%E7%94%B3%E8%AF%B7%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AF%E8%91%97%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97/6.jpg" alt="img"></p><h2 id="鉴别材料"><a href="#鉴别材料" class="headerlink" title="鉴别材料"></a><strong>鉴别材料</strong></h2><p>鉴别材料有两份，分别是程序鉴别材料和文档鉴别材料，两个都选择一般交存。其中程序鉴别材料是代码清除空行注释整理后转PDF提交，前后各连续30页可以按开发时间排序，也可以按功能主次等自定义排序，每页不少于50行，若源程序整体不到60页，应提交全部源程序。</p><p>而文档鉴别材料是用来描述程序的内容、组成、设计、功能、开发情况、测试结果及使用方法的文字资料和图表，如程序设计说明书、流程图、用户手册等，同样文档要求是连续的前30页和后30页，每页不少于30行，如果整个文档不到60页，就提交整个说明文档，这个我会在下面列出我的那两个模板。</p><p><img src="/img/2024%E5%B9%B4%EF%BC%8C%E4%B8%AA%E4%BA%BA%E7%94%B3%E8%AF%B7%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AF%E8%91%97%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97/7.jpg" alt="img"></p><h2 id="确认信息"><a href="#确认信息" class="headerlink" title="确认信息"></a>确认信息</h2><p>填完上面的信息后，提交身份证正反面，最后就会列出提交材料的清单确认信息。</p><p><img src="/img/2024%E5%B9%B4%EF%BC%8C%E4%B8%AA%E4%BA%BA%E7%94%B3%E8%AF%B7%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AF%E8%91%97%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97/8.jpg" alt="img"></p><h2 id="签章页提交"><a href="#签章页提交" class="headerlink" title="签章页提交"></a>签章页提交</h2><p>签章页其实也是材料清单确认书，下载打印后签字拍照完再上传。软著的状态就会由 “待提交” 转 “待受理” 了，接着就等待审核发放了。</p><p><img src="/img/2024%E5%B9%B4%EF%BC%8C%E4%B8%AA%E4%BA%BA%E7%94%B3%E8%AF%B7%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AF%E8%91%97%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97/9.jpg" alt="img"></p><h1 id="模板参考"><a href="#模板参考" class="headerlink" title="模板参考"></a>模板参考</h1><p>以下两份就是我的程序鉴别材料和文档鉴别材料模板，这里要注意一点的是，游戏类的文档说明一定要加上 “游戏健康忠告” 页面的介绍。（可以扫描下面公众号二维码找到文章或留言）</p><p><img src="/img/2024%E5%B9%B4%EF%BC%8C%E4%B8%AA%E4%BA%BA%E7%94%B3%E8%AF%B7%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AF%E8%91%97%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97/10.jpg" alt="img"></p><p><img src="/img/2024%E5%B9%B4%EF%BC%8C%E4%B8%AA%E4%BA%BA%E7%94%B3%E8%AF%B7%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%BD%AF%E8%91%97%E9%80%9F%E9%80%9A%E6%8C%87%E5%8D%97/11.jpg" alt="img"></p><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>软著下来后就准备上架到小游戏或快游戏平台了，可能是近年来的净网相关政策，有些平台对于小游戏或快游戏对个人身份的提交通道已经关闭了。不光如此，我最近做了一个工具类的小程序也卡在提交，因为我是要改名称和类目，现在还需要备案和认证，就不知道到时候我上架的时候，以前积累的UV会不会被清掉。</p><p><img src="https://www.zerofc.cn/img/qrcode/wx_gzh.png" alt="img"></p>]]></content>
    
    
    <summary type="html">介绍小游戏的软著申请流程，帮助别人节省更多时间获取证书</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="软著申请" scheme="https://www.zerofc.cn/tags/%E8%BD%AF%E8%91%97%E7%94%B3%E8%AF%B7/"/>
    
  </entry>
  
</feed>
