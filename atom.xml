<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZERO开发</title>
  
  <subtitle>一个探索副业的独立开发人博客</subtitle>
  <link href="https://www.zerofc.cn/atom.xml" rel="self"/>
  
  <link href="https://www.zerofc.cn/"/>
  <updated>2025-07-31T05:10:15.064Z</updated>
  <id>https://www.zerofc.cn/</id>
  
  <author>
    <name>北桥苏</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>资源分享05期：20个影视剧集(含动漫、电影、电视剧、综艺)</title>
    <link href="https://www.zerofc.cn/2025/07/29/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB05%E6%9C%9F%EF%BC%9A20%E4%B8%AA%E5%BD%B1%E8%A7%86%E5%89%A7%E9%9B%86/"/>
    <id>https://www.zerofc.cn/2025/07/29/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB05%E6%9C%9F%EF%BC%9A20%E4%B8%AA%E5%BD%B1%E8%A7%86%E5%89%A7%E9%9B%86/</id>
    <published>2025-07-29T13:13:50.000Z</published>
    <updated>2025-07-31T05:10:15.064Z</updated>
    
    <content type="html"><![CDATA[<h1 id="影视剧集-含动漫、电影、电视剧、综艺"><a href="#影视剧集-含动漫、电影、电视剧、综艺" class="headerlink" title="影视剧集(含动漫、电影、电视剧、综艺)"></a>影视剧集(含动漫、电影、电视剧、综艺)</h1><table><thead><tr><th>文件名</th><th>链接</th><th>提取码</th></tr></thead><tbody><tr><td>BadGirl (坏女孩)</td><td><a href="https://drive.uc.cn/s/a5bd7a16fa394">https://drive.uc.cn/s/a5bd7a16fa394</a></td><td>v9xd</td></tr><tr><td>斗罗大陆2</td><td><a href="https://drive.uc.cn/s/154d9e79d7694">https://drive.uc.cn/s/154d9e79d7694</a></td><td></td></tr><tr><td>斗破苍穹年番4K</td><td><a href="https://drive.uc.cn/s/8d6aea6cfbe64">https://drive.uc.cn/s/8d6aea6cfbe64</a></td><td>spjy</td></tr><tr><td>宫崎骏28部合集</td><td><a href="https://drive.uc.cn/s/c832a46c081c4">https://drive.uc.cn/s/c832a46c081c4</a></td><td>ga81</td></tr><tr><td>更衣人偶坠入爱河</td><td><a href="https://drive.uc.cn/s/e62a7e112b224">https://drive.uc.cn/s/e62a7e112b224</a></td><td>cjo3</td></tr><tr><td>剧场版区 (剑道尘心)</td><td><a href="https://drive.uc.cn/s/8d5fb472e53f4">https://drive.uc.cn/s/8d5fb472e53f4</a></td><td></td></tr><tr><td>假面骑士剑 (2004)</td><td><a href="https://drive.uc.cn/s/9f0630e79a254">https://drive.uc.cn/s/9f0630e79a254</a></td><td>snx1</td></tr><tr><td>青春猪头少年不会梦到圣诞服女郎</td><td><a href="https://drive.uc.cn/s/bbdfb60352da4">https://drive.uc.cn/s/bbdfb60352da4</a></td><td>8mmd</td></tr><tr><td>租借女友</td><td><a href="https://drive.uc.cn/s/b03e0e9b30ae4">https://drive.uc.cn/s/b03e0e9b30ae4</a></td><td>ssp4</td></tr><tr><td>畅安的励志故事</td><td><a href="https://drive.uc.cn/s/e74b4b4cb1904">https://drive.uc.cn/s/e74b4b4cb1904</a></td><td>935r</td></tr><tr><td>朝雪录 [2025]</td><td></td><td></td></tr><tr><td>九重紫2024</td><td><a href="https://drive.uc.cn/s/e1554c9575a94">https://drive.uc.cn/s/e1554c9575a94</a></td><td>ycey</td></tr><tr><td>书卷一梦[2025]</td><td></td><td>cn8k</td></tr><tr><td>藏海传2025</td><td></td><td>gbno</td></tr><tr><td>美国队长4-2025</td><td><a href="https://drive.uc.cn/s/aceda77c1a244">https://drive.uc.cn/s/aceda77c1a244</a></td><td>8rdd</td></tr><tr><td>射雕英雄传：侠之大者</td><td><a href="https://drive.uc.cn/s/a1531e140c9b4">https://drive.uc.cn/s/a1531e140c9b4</a></td><td>ydfi</td></tr><tr><td>各大网站女频vip人气完结小说</td><td><a href="https://drive.uc.cn/s/6f0ca56c8daf4">https://drive.uc.cn/s/6f0ca56c8daf4</a></td><td>3w9l</td></tr><tr><td>《飞升之后》著：皇甫奇 播：涛羽棠 358集完</td><td><a href="https://drive.uc.cn/s/8fb7ffdd67744">https://drive.uc.cn/s/8fb7ffdd67744</a></td><td>3iqr</td></tr><tr><td>《明朝那些事儿》主播：狮子老爸 3665集完</td><td><a href="https://drive.uc.cn/s/b9130010de8b4">https://drive.uc.cn/s/b9130010de8b4</a></td><td></td></tr></tbody></table><h1 id="加入我的资源频道"><a href="#加入我的资源频道" class="headerlink" title="加入我的资源频道"></a>加入我的资源频道</h1><h5 id="持续更新的分享频道，如何想要全部资源，可以加我微信：bqs219"><a href="#持续更新的分享频道，如何想要全部资源，可以加我微信：bqs219" class="headerlink" title="持续更新的分享频道，如何想要全部资源，可以加我微信：bqs219"></a>持续更新的分享频道，如何想要全部资源，可以加我微信：bqs219</h5><p><img src="https://www.zerofc.cn/img/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB03%E6%9C%9F%EF%BC%9A18%E5%A5%97%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%96%87%E4%BB%B6/channel.jpg"></p><h1 id="个人小游戏分享"><a href="#个人小游戏分享" class="headerlink" title="个人小游戏分享"></a>个人小游戏分享</h1><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">资源分享05期：20个影视剧集(含动漫、电影、电视剧、综艺)</summary>
    
    
    
    <category term="资源分享" scheme="https://www.zerofc.cn/categories/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="影视剧集" scheme="https://www.zerofc.cn/tags/%E5%BD%B1%E8%A7%86%E5%89%A7%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>资源分享04期：8组车载音乐集(含歌手专辑、金曲、车载DJ)</title>
    <link href="https://www.zerofc.cn/2025/07/29/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB04%E6%9C%9F%EF%BC%9A8%E7%BB%84%E8%BD%A6%E8%BD%BD%E9%9F%B3%E4%B9%90%E9%9B%86/"/>
    <id>https://www.zerofc.cn/2025/07/29/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB04%E6%9C%9F%EF%BC%9A8%E7%BB%84%E8%BD%A6%E8%BD%BD%E9%9F%B3%E4%B9%90%E9%9B%86/</id>
    <published>2025-07-29T12:13:50.000Z</published>
    <updated>2025-07-31T05:09:50.896Z</updated>
    
    <content type="html"><![CDATA[<h1 id="歌手专辑、金曲、车载DJ"><a href="#歌手专辑、金曲、车载DJ" class="headerlink" title="歌手专辑、金曲、车载DJ"></a>歌手专辑、金曲、车载DJ</h1><table><thead><tr><th>文件名</th><th>链接</th><th>提取码</th></tr></thead><tbody><tr><td>车载高品质DJ串烧歌曲大全</td><td><a href="https://pan.quark.cn/s/4b9039aaf4be">https://pan.quark.cn/s/4b9039aaf4be</a></td><td>7lgp</td></tr><tr><td>抖音神曲</td><td><a href="https://pan.quark.cn/s/629cd14cac46">https://pan.quark.cn/s/629cd14cac46</a></td><td>4ugw</td></tr><tr><td>钢琴纯音乐迷必备歌单</td><td><a href="https://pan.quark.cn/s/70ce4e403302">https://pan.quark.cn/s/70ce4e403302</a></td><td>3d87</td></tr><tr><td>林俊杰26张专辑</td><td><a href="https://pan.quark.cn/s/190345372b22">https://pan.quark.cn/s/190345372b22</a></td><td>y6uv</td></tr><tr><td>周杰伦所有专辑</td><td><a href="https://pan.quark.cn/s/efa4d121b560">https://pan.quark.cn/s/efa4d121b560</a></td><td>m3f4</td></tr><tr><td>【01】经典怀旧金曲大全-70-80-90歌曲</td><td><a href="https://pan.quark.cn/s/6dd662f7b9fd">https://pan.quark.cn/s/6dd662f7b9fd</a></td><td>ek43</td></tr><tr><td>【08】精选轻音乐发烧人声歌曲(340首+)</td><td><a href="https://pan.quark.cn/s/06c0889f7f34">https://pan.quark.cn/s/06c0889f7f34</a></td><td>5dwg</td></tr><tr><td></td><td></td><td></td></tr><tr><td>“柏林之声”车载U盘，无损音质</td><td><a href="https://pan.quark.cn/s/eb8bb6cea095">https://pan.quark.cn/s/eb8bb6cea095</a></td><td>v8ef</td></tr></tbody></table><h1 id="加入我的资源频道"><a href="#加入我的资源频道" class="headerlink" title="加入我的资源频道"></a>加入我的资源频道</h1><h5 id="持续更新的分享频道，如何想要全部资源，可以加我微信：bqs219"><a href="#持续更新的分享频道，如何想要全部资源，可以加我微信：bqs219" class="headerlink" title="持续更新的分享频道，如何想要全部资源，可以加我微信：bqs219"></a>持续更新的分享频道，如何想要全部资源，可以加我微信：bqs219</h5><p><img src="https://www.zerofc.cn/img/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB03%E6%9C%9F%EF%BC%9A18%E5%A5%97%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%96%87%E4%BB%B6/channel.jpg"></p><h1 id="个人小游戏分享"><a href="#个人小游戏分享" class="headerlink" title="个人小游戏分享"></a>个人小游戏分享</h1><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">资源分享04期：8组车载音乐集(含歌手专辑、金曲、车载DJ)</summary>
    
    
    
    <category term="资源分享" scheme="https://www.zerofc.cn/categories/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="音乐下载" scheme="https://www.zerofc.cn/tags/%E9%9F%B3%E4%B9%90%E4%B8%8B%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>资源分享03期：18套学习资料(含英语资料、天涯神帖)</title>
    <link href="https://www.zerofc.cn/2025/07/29/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB03%E6%9C%9F%EF%BC%9A18%E5%A5%97%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%96%87%E4%BB%B6/"/>
    <id>https://www.zerofc.cn/2025/07/29/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB03%E6%9C%9F%EF%BC%9A18%E5%A5%97%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%96%87%E4%BB%B6/</id>
    <published>2025-07-29T08:13:50.000Z</published>
    <updated>2025-07-30T09:10:53.148Z</updated>
    
    <content type="html"><![CDATA[<h1 id="英语学习资料、天涯神帖"><a href="#英语学习资料、天涯神帖" class="headerlink" title="英语学习资料、天涯神帖"></a>英语学习资料、天涯神帖</h1><table><thead><tr><th>文件名</th><th>链接</th><th>提取码</th></tr></thead><tbody><tr><td>2025抖音最火小学全科全年级资料大全集【超完整版】</td><td><a href="https://pan.quark.cn/s/cf016c38ba0d">https://pan.quark.cn/s/cf016c38ba0d</a></td><td>fu9q</td></tr><tr><td>每日书籍推荐(6.21)</td><td><a href="https://pan.quark.cn/s/e3bbc73b6f89">https://pan.quark.cn/s/e3bbc73b6f89</a></td><td>puin</td></tr><tr><td>天涯神贴</td><td><a href="https://pan.quark.cn/s/68d3ced38c37">https://pan.quark.cn/s/68d3ced38c37</a></td><td>dtk3</td></tr><tr><td>语料</td><td><a href="https://pan.quark.cn/s/29c4041ad16f">https://pan.quark.cn/s/29c4041ad16f</a></td><td>rykf</td></tr><tr><td>英语学习资料</td><td><a href="https://pan.quark.cn/s/2ef78ae2aab6">https://pan.quark.cn/s/2ef78ae2aab6</a></td><td>i0ti</td></tr><tr><td>英语语法新思维1-3册电子书</td><td><a href="https://pan.quark.cn/s/c6d03676f5cd">https://pan.quark.cn/s/c6d03676f5cd</a></td><td>qvfb</td></tr><tr><td>知乎盐选文章大合集</td><td><a href="https://pan.quark.cn/s/71e912a93670">https://pan.quark.cn/s/71e912a93670</a></td><td>k1n0</td></tr><tr><td>藏书迷必备书单</td><td><a href="https://pan.quark.cn/s/19ab0b6e9c74">https://pan.quark.cn/s/19ab0b6e9c74</a></td><td>cask</td></tr><tr><td>【天涯神贴】</td><td><a href="https://pan.quark.cn/s/7d61b4136e4b">https://pan.quark.cn/s/7d61b4136e4b</a></td><td>wtzx</td></tr><tr><td>爱的沟通：写给男士的科学恋爱指南</td><td><a href="https://drive.uc.cn/s/d0bef64183624">https://drive.uc.cn/s/d0bef64183624</a></td><td></td></tr><tr><td>完美关系的秘密</td><td><a href="https://drive.uc.cn/s/015decbc1c9a4">https://drive.uc.cn/s/015decbc1c9a4</a></td><td></td></tr><tr><td>《陪孩子读最美古诗词(套装共4册)》</td><td><a href="https://drive.uc.cn/s/96a9add1f4eb4">https://drive.uc.cn/s/96a9add1f4eb4</a></td><td>oy50</td></tr><tr><td>《孩子如何社交》</td><td><a href="https://drive.uc.cn/s/1f53df601bea4">https://drive.uc.cn/s/1f53df601bea4</a></td><td>bkcy</td></tr><tr><td>《名画中的希腊神话：轻松读懂艺术史》</td><td><a href="https://drive.uc.cn/s/4728d33a5d124">https://drive.uc.cn/s/4728d33a5d124</a></td><td>1iq4</td></tr><tr><td>漫画派对合集（99本）</td><td><a href="https://drive.uc.cn/s/9c01e2333b124">https://drive.uc.cn/s/9c01e2333b124</a></td><td>a9yg</td></tr><tr><td>《百年百部中国儿童文学经典书系(珍藏版)(套装共20册)》</td><td><a href="https://drive.uc.cn/s/59608d5844154">https://drive.uc.cn/s/59608d5844154</a></td><td>k252</td></tr><tr><td>《小人物的命运三书（共三册）》</td><td><a href="https://drive.uc.cn/s/7ebe16b483534">https://drive.uc.cn/s/7ebe16b483534</a></td><td></td></tr><tr><td>《赢在报考：中国100所宝藏大学全解》<a href="1">全两册</a></td><td><a href="https://drive.uc.cn/s/2346d6a660fe4">https://drive.uc.cn/s/2346d6a660fe4</a></td><td>wwpz</td></tr><tr><td></td><td></td><td></td></tr><tr><td>陈见：如何释放性魅力（完结）</td><td><a href="https://drive.uc.cn/s/7c2e0de806664">https://drive.uc.cn/s/7c2e0de806664</a></td><td>f0oo</td></tr></tbody></table><h1 id="加入我的资源频道"><a href="#加入我的资源频道" class="headerlink" title="加入我的资源频道"></a>加入我的资源频道</h1><h5 id="持续更新的分享频道，如何想要全部资源，可以加我微信：bqs219"><a href="#持续更新的分享频道，如何想要全部资源，可以加我微信：bqs219" class="headerlink" title="持续更新的分享频道，如何想要全部资源，可以加我微信：bqs219"></a>持续更新的分享频道，如何想要全部资源，可以加我微信：bqs219</h5><p><img src="/./img/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB03%E6%9C%9F%EF%BC%9A18%E5%A5%97%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%96%87%E4%BB%B6/channel.jpg"></p><h1 id="个人小游戏分享"><a href="#个人小游戏分享" class="headerlink" title="个人小游戏分享"></a>个人小游戏分享</h1><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">资源分享03期：18套学习资料文件</summary>
    
    
    
    <category term="资源分享" scheme="https://www.zerofc.cn/categories/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="素材资料" scheme="https://www.zerofc.cn/tags/%E7%B4%A0%E6%9D%90%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>资源分享02期：17组游戏3D模型</title>
    <link href="https://www.zerofc.cn/2025/07/28/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB02%E6%9C%9F%EF%BC%9A17%E7%BB%84%E6%B8%B8%E6%88%8F3D%E6%A8%A1%E5%9E%8B/"/>
    <id>https://www.zerofc.cn/2025/07/28/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB02%E6%9C%9F%EF%BC%9A17%E7%BB%84%E6%B8%B8%E6%88%8F3D%E6%A8%A1%E5%9E%8B/</id>
    <published>2025-07-28T08:13:50.000Z</published>
    <updated>2025-07-30T08:01:41.765Z</updated>
    
    <content type="html"><![CDATA[<h1 id="17组游戏3D模型-含动作文件"><a href="#17组游戏3D模型-含动作文件" class="headerlink" title="17组游戏3D模型(含动作文件)"></a>17组游戏3D模型(含动作文件)</h1><table><thead><tr><th>文件名</th><th>链接</th><th>提取码</th></tr></thead><tbody><tr><td>动作源文件</td><td><a href="https://drive.uc.cn/s/72030d9cabf64">https://drive.uc.cn/s/72030d9cabf64</a></td><td></td></tr><tr><td>侠盗猎车系列Mod修改</td><td><a href="https://drive.uc.cn/s/2799aeccbaf54">https://drive.uc.cn/s/2799aeccbaf54</a></td><td>58n7</td></tr><tr><td>3DMAX_cs_bip</td><td><a href="https://drive.uc.cn/s/b9264a892b464">https://drive.uc.cn/s/b9264a892b464</a></td><td>j7xu</td></tr><tr><td>蒙皮骨骼_模型</td><td><a href="https://drive.uc.cn/s/c2f0db9f4c244">https://drive.uc.cn/s/c2f0db9f4c244</a></td><td>r6r9</td></tr><tr><td>铸星龙王</td><td><a href="https://drive.uc.cn/s/b0f1a8b82a914">https://drive.uc.cn/s/b0f1a8b82a914</a></td><td>a8g6</td></tr><tr><td>场景_模型</td><td><a href="https://drive.uc.cn/s/f5f180dc52ac4">https://drive.uc.cn/s/f5f180dc52ac4</a></td><td></td></tr><tr><td>英雄联盟系列源计划新全套角色3DMAX模型</td><td><a href="https://drive.uc.cn/s/6d7312e5ee5b4">https://drive.uc.cn/s/6d7312e5ee5b4</a></td><td>vwyl</td></tr><tr><td>人物角色战斗动作姿势动画3D模型合集 RRCG.rar</td><td><a href="https://drive.uc.cn/s/9dad88d340ae4">https://drive.uc.cn/s/9dad88d340ae4</a></td><td>4w6q</td></tr><tr><td>Mod制作(含鬼泣&amp;龙珠)</td><td><a href="https://drive.uc.cn/s/87e86950aeb44">https://drive.uc.cn/s/87e86950aeb44</a></td><td>6b13</td></tr><tr><td>GTA模型</td><td><a href="https://drive.uc.cn/s/99d4479e8cfc4">https://drive.uc.cn/s/99d4479e8cfc4</a></td><td></td></tr><tr><td>胡桃（人物模型）</td><td><a href="https://drive.uc.cn/s/3fd0d4ff5bd74">https://drive.uc.cn/s/3fd0d4ff5bd74</a></td><td></td></tr><tr><td>古典机械剧场·H2Cu阿相（场景）</td><td><a href="https://drive.uc.cn/s/537677c684a54">https://drive.uc.cn/s/537677c684a54</a></td><td>eiwo</td></tr><tr><td>Baddie-IVE（镜头与动作）</td><td><a href="https://drive.uc.cn/s/676c10e7be794">https://drive.uc.cn/s/676c10e7be794</a></td><td>kcqv</td></tr><tr><td>1787.战神4奎托斯次时代3D角色模型</td><td><a href="https://drive.uc.cn/s/a6edc11b37da4">https://drive.uc.cn/s/a6edc11b37da4</a></td><td></td></tr><tr><td>【奥特曼格斗进化】第一批独立模型.rar</td><td><a href="https://drive.uc.cn/s/3521e492f7684">https://drive.uc.cn/s/3521e492f7684</a></td><td>3sdp</td></tr><tr><td>【奥特曼格斗进化】第二批独立模型.rar</td><td><a href="https://drive.uc.cn/s/5ef0493d743d4">https://drive.uc.cn/s/5ef0493d743d4</a></td><td></td></tr><tr><td>AI高模-ASSET_1747640648_2654011.fbx</td><td><a href="https://drive.uc.cn/s/0621931a751b4">https://drive.uc.cn/s/0621931a751b4</a></td><td>az3e</td></tr></tbody></table><h1 id="个人小游戏分享"><a href="#个人小游戏分享" class="headerlink" title="个人小游戏分享"></a>个人小游戏分享</h1><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">资源分享02期：17组游戏3D模型</summary>
    
    
    
    <category term="资源分享" scheme="https://www.zerofc.cn/categories/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="素材资料" scheme="https://www.zerofc.cn/tags/%E7%B4%A0%E6%9D%90%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>资源分享01期：21个奥特曼3D模型</title>
    <link href="https://www.zerofc.cn/2025/07/27/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB01%E6%9C%9F%EF%BC%9A21%E4%B8%AA%E5%A5%A5%E7%89%B9%E6%9B%BC3D%E6%A8%A1%E5%9E%8B/"/>
    <id>https://www.zerofc.cn/2025/07/27/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB01%E6%9C%9F%EF%BC%9A21%E4%B8%AA%E5%A5%A5%E7%89%B9%E6%9B%BC3D%E6%A8%A1%E5%9E%8B/</id>
    <published>2025-07-27T08:13:50.000Z</published>
    <updated>2025-07-30T07:53:39.693Z</updated>
    
    <content type="html"><![CDATA[<h1 id="21个奥特曼fbx模型"><a href="#21个奥特曼fbx模型" class="headerlink" title="21个奥特曼fbx模型"></a>21个奥特曼fbx模型</h1><table><thead><tr><th>文件名</th><th>链接</th><th>提取码</th></tr></thead><tbody><tr><td>Zoffy_佐菲_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/b1e85cb4c0bd4">https://drive.uc.cn/s/b1e85cb4c0bd4</a></td><td>sy6x</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Zero_赛罗_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/e3dccce1b3f44">https://drive.uc.cn/s/e3dccce1b3f44</a></td><td>058c</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Zearth_哉阿斯_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/a5e3a2464e4c4">https://drive.uc.cn/s/a5e3a2464e4c4</a></td><td>41y5</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Tiga_迪迦_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/41bb423bb88a4">https://drive.uc.cn/s/41bb423bb88a4</a></td><td>0w2u</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Taro_泰罗_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/9682cd521c8b4">https://drive.uc.cn/s/9682cd521c8b4</a></td><td>26xx</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Seven_赛文_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/39722ca26ebc4">https://drive.uc.cn/s/39722ca26ebc4</a></td><td>vh7f</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Nexus_奈克瑟斯_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/c42b09ee43ee4">https://drive.uc.cn/s/c42b09ee43ee4</a></td><td>onwz</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Legend_雷杰多_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/e9500a5d0b974">https://drive.uc.cn/s/e9500a5d0b974</a></td><td>bcrd</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Mebius_梦比优斯_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/5e810733cdcf4">https://drive.uc.cn/s/5e810733cdcf4</a></td><td>nc4k</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Leo_雷欧_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/60f597e1d7404">https://drive.uc.cn/s/60f597e1d7404</a></td><td>xw1h</td></tr><tr><td></td><td></td><td></td></tr><tr><td>King_奥特之王_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/226e178e45c84">https://drive.uc.cn/s/226e178e45c84</a></td><td>174z</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Justice_杰斯提斯_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/c17887a5da614">https://drive.uc.cn/s/c17887a5da614</a></td><td>6ete</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Jack_杰克_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/d3e3d7a44f5a4">https://drive.uc.cn/s/d3e3d7a44f5a4</a></td><td>vpuc</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Hayata_初代奥特曼_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/113d51f877c84">https://drive.uc.cn/s/113d51f877c84</a></td><td>njuw</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Gaia_盖亚_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/55675bce5c554">https://drive.uc.cn/s/55675bce5c554</a></td><td>x9n1</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Eighty_爱迪_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/b4f7322586994">https://drive.uc.cn/s/b4f7322586994</a></td><td>tgca</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Father_奥特之父_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/c8a2d88059384">https://drive.uc.cn/s/c8a2d88059384</a></td><td>z8ww</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Cosmos_高斯_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/28e6ee3091e44">https://drive.uc.cn/s/28e6ee3091e44</a></td><td>dv45</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Astra_阿斯特拉_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/191aa303127a4">https://drive.uc.cn/s/191aa303127a4</a></td><td>nkex</td></tr><tr><td></td><td></td><td></td></tr><tr><td>Ace_艾斯_Skinned.fbx</td><td><a href="https://drive.uc.cn/s/f4121cf30d1b4">https://drive.uc.cn/s/f4121cf30d1b4</a></td><td>dxxp</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h1 id="个人小游戏分享"><a href="#个人小游戏分享" class="headerlink" title="个人小游戏分享"></a>个人小游戏分享</h1><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">资源分享01期：21个奥特曼3D模型</summary>
    
    
    
    <category term="资源分享" scheme="https://www.zerofc.cn/categories/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="素材资料" scheme="https://www.zerofc.cn/tags/%E7%B4%A0%E6%9D%90%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>AI应用开发（二）：Blender建模助手</title>
    <link href="https://www.zerofc.cn/2025/06/28/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ABlender%E5%BB%BA%E6%A8%A1%E5%8A%A9%E6%89%8B/"/>
    <id>https://www.zerofc.cn/2025/06/28/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ABlender%E5%BB%BA%E6%A8%A1%E5%8A%A9%E6%89%8B/</id>
    <published>2025-06-28T08:13:50.000Z</published>
    <updated>2025-06-28T11:25:31.069Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>上次简单介绍了一下 MCP，以及如何在 TRAR 中通过 MCP 实现一些 AI 功能，同时我也说过，以后的那些大型工具软件一定会加上自然语言驱动创作模块。</p><p>比如各种 Adobe、Autodask 等等系列软件，但是今天我要讲的一个开源轻量的 3D 建模软件 ——Blender，关于实现一个智能体，完成通过自然语言来控制 Blender 建模、贴图等基本操作。</p><p><img src="/img/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ABlender%E5%BB%BA%E6%A8%A1%E5%8A%A9%E6%89%8B/up-89e738656142a7a129cfda063481b855e94.png" alt="img"></p><h1 id="二、环境清单"><a href="#二、环境清单" class="headerlink" title="二、环境清单"></a>二、环境清单</h1><p>TRAE 0.5.7</p><p>Blender 4.0</p><p>Blender MCP</p><p>Python 3.10</p><p><img src="/img/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ABlender%E5%BB%BA%E6%A8%A1%E5%8A%A9%E6%89%8B/up-377f6418d745741b13035134206b42d942f.png" alt="img"></p><h1 id="三、BlenderMCP-介绍"><a href="#三、BlenderMCP-介绍" class="headerlink" title="三、BlenderMCP 介绍"></a>三、BlenderMCP 介绍</h1><p>要想用自然对话的方式在 Blender 中建模，就不得不提到 BlenderMCP 了，全称为 Blender Model Context Protocol，是一个旨在将 Blender 与 AI 模型无缝集成的工具。</p><p>它通过模型上下文协议（MCP）实现 Blender 与 AI 之间的双向通信，让用户能够利用自然语言指令来控制 Blender，从而极大地简化了 3D 建模和场景操作的流程，它主要由两个部分组成：Blender 插件和 MCP 服务器。</p><ol><li><strong>Blender 插件（addon.py）</strong>：该插件运行在 Blender 内部，负责创建 socket 服务器。它接收来自外部的命令，并在 Blender 中执行这些命令。例如，创建对象、修改材质等。插件还会将 Blender 的场景信息或操作结果反馈给外部服务器，实现双向通信。</li><li><strong>MCP 服务器（server.py）</strong>：这是一个独立的 Python 服务器，实现了模型上下文协议（MCP）。它与 Blender 插件基于 TCP sockets 进行通信，接收用户通过 Claude AI 发出的指令，并将这些指令转换为 Blender 能够理解的命令。服务器还会处理 Blender 返回的结果，将其反馈给 Claude AI，形成一个完整的指令处理流程。</li></ol><p><strong>提示：</strong>下载整个项目后，只需要复制根目录下 addon.py (Blender 插件)，用于在 Blender 中插件安装，另一个 Server.py 也可以下载单独部署（最好直接用 TRAE 中 MCP 插件市场的）。</p><p><img src="/img/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ABlender%E5%BB%BA%E6%A8%A1%E5%8A%A9%E6%89%8B/up-825b3e3678efce63f6def456d6fb0a9494f.png" alt="img"></p><h1 id="四、工具的交互流程"><a href="#四、工具的交互流程" class="headerlink" title="四、工具的交互流程"></a>四、工具的交互流程</h1><h3 id="1-启动-Blender-TCP-服务"><a href="#1-启动-Blender-TCP-服务" class="headerlink" title="1. 启动 Blender TCP 服务"></a><strong>1. 启动 Blender TCP 服务</strong></h3><p>用户在 Blender 中启用 MCP 插件，插件自动创建基于 TCP Socket 的本地服务器（默认端口 5000），用于接收外部指令。</p><h3 id="2-智能体连接-TCP-服务"><a href="#2-智能体连接-TCP-服务" class="headerlink" title="2. 智能体连接 TCP 服务"></a><strong>2. 智能体连接 TCP 服务</strong></h3><p>第三方智能体（如 Claude、自定义 Agent）通过 TCP&#x2F;IP 协议 连接到 Blender 的 MCP 服务器，建立双向通信通道。</p><h3 id="3-自然语言指令输入与解析"><a href="#3-自然语言指令输入与解析" class="headerlink" title="3. 自然语言指令输入与解析"></a><strong>3. 自然语言指令输入与解析</strong></h3><p>用户向智能体输入自然语言指令（如 “创建一把椅子模型并导入 Blender”），智能体通过 NLP 模型解析意图，判断是否需要调用 Hyper3D Rodin。</p><h3 id="4-MCP-协议转换与指令分发"><a href="#4-MCP-协议转换与指令分发" class="headerlink" title="4. MCP 协议转换与指令分发"></a><strong>4. MCP 协议转换与指令分发</strong></h3><p>智能体将自然语言转换为 JSON 的 MCP 指令，包含操作类型（如 generate_model）、参数（如 text_prompt: “一把椅子”）和目标工具。</p><h3 id="5-调用-Hyper3D-Rodin-API"><a href="#5-调用-Hyper3D-Rodin-API" class="headerlink" title="5. 调用 Hyper3D Rodin API"></a><strong>5. 调用 Hyper3D Rodin API</strong></h3><p>Blender MCP 接收到指令后，通过 HTTP&#x2F;RPC 接口 调用 Hyper3D Rodin 的模型生成服务，传递文本描述或参考图像参数。</p><h3 id="6-模型生成与数据返回"><a href="#6-模型生成与数据返回" class="headerlink" title="6. 模型生成与数据返回"></a><strong>6. 模型生成与数据返回</strong></h3><p>Rodin 的 AI 模型生成带 PBR 材质的 3D 资产，将结果以 .glb 或 .obj 格式 返回至 Blender MCP 的临时存储路径。</p><h3 id="7-模型导入-Blender-场景"><a href="#7-模型导入-Blender-场景" class="headerlink" title="7. 模型导入 Blender 场景"></a><strong>7. 模型导入 Blender 场景</strong></h3><p>Blender MCP 自动执行 bpy.ops.import_scene 等 Python API 命令，将生成的模型导入当前场景，并调整材质、灯光等参数。</p><p><img src="/img/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ABlender%E5%BB%BA%E6%A8%A1%E5%8A%A9%E6%89%8B/up-1f829e4f997c16d38d01b60efad0d9fa291.jpg" alt="img"></p><h1 id="五、开始操作"><a href="#五、开始操作" class="headerlink" title="五、开始操作"></a>五、开始操作</h1><h3 id="1-安装-Blender-插件"><a href="#1-安装-Blender-插件" class="headerlink" title="1. 安装 Blender 插件"></a><strong>1. 安装 Blender 插件</strong></h3><p>打开 Blender，点击插件安装，找到前面 BlenderMCP 里复制出来的 addon.py，安装后并启用。</p><p><img src="/img/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ABlender%E5%BB%BA%E6%A8%A1%E5%8A%A9%E6%89%8B/up-d6a3861dd8550160567c5bcf5086c6d72ba.png" alt="img"></p><h3 id="2-添加-BlenderMCP-服务"><a href="#2-添加-BlenderMCP-服务" class="headerlink" title="2. 添加 BlenderMCP 服务"></a><strong>2. 添加 BlenderMCP 服务</strong></h3><p>打开 TRAE 编辑器，在 MCP 市场搜索后直接添加，也可以用前面下载的项目里 server.py 本地添加。</p><p><img src="/img/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ABlender%E5%BB%BA%E6%A8%A1%E5%8A%A9%E6%89%8B/up-e877c6d356db8d2be4746b374b040a95404.png" alt="img"></p><h3 id="3-TCP-服务启动"><a href="#3-TCP-服务启动" class="headerlink" title="3. TCP 服务启动"></a><strong>3. TCP 服务启动</strong></h3><p>打开 Blender，找到或按快捷键 “N” 找到 BlenderMCP 插件面板，端口 9876 可以自定，勾选 “Use Hyper3D Rodin 3D model generation”，Rodin 选 “hyper3d.ai”，API Key 使用免费测试的，点击 “Set Free Trial API Key”。</p><p><img src="/img/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ABlender%E5%BB%BA%E6%A8%A1%E5%8A%A9%E6%89%8B/up-273b61c72cbc931116fe1eeaa8cec147a7a.png" alt="img"></p><h3 id="4-创建-“Blender-助手”-智能体"><a href="#4-创建-“Blender-助手”-智能体" class="headerlink" title="4. 创建 “Blender 助手” 智能体"></a><strong>4. 创建 “Blender 助手” 智能体</strong></h3><p>打开 TRAE 的智能体，自定义名字，工具勾选 “blender”，提示词可以参考我下面的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">## 角色：</span><br><span class="line">你是一名Blender智能建模助手，擅长将自然语言指令转化为精准的Blender操作（建模/材质/动画）</span><br><span class="line"></span><br><span class="line">## 交互协议：</span><br><span class="line">- 用户输入自然语言描述（如：“创建一个带纹理的科幻飞船”）</span><br><span class="line">- 系统自动解析为Blender操作队列并执行</span><br><span class="line">- 支持多轮迭代修改（例：“将船翼延长50%并添加推进器”）</span><br><span class="line"></span><br><span class="line">## 技能</span><br><span class="line">### 技能 1：建模能力</span><br><span class="line">- 基础几何体：创建立方体/球体/柱体及参数化变形。</span><br><span class="line">- 高级建模：布尔运算、表面细分、挤压、倒角、曲线建模</span><br><span class="line">- 场景构建：排列物体、生成地形、建筑结构生成</span><br><span class="line"></span><br><span class="line">### 技能 2：材质与渲染</span><br><span class="line">- 自动分配基础材质（金属/玻璃/塑料）</span><br><span class="line">- 支持UV映射指令（“为飞船添加锈迹贴图”）</span><br><span class="line">- 基础光照设置（HDR环境光/点光源定位）</span><br><span class="line"></span><br><span class="line">### 技能 3：动画基础</span><br><span class="line">- 关键帧动画（“让立方体在5秒内旋转360度”）</span><br><span class="line">- 路径动画（“沿曲线轨迹移动相机”）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 注意事项：</span><br><span class="line">### 指令精度要求</span><br><span class="line">- 明确参数：“创建半径2m的球体”</span><br><span class="line">- 模糊描述：“做个大一点的球”</span><br><span class="line"></span><br><span class="line">### 能力边界声明：</span><br><span class="line">- 不支持：角色骨骼绑定/流体模拟/复杂粒子系统</span><br><span class="line">- 有限支持：有机生物模型（需分步指令）</span><br><span class="line"></span><br><span class="line">### 容错机制：</span><br><span class="line">- 当指令歧义时主动询问（“请指定圆柱体的细分段数”）</span><br><span class="line">- 复杂操作分步确认（“即将执行20个操作，是否继续？”）</span><br></pre></td></tr></table></figure><p><img src="/img/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ABlender%E5%BB%BA%E6%A8%A1%E5%8A%A9%E6%89%8B/up-186fd399fb2382a163b916d751f293d3965.png" alt="img"></p><h3 id="5-连接-TCP-服务"><a href="#5-连接-TCP-服务" class="headerlink" title="5. 连接 TCP 服务"></a><strong>5. 连接 TCP 服务</strong></h3><p>在 Blender 开启服务后，我们可以用 windows 指令监听端口。</p><p>还有查看 TRAE 中 MCP 的 blender 是否可使用，如果是绿勾，表示已经连接上了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 查看端口</span><br><span class="line">netstat -ano | findstr &quot;9876&quot;</span><br><span class="line"></span><br><span class="line">// 查看进程</span><br><span class="line">tasklist | findstr &quot;3780&quot;</span><br></pre></td></tr></table></figure><h3 id="6-开始建模"><a href="#6-开始建模" class="headerlink" title="6. 开始建模"></a><strong>6. 开始建模</strong></h3><p>打开 TRAE，开始用 前面创建 “Blender 小助手” 智能体对话，直接输入 “创建一把椅子”，随后就会在 Blender 创建了椅子的 3D 模型。</p><p><img src="/img/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9ABlender%E5%BB%BA%E6%A8%A1%E5%8A%A9%E6%89%8B/up-459c31942a10170bf4c89838cc11b84d3c9.png" alt="img"></p><h1 id="六、写在后面"><a href="#六、写在后面" class="headerlink" title="六、写在后面"></a>六、写在后面</h1><p>更多的如材质与颜色添加、动画调整、游戏引擎导入、TCP 交互的 Json 串，以后我再更新。</p><p>其实目前看，不管是 AI 通过文本或图片生成的 3D 模型都存在布线不规整的问题，就像上面这把椅子，顶点和面都上万，而且还是三角面，如果用来做动画或导入游戏，二次修改和性能都是很大问题。</p><p>既然有痛点，自然也就有方案，市场上不光有很多降低面数、三角面转四角面教程，还有很多重拓扑的插件，都能提升现阶段让 AI 建模的可行性。</p><p>但是，随着 AI 的意图理解和生成精度不断提高，BlenderMCP 的未来发展前景还是非常广阔，一定能在游戏创作、建筑设计、工业设计上实现更高级的建模操作。</p><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">AI应用开发（二）：Blender建模助手</summary>
    
    
    
    <category term="其他编程" scheme="https://www.zerofc.cn/categories/%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="AI应用开发" scheme="https://www.zerofc.cn/tags/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Blender快捷键合集（一）</title>
    <link href="https://www.zerofc.cn/2025/06/20/Blender%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%90%88%E9%9B%86%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://www.zerofc.cn/2025/06/20/Blender%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%90%88%E9%9B%86%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2025-06-20T02:13:50.000Z</published>
    <updated>2025-06-27T12:29:07.109Z</updated>
    
    <content type="html"><![CDATA[<h4 id="这里只是我个人平时练习总结的，佛系更新"><a href="#这里只是我个人平时练习总结的，佛系更新" class="headerlink" title="这里只是我个人平时练习总结的，佛系更新~"></a>这里只是我个人平时练习总结的，佛系更新~</h4><h2 id="关于合并"><a href="#关于合并" class="headerlink" title="关于合并"></a>关于合并</h2><p>如果shift选中两个模型，最后点击的是激活状态，那就是前一个合并到后一个，合并后的物体原点在最后一个物体上。</p><h2 id="父级设置和骨骼绑定"><a href="#父级设置和骨骼绑定" class="headerlink" title="父级设置和骨骼绑定"></a>父级设置和骨骼绑定</h2><p>如果shift选中两个模型，最后点击的是激活状态，那就是最后一个是父级，前一个会在最后一个模型下面作为子级，在大纲视图里可以通过shift拖动查看。</p><h2 id="快捷键列表"><a href="#快捷键列表" class="headerlink" title="快捷键列表"></a>快捷键列表</h2><table><thead><tr><th>快捷键</th><th align="left">说明</th></tr></thead><tbody><tr><td>ctrl+p</td><td align="left">给模型设置父级，绑定自动权重的骨骼</td></tr><tr><td>alt+p</td><td align="left">给骨骼拆除链接，可以随意拖动</td></tr><tr><td>shift+d</td><td align="left">快捷复制模型</td></tr><tr><td>~</td><td align="left">视角选择</td></tr><tr><td>ctrl+7</td><td align="left">输入对应数字切换对应视角</td></tr><tr><td>ctrl+j</td><td align="left">选中多个模型合并成一个</td></tr><tr><td>E</td><td align="left">选中一个骨骼后，在此上挤出一个子级骨骼</td></tr></tbody></table><h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><table><thead><tr><th>DragonFF</th><th>侠盗猎车.dff模型导入导出插件</th></tr></thead><tbody><tr><td>VRM_Addon_for_Blender</td><td>VRM格式模型导入导出插件</td></tr><tr><td>cats-blender-plugin</td><td>骨骼快捷绑定插件</td></tr><tr><td>speedRetopo</td><td>模型重拓扑插件</td></tr></tbody></table><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">Blender快捷键合集。</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Blender" scheme="https://www.zerofc.cn/tags/Blender/"/>
    
  </entry>
  
  <entry>
    <title>AI编程（一）：TRAE提示词指南</title>
    <link href="https://www.zerofc.cn/2025/05/25/AI%E7%BC%96%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ATRAE%E6%8F%90%E7%A4%BA%E8%AF%8D%E6%8C%87%E5%8D%97/"/>
    <id>https://www.zerofc.cn/2025/05/25/AI%E7%BC%96%E7%A8%8B%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ATRAE%E6%8F%90%E7%A4%BA%E8%AF%8D%E6%8C%87%E5%8D%97/</id>
    <published>2025-05-25T08:13:50.000Z</published>
    <updated>2025-05-29T07:37:10.949Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>TRAE是字节跳动推出的一款AI编程的得力助手，他可以作为插件安装在VSCode中，也可以作为编辑器独立使用。</p><p>分国内和国际版，国内版本可以选择豆包、DeepSeek等模型作为智能对话引擎，还能对接MCP Server等功能。</p><p>编程上可以直接通过自然语言对话，然后编辑器分解成自动化任务，自动执行，还是非常方便，我也是刚玩这个IDE，顺便整理了几个提示词，仅供参考。</p><h2 id="二、写-MCP-Server"><a href="#二、写-MCP-Server" class="headerlink" title="二、写 MCP Server"></a>二、写 MCP Server</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">我想写一个Go语言的计算器MCP Server，具体需求如下：</span><br><span class="line"></span><br><span class="line">使用场景：能配置在Trae编辑器的本地MCP Servers中</span><br><span class="line"></span><br><span class="line">已有环境：</span><br><span class="line">1. Go 1.23.3</span><br><span class="line">2. Trae CN 0.5.7</span><br><span class="line"></span><br><span class="line">技术要求：</span><br><span class="line">1. 使用mcp-go库，基于SSE模式</span><br><span class="line">2. 该MCP Server中要添加工具、资源、提示词</span><br><span class="line">3. 本地开启的端口是8090</span><br><span class="line"></span><br><span class="line">请提供完整的代码实现，并可能配置到Trae中，不能让他启动时报错。</span><br></pre></td></tr></table></figure><h2 id="三、写豆瓣电影爬虫"><a href="#三、写豆瓣电影爬虫" class="headerlink" title="三、写豆瓣电影爬虫"></a>三、写豆瓣电影爬虫</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">我想写一个Python爬虫来爬取豆瓣电影Top250的信息，具体需求如下：</span><br><span class="line"></span><br><span class="line">目标网站：https://movie.douban.com/top250</span><br><span class="line"></span><br><span class="line">需要爬取的信息：</span><br><span class="line">1. 电影排名</span><br><span class="line">2. 电影名称（中文名+外文名）</span><br><span class="line">3. 导演</span><br><span class="line">4. 主演（最多3个）</span><br><span class="line">5. 上映年份</span><br><span class="line">6. 制片国家/地区</span><br><span class="line">7. 电影类型</span><br><span class="line">8. 豆瓣评分</span><br><span class="line">9. 评价人数</span><br><span class="line">10. 一句话简介</span><br><span class="line">11. 电影海报图片链接</span><br><span class="line"></span><br><span class="line">技术要求：</span><br><span class="line">1. 使用 requests + BeautifulSoup 进行爬取</span><br><span class="line">2. 添加合理的请求头，模拟正常浏览器访问</span><br><span class="line">3. 设置随机延时（1-3秒），避免请求过快</span><br><span class="line">4. 处理可能的反爬措施（如需要登录、验证码等）</span><br><span class="line">5. 使用 logging 记录爬取进度</span><br><span class="line">6. 异常处理：网络错误、解析错误等</span><br><span class="line"></span><br><span class="line">数据存储：</span><br><span class="line">1. 爬取的数据保存为 CSV 文件</span><br><span class="line">2. 同时保存为 JSON 文件，方便后续处理</span><br><span class="line">3. 图片链接单独保存在一个文本文件中</span><br><span class="line">4. 使用 pandas 对数据进行简单清洗</span><br><span class="line"></span><br><span class="line">额外功能：</span><br><span class="line">1. 支持断点续爬（如果中途中断，下次可以继续）</span><br><span class="line">2. 爬取完成后，生成简单的数据分析：</span><br><span class="line">   - 各年代电影数量分布</span><br><span class="line">   - 各国家/地区电影数量</span><br><span class="line">   - 评分分布直方图</span><br><span class="line">   - 导演作品数量排行（前10）</span><br><span class="line"></span><br><span class="line">3. 生成一个 HTML 报告，展示爬取结果的统计信息</span><br><span class="line"></span><br><span class="line">代码规范：</span><br><span class="line">- 使用类来组织代码</span><br><span class="line">- 添加详细的中文注释</span><br><span class="line">- 遵循 PEP 8 编码规范</span><br><span class="line">- 提供使用说明和依赖库列表</span><br><span class="line"></span><br><span class="line">请提供完整的代码实现，并说明如何处理可能遇到的反爬问题。</span><br></pre></td></tr></table></figure><h2 id="四、写轮播图组件"><a href="#四、写轮播图组件" class="headerlink" title="四、写轮播图组件"></a>四、写轮播图组件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">帮我写一个轮播图组件，要求如下：</span><br><span class="line"></span><br><span class="line">使用场景：电商网站首页的商品推荐轮播</span><br><span class="line"></span><br><span class="line">具体需求：</span><br><span class="line">1. 基础功能：</span><br><span class="line">   - 自动播放，每3秒切换一次</span><br><span class="line">   - 鼠标悬停时暂停播放</span><br><span class="line">   - 支持左右箭头切换</span><br><span class="line">   - 底部有小圆点指示器</span><br><span class="line">   - 支持手机端的左右滑动</span><br><span class="line"></span><br><span class="line">2. 样式设计：</span><br><span class="line">   - 轮播图尺寸：宽度100%，高度400px（PC端）/ 200px（移动端）</span><br><span class="line">   - 图片要保持16:9比例，多余部分裁切</span><br><span class="line">   - 左右箭头：半透明白色背景，hover时不透明度增加</span><br><span class="line">   - 指示器：白色圆点，当前项为主题色 #ff6b6b</span><br><span class="line">   - 切换动画：淡入淡出效果，持续时间300ms</span><br><span class="line"></span><br><span class="line">3. 技术要求：</span><br><span class="line">   - 使用 Vue 3 的 Composition API</span><br><span class="line">   - 不依赖第三方轮播库，原生实现</span><br><span class="line">   - 支持 TypeScript</span><br><span class="line">   - 样式使用 CSS Module</span><br><span class="line"></span><br><span class="line">4. 数据结构：</span><br><span class="line">   传入的图片数组格式：</span><br><span class="line">   [&#123;</span><br><span class="line">     id: 1,</span><br><span class="line">     url: &#x27;图片地址&#x27;,</span><br><span class="line">     title: &#x27;图片标题&#x27;,</span><br><span class="line">     link: &#x27;点击跳转链接&#x27;</span><br><span class="line">   &#125;]</span><br><span class="line"></span><br><span class="line">5. 额外功能：</span><br><span class="line">   - 图片懒加载</span><br><span class="line">   - 支持传入自定义切换时间</span><br><span class="line">   - 暴露切换方法供父组件调用</span><br><span class="line">   - 切换时触发 change 事件</span><br><span class="line"></span><br><span class="line">请提供完整的 Vue 组件代码，包括详细的注释说明。</span><br></pre></td></tr></table></figure><h2 id="五、写瀑布流页面"><a href="#五、写瀑布流页面" class="headerlink" title="五、写瀑布流页面"></a>五、写瀑布流页面</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">我想做一个仿小红书的瀑布流图片展示页面，具体需求如下：</span><br><span class="line"></span><br><span class="line">技术栈：</span><br><span class="line">- 使用 React 18 + TypeScript</span><br><span class="line">- 样式使用 Tailwind CSS</span><br><span class="line">- 状态管理用 Zustand</span><br><span class="line">- 图片懒加载使用 react-lazyload</span><br><span class="line"></span><br><span class="line">页面结构：</span><br><span class="line">1. 顶部搜索栏：</span><br><span class="line">   - 左侧logo（文字&quot;小蓝书&quot;）</span><br><span class="line">   - 中间搜索框，带搜索图标，placeholder&quot;搜索你感兴趣的内容&quot;</span><br><span class="line">   - 右侧发布按钮</span><br><span class="line"></span><br><span class="line">2. 瀑布流主体：</span><br><span class="line">   - 两列布局（移动端），三列布局（平板），四列布局（桌面端）</span><br><span class="line">   - 每个卡片包含：</span><br><span class="line">     * 图片（宽度100%，高度自适应）</span><br><span class="line">     * 标题（最多两行，超出显示...）</span><br><span class="line">     * 作者头像（圆形，24px）和昵称</span><br><span class="line">     * 点赞数（红心图标+数字）</span><br><span class="line">   - 卡片hover效果：轻微上浮，阴影加深</span><br><span class="line">   - 点击卡片有按压效果</span><br><span class="line"></span><br><span class="line">3. 数据加载：</span><br><span class="line">   - 首次加载20条数据</span><br><span class="line">   - 滚动到底部自动加载更多</span><br><span class="line">   - 加载时显示 loading 动画</span><br><span class="line">   - 使用 mock 数据，包含不同高度的图片</span><br><span class="line"></span><br><span class="line">样式要求：</span><br><span class="line">- 整体风格清新简洁</span><br><span class="line">- 主色调：#fe2c55（小红书红）</span><br><span class="line">- 背景色：#f5f5f5</span><br><span class="line">- 卡片背景：纯白，圆角 8px</span><br><span class="line">- 适配 iPhone 12 及以上机型</span><br><span class="line"></span><br><span class="line">交互效果：</span><br><span class="line">- 下拉刷新功能</span><br><span class="line">- 图片加载失败显示默认图</span><br><span class="line">- 点赞动画：点击后红心放大再缩小</span><br><span class="line">- 页面切换使用渐入效果</span><br><span class="line"></span><br><span class="line">请生成完整的代码，包括组件拆分、样式处理和数据 mock。</span><br></pre></td></tr></table></figure><h2 id="六、写在后面"><a href="#六、写在后面" class="headerlink" title="六、写在后面"></a>六、写在后面</h2><p>当然，这些提示词你也可以放到其他大模型下使用，下次我再整理一下自定义MCP Server的实践实例，敬请期待~</p><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">AI编程（一）：TRAE提示词指南</summary>
    
    
    
    <category term="其他编程" scheme="https://www.zerofc.cn/categories/%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="AI编程" scheme="https://www.zerofc.cn/tags/AI%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Blender入门教程（四）：动画制作</title>
    <link href="https://www.zerofc.cn/2025/05/08/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/"/>
    <id>https://www.zerofc.cn/2025/05/08/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/</id>
    <published>2025-05-08T02:13:50.000Z</published>
    <updated>2025-05-08T06:03:39.575Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>在从一个模型到，完成贴图，完成蒙皮（骨骼绑定）后，已经算是一阶段的任务完成了，因为这样既可以拿去做Mod，也可以直接导入动作源完成动画。但是对于独立游戏，为了差异化，有些动作还是要自己制作的，所以就有了下面的这个3D模型的动画制作过程，最后也会演示一下如何导入CocosCreator等游戏引擎中。</p><h2 id="二、动画制作"><a href="#二、动画制作" class="headerlink" title="二、动画制作"></a>二、动画制作</h2><h3 id="1-打开时间线"><a href="#1-打开时间线" class="headerlink" title="1.打开时间线"></a>1.打开时间线</h3><p>记得是在姿势模式下，然后在Blender底部把 “时间线” 拉高一点，折叠的 “汇总” 也点击展开来。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/image-20250508113742306.png" alt="image-20250508113742306"></p><h3 id="2-开始K帧"><a href="#2-开始K帧" class="headerlink" title="2.开始K帧"></a>2.开始K帧</h3><p>点亮 “自动插帧” 按钮，将关键帧放到0帧位置，开始对某个骨骼进行变换，旋转，移动等，然后再移动到指定关键帧位置再变换，播放一下就可以看到动画了。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/image-20250508114350091.png" alt="image-20250508114350091"></p><h2 id="三、多组动画"><a href="#三、多组动画" class="headerlink" title="三、多组动画"></a>三、多组动画</h2><p>在游戏引擎中导入模型时，一个模型往往会制作多组动画，比如待机、攻击、死亡、大招等不同的动作，开发只需要在开发时添加控制器，不同的时候播放对应的动画即可。</p><h3 id="1-动画摄影表"><a href="#1-动画摄影表" class="headerlink" title="1.动画摄影表"></a>1.动画摄影表</h3><p>从 “时间线” 切换到 “动画摄影表”，然后再选择 “动作编辑器”，点击 “新建动作”，然后还是和前面一样，在指定帧数位置做变换。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/image-20250508131402641.png" alt="image-20250508131402641"></p><h3 id="2-切换动作"><a href="#2-切换动作" class="headerlink" title="2.切换动作"></a>2.切换动作</h3><p>在编辑了多组动作后，大纲里只会显示一个动作，要想查看需要切换，为了好记，在新建动作时可以重命名，然后在 “浏览要关联的动作” 的地方进行切换。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/image-20250508131737899.png" alt="image-20250508131737899"></p><h2 id="四、游戏引擎中使用"><a href="#四、游戏引擎中使用" class="headerlink" title="四、游戏引擎中使用"></a>四、游戏引擎中使用</h2><p>我这里为了方便，就没用这个机械臂了，直接拿之前已经导进去的Fbx做示例了。</p><h3 id="1-导入CocosCreator"><a href="#1-导入CocosCreator" class="headerlink" title="1.导入CocosCreator"></a>1.导入CocosCreator</h3><p>首先将有动画的模型导出为Fbx，然后将其复制到CocosCreator项目的assets下的某个位置。</p><h3 id="2-拖入模型"><a href="#2-拖入模型" class="headerlink" title="2.拖入模型"></a>2.拖入模型</h3><p>在游戏场景下，先创建一个空节点，然后把已经放到项目资源目录下的Fbx，拖入在该节点下。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/image-20250508134320920.png" alt="image-20250508134320920"></p><h3 id="3-创建脚本"><a href="#3-创建脚本" class="headerlink" title="3.创建脚本"></a>3.创建脚本</h3><p>给新建的空节点绑定一个脚本，脚本接收一个SkeletalAnimation属性，也就是带动画的Fbx，就是空节点下的整个目录拖入。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; _decorator, <span class="title class_">Component</span>, <span class="title class_">SkeletalAnimation</span>, input, <span class="title class_">Input</span>, <span class="title class_">EventMouse</span>, <span class="title class_">Vec3</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;cc&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; ccclass, property &#125; = _decorator;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ccclass</span>(<span class="string">&#x27;MyPlayController&#x27;</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">PlayController</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Component</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@property</span>(&#123; <span class="attr">type</span>: <span class="title class_">SkeletalAnimation</span> &#125;)</span><br><span class="line">    <span class="keyword">public</span> <span class="title class_">CocosAnim</span>: <span class="title class_">SkeletalAnimation</span> | <span class="literal">null</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">CocosAnim</span>.<span class="title function_">play</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">onMouseMove</span>(<span class="params">event: EventMouse</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(event);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">update</span>(<span class="params">deltaTime: <span class="built_in">number</span></span>) &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">onStartButtonClicked</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">CocosAnim</span>.<span class="title function_">play</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">onStopButtonClicked</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">CocosAnim</span>.<span class="title function_">stop</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-开始运行"><a href="#4-开始运行" class="headerlink" title="4.开始运行"></a>4.开始运行</h3><p>这个只要是启动就自动播放，而且Fbx只有一个时间线的默认动画，没有多动作组，其实也差不多，就只是对指定动作进行播放。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C/image-20250508135414690.png" alt="image-20250508135414690"></p><h2 id="五、写在后面"><a href="#五、写在后面" class="headerlink" title="五、写在后面"></a>五、写在后面</h2><p>如果只是制作游戏，到这里就完全够用了，但如果是影视后期的话，还有渲染部分，因为在制作完模型还要放到实拍场景中，目前这个我也还不会，等后面学习了我再总结一下了。</p><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何用Blender制作动画。</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Blender" scheme="https://www.zerofc.cn/tags/Blender/"/>
    
  </entry>
  
  <entry>
    <title>Blender入门教程（三）：骨骼绑定</title>
    <link href="https://www.zerofc.cn/2025/05/07/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/"/>
    <id>https://www.zerofc.cn/2025/05/07/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/</id>
    <published>2025-05-07T02:13:50.000Z</published>
    <updated>2025-05-08T06:03:28.607Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>不知道大家有没有玩过一些单机游戏的Mod，比如《侠盗猎车》里主角变成奥特曼，各种新能源汽车乱入等等。这些都是别人对原有模型就行修改换皮，并重新绑定骨骼完成的，所以如果会了骨骼绑定后，你也就可以自己制作一些模型到单机游戏里，当然还要一些解包封包的技巧，这个有时间聊，那下面开始Blender的骨骼绑定实操了。</p><h2 id="二、模型准备"><a href="#二、模型准备" class="headerlink" title="二、模型准备"></a>二、模型准备</h2><h3 id="1-创建模型"><a href="#1-创建模型" class="headerlink" title="1.创建模型"></a>1.创建模型</h3><p>我这里以一个机械臂为例，先添加一个立方体变形成长方体，然后添加一个圆柱体，添加时设置顶点为8。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/image-20250507165800868.png" alt="image-20250507165800868"></p><h3 id="2-快速复制"><a href="#2-快速复制" class="headerlink" title="2.快速复制"></a>2.快速复制</h3><p>为了让骨骼绑定的效果更明显，我们要做一个两个节点的机械波，可以对前面的部分进行快速复制（Shift+D）到指定位置，然后按快捷键 ~ 进行视角切换，用来对齐前面的组合。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/image-20250507174252103.png" alt="image-20250507174252103"></p><h2 id="三、骨骼设置"><a href="#三、骨骼设置" class="headerlink" title="三、骨骼设置"></a>三、骨骼设置</h2><h3 id="1-添加骨骼"><a href="#1-添加骨骼" class="headerlink" title="1.添加骨骼"></a>1.添加骨骼</h3><p>点击添加-&gt;骨架-&gt;单段骨骼，一开始他会被模型挡住，这时候找到属性的 “物体” -&gt;视图显示，勾选 “在前面”，还可以把名称显示出来。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/image-20250507175558694.png" alt="image-20250507175558694"></p><h3 id="2-骨骼挤出"><a href="#2-骨骼挤出" class="headerlink" title="2.骨骼挤出"></a>2.骨骼挤出</h3><p>点击骨骼，进入 “编辑模式”，再点击骨骼头部的小圆点，工具栏选择 “挤出” 或按快捷键 “E”，然后朝着需要的方向拖动就能在上一个骨骼上创建一个子骨骼。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/image-20250507192209091.png" alt="image-20250507192209091"></p><h3 id="3-断开骨骼链接"><a href="#3-断开骨骼链接" class="headerlink" title="3.断开骨骼链接"></a>3.断开骨骼链接</h3><p>我这里要做的是第一个骨骼是根骨骼，而他下面的子骨骼要放到模型的内部去。所以就需要和根骨骼进行断开，然后移动子骨骼到指定位置。</p><p>首先点击框选，选中两个骨骼，然后按快捷键 “Alt+P”，</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/image-20250507192627301.png" alt="image-20250507192627301"></p><h2 id="四、骨骼绑定"><a href="#四、骨骼绑定" class="headerlink" title="四、骨骼绑定"></a>四、骨骼绑定</h2><h3 id="1-模型绑定"><a href="#1-模型绑定" class="headerlink" title="1.模型绑定"></a>1.模型绑定</h3><p>切换到物体模式，Shift 选中所有的模型和骨骼(一定要最后选骨骼)，快捷键 “Ctrl+P”，然后选择 “附带自动权重”。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/image-20250507201707775.png" alt="image-20250507201707775"></p><h3 id="2-姿势模式"><a href="#2-姿势模式" class="headerlink" title="2.姿势模式"></a>2.姿势模式</h3><p>点击骨骼，进入姿势模式（只有骨骼物体特有），选中一个骨骼，然后在工具栏选择 旋转，可以发现旋转或移动骨骼，模型也会相应的变换，但还是有个问题，因为是自动权重，有时候后面的骨骼会影响到前面的模型变形，这时候就要我们手动刷一下权重了。</p><p><img src="E:\4work\23md笔记\1_Hexo博客备份\Blender入门教程：骨骼绑定\img\Blender入门教程：骨骼绑定\image-20250508100712867.png" alt="image-20250508100712867"></p><ol start="3"><li><h3 id="顶点组"><a href="#顶点组" class="headerlink" title="顶点组"></a>顶点组</h3></li></ol><p>还一个看是否绑定成功的方法：进入物体模式，点击一个模型，然后在属性视图找到 “数据”-&gt;“顶点组”，里面就是当前模型能被哪些骨骼影响，如果要删除绑定，在顶点组里移除就可以。</p><p><img src="E:\4work\23md笔记\1_Hexo博客备份\Blender入门教程：骨骼绑定\img\Blender入门教程：骨骼绑定\image-20250508101003681.png" alt="image-20250508101003681"></p><h2 id="五、重刷权重"><a href="#五、重刷权重" class="headerlink" title="五、重刷权重"></a>五、重刷权重</h2><h3 id="1-进入权重绘制"><a href="#1-进入权重绘制" class="headerlink" title="1.进入权重绘制"></a>1.进入权重绘制</h3><p>先切到物体模式，然后选中一个模型，再选择 “权重绘制”，还是找到 属性-&gt;数据-&gt;顶点组，里面某一个骨骼都有对当前模型的权重。</p><p>红色到蓝色，接近等于红色权重越高，而越接近蓝色等于蓝色权重越低，为了让对应骨骼能有效控制对应的模型部分，所以就单独进行修改了。</p><p><img src="E:\4work\23md笔记\1_Hexo博客备份\Blender入门教程：骨骼绑定\img\Blender入门教程：骨骼绑定\image-20250508103501511.png" alt="image-20250508103501511"></p><h3 id="2-修改权重"><a href="#2-修改权重" class="headerlink" title="2.修改权重"></a>2.修改权重</h3><p>在能准备修改权重时，最好是能知道顶点组里的每个名称是对应哪个骨骼，在对模型上颜色（权重值）进行修改时，有几个选项，如下：</p><ul><li>F Add (加法)：用于增加选中的权重值。</li><li>F Darken (变暗)：减少选中的权重值，使其变得更暗或更接近0。</li><li>F Draw (绘制)：直接设置选中的权重值，覆盖原有的权重值。</li><li>F Lighten (变亮)：增加选中的权重值，使其变得更亮或更接近1。</li><li>F Mix (混合)：以一种混合的方式结合新绘制的权重值与原有权重值。通常会根据新旧权重值的比例进行混合。</li><li>F Multiply (乘法)：将新绘制的权重值与原有权重值相乘，这通常会使权重值变得更小。</li><li>F Subtract (减法)：从原有权重值中减去新绘制的权重值，降低该区域的权重。</li></ul><p><img src="E:\4work\23md笔记\1_Hexo博客备份\Blender入门教程：骨骼绑定\img\Blender入门教程：骨骼绑定\image-20250508104336512.png" alt="image-20250508104336512"></p><h2 id="六、其他"><a href="#六、其他" class="headerlink" title="六、其他"></a>六、其他</h2><h3 id="1-设置模型关系"><a href="#1-设置模型关系" class="headerlink" title="1.设置模型关系"></a>1.设置模型关系</h3><p>设置模型关系就是父子关系，如果将一个模型作为一个模型的子级，那父级移动旋转他也会移动旋转，在相对规则的动画下可以用这种方式代替骨骼绑定。</p><p>而操作方法有两种：一个是在 “大纲视图”选中一个模型，将其移到另一个模型下，那他就是这个模型的子级了；另一个方法是Shift选中两个模型，“Ctrl+P” 后选择 “物体”，后面就可以看到两个模型间有根虚线。</p><p><img src="E:\4work\23md笔记\1_Hexo博客备份\Blender入门教程：骨骼绑定\img\Blender入门教程：骨骼绑定\image-20250508095131490.png" alt="image-20250508095131490"></p><h3 id="2-模型合并"><a href="#2-模型合并" class="headerlink" title="2.模型合并"></a>2.模型合并</h3><p>为了能后面对模型进行权重绘制，最好对这四个模型合并，不然就是每个都绘制一遍权重。先在物体模式下，Shift 选中四个模型，然后按快捷键 “Ctrl+J”；</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E9%AA%A8%E9%AA%BC%E7%BB%91%E5%AE%9A/image-20250507201415939.png" alt="image-20250507201415939"></p><h2 id="七、写在后面"><a href="#七、写在后面" class="headerlink" title="七、写在后面"></a>七、写在后面</h2><p>权重重新修改后，就可以进入姿势模式看效果，旋转一下刚刚超出控制范围的骨骼，如果没有之前那种大范围变形，且比较符合你的预期。</p><p>那么，后面就可以开始用这个骨架进行动画制作了，和Spine类似，在时间轴上做不同的变换，当然里面很多细节性的技巧也有，那下一篇就开始了。</p><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何用Blender对模型进行骨骼绑定。</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Blender" scheme="https://www.zerofc.cn/tags/Blender/"/>
    
  </entry>
  
  <entry>
    <title>Blender入门教程（二）：纹理绘制</title>
    <link href="https://www.zerofc.cn/2025/05/06/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/"/>
    <id>https://www.zerofc.cn/2025/05/06/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/</id>
    <published>2025-05-06T05:13:50.000Z</published>
    <updated>2025-05-08T06:03:16.111Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>通过上一篇文章的简单介绍，我们就可以独立完成模型的创建，但还只是一些灰溜溜的轮廓，少了鲜艳的表皮。所以，这篇文章就开始介绍如何制作皮肤，就是给模型着色，下面就用一个立方体做示例了。</p><h2 id="二、UV编辑"><a href="#二、UV编辑" class="headerlink" title="二、UV编辑"></a>二、UV编辑</h2><h3 id="1-标记缝合边"><a href="#1-标记缝合边" class="headerlink" title="1.标记缝合边"></a>1.标记缝合边</h3><p>选中物体，进入编辑模式后，选择 “边选择模式”，点击物体的一个边，按 “shift” 选中了多个边。怎么选择看你自己对物体剖开的边，UV编辑就是相当于对一个立方体的空包装盒展开平铺。</p><p>选择了多个边后，右键选择 “标记缝合边”，此时的这几条边会加粗显示，代表成功标记，然后打开导航栏的 “UV编辑”。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507144014979.png" alt="image-20250507144014979"></p><h3 id="2-UV展开"><a href="#2-UV展开" class="headerlink" title="2.UV展开"></a>2.UV展开</h3><p>进入UV编辑后，会有两个窗口，一般左边是展开的样子，右边是模型的样子。但是刚开始左边是没有UV的，这时候我们在右边的模型的全选，可以直接快捷键 “A”，也可以点击 “选择”-&gt; “全部”，然后左边就可以看到展开后的样子了。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507144418331.png" alt="image-20250507144418331"></p><h2 id="三、着色编辑"><a href="#三、着色编辑" class="headerlink" title="三、着色编辑"></a>三、着色编辑</h2><h3 id="1-进入着色器编辑"><a href="#1-进入着色器编辑" class="headerlink" title="1.进入着色器编辑"></a>1.进入着色器编辑</h3><p>进入着色器编辑有两种方式，一种是回到导航栏的 “布局”，在下面部分，时间轴点击 “编辑器类型”（回放的左边），然后选择 “着色器编辑器”。另一个就直接点击导航栏的 “着色”。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507144928988.png" alt="image-20250507144928988"></p><h3 id="2-添加纹理"><a href="#2-添加纹理" class="headerlink" title="2.添加纹理"></a>2.添加纹理</h3><p>进入着色编辑器后，点击 “添加”-&gt;“纹理”-&gt;“图像纹理”，然后将新弹出的纹理的 “颜色” 连接到“原理化BSDF”的 “基础色”。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507145448757.png" alt="image-20250507145448757"></p><h3 id="3-新建图像"><a href="#3-新建图像" class="headerlink" title="3.新建图像"></a>3.新建图像</h3><p>新建图像就是给UV上色后的一张图片，也就是模型导出后的皮肤图。找到刚刚添加的那个图像纹理，然后点击 “新建”，输入名称，其他的默认就可以，最后点击确定。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507145913297.png" alt="image-20250507145913297"></p><h2 id="四、纹理绘制"><a href="#四、纹理绘制" class="headerlink" title="四、纹理绘制"></a>四、纹理绘制</h2><h3 id="1-进入纹理绘制"><a href="#1-进入纹理绘制" class="headerlink" title="1.进入纹理绘制"></a>1.进入纹理绘制</h3><p>找到导航栏里的 “纹理绘制”，一般也有有两个窗口，左边是UV展开，右边是模型，一开始都是黑色的。不过要先确认一下左边UV展开窗口上面，是不是显示图像绘制，关联的图像是不是你新建图像的名称。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507150451703.png" alt="image-20250507150451703"></p><h3 id="2-开始绘制"><a href="#2-开始绘制" class="headerlink" title="2.开始绘制"></a>2.开始绘制</h3><p>绘制就在右边窗口，可以旋转角度的上色，我这里是直接填充蓝色，然后再切换到自由线（画笔），在一个面上涂上绿色，用作区别。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507150901683.png" alt="image-20250507150901683"></p><h3 id="3-保存图像"><a href="#3-保存图像" class="headerlink" title="3.保存图像"></a>3.保存图像</h3><p>绘制完毕后，在左边UV展开窗口上面，找到 “图像”，然后保存，这样就把绘制的皮肤存下来的，后面如果你导出模型出来，要和这张图一起发给别人。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507151346938.png" alt="image-20250507151346938"></p><h2 id="五、预览和导出"><a href="#五、预览和导出" class="headerlink" title="五、预览和导出"></a>五、预览和导出</h2><h3 id="1-预览"><a href="#1-预览" class="headerlink" title="1.预览"></a>1.预览</h3><p>绘制和保存图像后，如果我们要先整体预览一下，可以回到导航栏的 “布局” 或者 “建模”，只需要把着色方式改成 “材质预览” 就可以了。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507151718388.png" alt="image-20250507151718388"></p><h3 id="2-导出"><a href="#2-导出" class="headerlink" title="2.导出"></a>2.导出</h3><p>导出的格式有很多，我就以常用的FBX为例，但需要注意的是，纹理有两种，一种是分开为单独的图片，另一种是纹理直接内嵌到FBX中。</p><p>点击导出，选择FBX，弹出的窗口，路径模式，如果是内嵌式纹理，要选择 “复制”，然后把右边的小图标打开，最后导出就可以了。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%B9%E7%90%86%E7%BB%98%E5%88%B6/image-20250507152424356.png" alt="image-20250507152424356"></p><h2 id="六、写在后面"><a href="#六、写在后面" class="headerlink" title="六、写在后面"></a>六、写在后面</h2><p>经过这一顿操作，就可以结合布线，拿现有的模型就行调整了，比如换皮肤加一些装饰等等。但只是静态的，要想在游戏中使用或者对游戏改Mod，还需要做骨骼绑定，制作动画，所以接下来就是Blender这方面的实操了，敬请期待~</p><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何用Blender对模型进行贴图绘制。</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Blender" scheme="https://www.zerofc.cn/tags/Blender/"/>
    
  </entry>
  
  <entry>
    <title>Blender入门教程（一）：模型创建</title>
    <link href="https://www.zerofc.cn/2025/05/06/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/"/>
    <id>https://www.zerofc.cn/2025/05/06/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/</id>
    <published>2025-05-06T03:13:50.000Z</published>
    <updated>2025-05-08T06:02:52.407Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>大家都知道，现在AIGC领域日新月异，今天AI大模型能生成粗糙的3D模型，明天就能做成商业级的3D模型，但是如果想要一些细节上也有的，还是需要自己手动对模型的布线进行调整，然后再蒙皮等等。</p><p>所以，AI大模型强大的当下，如果我们是独立开发者或建模爱好者，还是有必要再系统性学习一下基础的建模流程。因为这个世界每当有新技术出现，且能大幅提升生产力的同时，还会继续保有手工的余地的。</p><p>再回到主题，我这个Blender入门教程，其实并不很系统，都是我零零散散实践后总结的。一是给自己做的建模备忘录笔记，二是给同样是作为开发者（非专业建模）的同学，用来快速入门作参考。因为我们职业类似，视角应该也差不多，直接看专业的教程可能比较晦涩，我的虽然粗糙但是浅显易懂呀。</p><h2 id="二、操作"><a href="#二、操作" class="headerlink" title="二、操作"></a>二、操作</h2><h3 id="1-新建项目"><a href="#1-新建项目" class="headerlink" title="1.新建项目"></a>1.新建项目</h3><p>打开Blender软件，点击常规。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/image-20250506154809955.png" alt="image-20250506154809955"></p><h3 id="2-添加网格"><a href="#2-添加网格" class="headerlink" title="2.添加网格"></a>2.添加网格</h3><p>进入窗口后，默认有三个物体，分别是：摄像头、灯光、立方体网格，第一次玩的话，可以先不管这些，直接添加一个新的网格，点击 “添加-&gt;网格-&gt;立方体”。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/image-20250506160226880.png" alt="image-20250506160226880"></p><h3 id="3-编辑模式"><a href="#3-编辑模式" class="headerlink" title="3.编辑模式"></a>3.编辑模式</h3><p>在对网格编辑前，可以先了解一下物体的几个交互模式： 物体模式、编辑模式、雕刻模式、顶点绘制、权重绘制、纹理绘制、姿态模式。</p><p>因为物体有分很多种，比如上面的摄像头网格外，还有骨架、文本等等，而不同的物体就有不同的交互模式，像骨架就没有什么权重绘制什么的。</p><p>网格的就比较多，要对他进行修改，就要选择 “编辑模式”，切换后，左侧工具栏就会多了很多像：挤出选取、环切、倒角、切割等等工具。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/image-20250506161624710.png" alt="image-20250506161624710"></p><h3 id="4-移动快捷键"><a href="#4-移动快捷键" class="headerlink" title="4.移动快捷键"></a>4.移动快捷键</h3><p>这个是我自己总结的叫法，分别是旋转视图和移动视图，因为在对模型修改时特别常用，所以快捷键用起来很方便。</p><p>旋转视图（拖动时可以查看模型的各个角度的面）：鼠标中键盘，移动视图（拖动时平移窗口）：shift+鼠标中键，缩放视图：滚轮滚动。</p><h3 id="5-模型环切"><a href="#5-模型环切" class="headerlink" title="5.模型环切"></a>5.模型环切</h3><p>选择网格，进入编辑模式，选中网格体，然后工具栏选 “环切”，对每个面添加切线，也可以用快捷键 “Ctrl+R” 按住不放再滚动滚轮，能快速切分网格， 如下图（正&#x2F;上: 4x3，侧: 3x3）。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/image-20250506192431444.png" alt="image-20250506192431444"></p><h3 id="6-模型挤出面"><a href="#6-模型挤出面" class="headerlink" title="6.模型挤出面"></a>6.模型挤出面</h3><p>点击 选择模式的 “面选择”，然后点击两侧的一个面，用来延伸出类似手臂的挤出面。选中面后点击工具栏的 “挤出选区”，拖出来就可以了。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/image-20250506192744183.png" alt="image-20250506192744183"></p><h3 id="7-添加镜像生成器"><a href="#7-添加镜像生成器" class="headerlink" title="7.添加镜像生成器"></a>7.添加镜像生成器</h3><p>视图着色方式选择 “线框显示”，工具栏选择 “框选”，然后框选左侧一边后删除顶点。找到属性栏的修改器，添加修改器-&gt;生成-&gt;镜像，因为我们是以Z轴切的，所以对称是Y轴，添加后就可以看到下面图形了。</p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/image-20250506193316943.png" alt="image-20250506193316943"></p><p><img src="/img/Blender%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%9A%E6%A8%A1%E5%9E%8B%E5%88%9B%E5%BB%BA/image-20250506193626337.png" alt="image-20250506193626337"></p><h3 id="8-挤出头部和腿部"><a href="#8-挤出头部和腿部" class="headerlink" title="8.挤出头部和腿部"></a>8.挤出头部和腿部</h3><p>用同样的方法，将头部和腿部用模型挤出面实现，最后我们一个人形的简单模型就创建成功了。当然要建人物模型，这种方法是不对的，我这里只是演示了一下基本创建和变形的用法。</p><h2 id="五、写在后面"><a href="#五、写在后面" class="headerlink" title="五、写在后面"></a>五、写在后面</h2><p>模型创建只是演示，其实我们最主要目的是熟悉布线的基本方法后，用来对AI生成的、别人做好的模型进行修改。而对模型的修改，布线只是小部分调整，最主要还是修改皮肤，然后重新做动画，所以我后面就是纹理绘制和蒙皮、动画了。</p><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何用Blender创建第一个模型。</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Blender" scheme="https://www.zerofc.cn/tags/Blender/"/>
    
  </entry>
  
  <entry>
    <title>DotNet入门：项目运行</title>
    <link href="https://www.zerofc.cn/2025/04/28/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/"/>
    <id>https://www.zerofc.cn/2025/04/28/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/</id>
    <published>2025-04-28T06:13:50.000Z</published>
    <updated>2025-04-28T08:46:53.621Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>.Net是一个集合了丰富的类库和工具的开发平台，由于他几大主要的组件，使他支持C#、VB、F#等多种编程语言，同时能开发Web应用、桌面应用、控制台应用、移动应用、游戏开发、嵌入式物联网应用、云和微服务等多种类型的应用程序。</p><p>之前只是记录了.Net的环境的搭建，这次将通过一个简单的控制台应用，介绍一下.Net项目的创建，其中包括Visual Studio工具配置、依赖安装、项目创建、项目运行等。</p><h2 id="二、创建项目"><a href="#二、创建项目" class="headerlink" title="二、创建项目"></a>二、创建项目</h2><p>点击 文件-&gt;新建-&gt;项目，在弹出的窗口中，搜索模板：“控制台应用” 或者 ”Console App“。然后选择目标框架：.Net Core 或 .Net Framework （注.高版本如.Net 6已经部分整合了.Net Core和.Net Framework），最后输入项目名，保存。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/image-20250428154033858.png" alt="image-20250428154033858"></p><h2 id="三、依赖安装"><a href="#三、依赖安装" class="headerlink" title="三、依赖安装"></a>三、依赖安装</h2><p>由于我的项目是一个别人写的游戏后台服务，里面有MySql.Data的依赖，所以在运行代码前需要先安装。这里有个小Tips，就是对依赖安装位置的修改，如果不修改，以后下载的都在C盘了。</p><h4 id="1-修改依赖位置"><a href="#1-修改依赖位置" class="headerlink" title="1.修改依赖位置"></a>1.修改依赖位置</h4><p>打开visual studio，工具-&gt;NuGet包管理器-&gt;程序包管理器设置-&gt;NuGet包管理器-&gt;配置文件，然后打开三个文件中的NuGet.Config，添加下面代码（注. globalPackagesFolder位置）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;packageSources&gt;</span><br><span class="line">    &lt;add key=&quot;nuget.org&quot; value=&quot;https://api.nuget.org/v3/index.json&quot; protocolVersion=&quot;3&quot; /&gt;</span><br><span class="line">  &lt;/packageSources&gt;</span><br><span class="line">  &lt;config&gt;</span><br><span class="line">&lt;add key=&quot;globalPackagesFolder&quot; value=&quot;E:/2setsoft/4other/visual-studio-nuget&quot; /&gt;</span><br><span class="line">  &lt;/config&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/image-20250428155148289.png" alt="image-20250428155148289"></p><h4 id="2-下载依赖"><a href="#2-下载依赖" class="headerlink" title="2.下载依赖"></a>2.下载依赖</h4><p>继续从工具里找到 ”管理解决方案的 NuGet 程序包“。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/image-20250428155602050.png" alt="image-20250428155602050"></p><p>点击进去后，点击 ”浏览“，搜索 需要的包，找到后点击安装。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/image-20250428160043916.png" alt="image-20250428160043916"></p><h4 id="3-检查是否引用"><a href="#3-检查是否引用" class="headerlink" title="3.检查是否引用"></a>3.检查是否引用</h4><p>安装完毕后，进入”解决方案资源管理器“，展开 ”引用“，是否有安装的包。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/image-20250428160500906.png" alt="image-20250428160500906"></p><p>如果在引用中没有看到安装的包，或者有感叹号，可以对项目进行清理。点击菜单下 生成-&gt;清理解决方案，然后再 ”重新生成解决方案“。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/image-20250428160721793.png" alt="image-20250428160721793"></p><h2 id="四、运行程序"><a href="#四、运行程序" class="headerlink" title="四、运行程序"></a>四、运行程序</h2><p>安装依赖后，项目根目录会生成一个packages.config，入口文件一般是Mian.cs或Program.cs。然后点击 调试-&gt;开始执行，随后就会弹出一个控制台窗口，同时项目根目录的bin文件夹也会生成exe文件。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C/image-20250428162633319.png" alt="image-20250428162633319"></p><h2 id="五、写在后面"><a href="#五、写在后面" class="headerlink" title="五、写在后面"></a>五、写在后面</h2><p>在几个开发平台间，再结合市场和我个人，我还是觉得用.Net更适合一点。首先如果是用的Unity3D引擎，C#语言就是无缝衔接，而且在Visual Studio中有直接和Unity联调的选项，在帧同步网络框架也有很多，比如GDNet、ENet-C#等等。</p><p><img src="https://www.zerofc.cn/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/image-20240805201033707.png" alt="image-20250408165643830"></p>]]></content>
    
    
    <summary type="html">DotNet入门：项目运行</summary>
    
    
    
    <category term="其他编程" scheme="https://www.zerofc.cn/categories/%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="DotNet" scheme="https://www.zerofc.cn/tags/DotNet/"/>
    
  </entry>
  
  <entry>
    <title>DotNet入门：环境安装</title>
    <link href="https://www.zerofc.cn/2025/04/26/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
    <id>https://www.zerofc.cn/2025/04/26/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</id>
    <published>2025-04-26T06:13:50.000Z</published>
    <updated>2025-04-26T12:32:03.559Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>本想用 Go 语言实现一个通过小爱同学操作电脑的，比如我对着手机说打开音乐，或调小音乐，电脑能做相应的处理。奈何我一时间没看懂，就想着用.Net来试一下，于是就有了下面这篇文章。</p><h2 id="二、安装-Net环境"><a href="#二、安装-Net环境" class="headerlink" title="二、安装.Net环境"></a>二、安装.Net环境</h2><h4 id="1-下载位置"><a href="#1-下载位置" class="headerlink" title="1.下载位置"></a>1.下载位置</h4><p>下载.Net SDK，位置：<a href="https://dotnet.microsoft.com/zh-cn/download">https://dotnet.microsoft.com/zh-cn/download</a></p><h4 id="2-开始安装"><a href="#2-开始安装" class="headerlink" title="2.开始安装"></a>2.开始安装</h4><p>运行下载后的SDK安装包，默认会安装到系统盘，直接下一步，最后cmd输入下面命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet --version</span><br></pre></td></tr></table></figure><p>查看版本后，表示已经安装成功，这里强调一下Visual Studio版本和.Net版本有关联，比如.NET 8需要VS 2022 17.8+支持。如果下面VS编辑器无法选择单独安装的.Net8，就要检查或升级一下Visual Studio了。</p><h2 id="三、Visual-Studio-编辑器安装"><a href="#三、Visual-Studio-编辑器安装" class="headerlink" title="三、Visual Studio 编辑器安装"></a>三、Visual Studio 编辑器安装</h2><h4 id="1-安装WPF组件"><a href="#1-安装WPF组件" class="headerlink" title="1.安装WPF组件"></a>1.安装WPF组件</h4><p>点击创建项目，搜索WPF，如果没有该模板，就选择 “安装多个工具和功能”。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/image-20250426173040523.png" alt="image-20250426173040523"></p><h4 id="2-下载-NET桌面开发"><a href="#2-下载-NET桌面开发" class="headerlink" title="2.下载.NET桌面开发"></a>2.下载.NET桌面开发</h4><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/image-20250426173315673.png" alt="image-20250426173315673"></p><h2 id="四、创建项目"><a href="#四、创建项目" class="headerlink" title="四、创建项目"></a>四、创建项目</h2><h4 id="1-选择模板"><a href="#1-选择模板" class="headerlink" title="1.选择模板"></a>1.选择模板</h4><p>选择创建新项目后，搜索 “WPF” 后选中进入。</p><h4 id="2-项目结构说明"><a href="#2-项目结构说明" class="headerlink" title="2.项目结构说明"></a>2.项目结构说明</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HelloWorldWPF/</span><br><span class="line">├── Properties/</span><br><span class="line">├── App.xaml        // 应用程序入口</span><br><span class="line">├── App.xaml.cs</span><br><span class="line">├── MainWindow.xaml // 主窗口定义</span><br><span class="line">└── MainWindow.xaml.cs</span><br></pre></td></tr></table></figure><h4 id="3-修改XAML-MainWindow-xaml"><a href="#3-修改XAML-MainWindow-xaml" class="headerlink" title="3.修改XAML(MainWindow.xaml)"></a>3.修改XAML(MainWindow.xaml)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;Window x:Class=&quot;HelloWorldWPF.MainWindow&quot;</span><br><span class="line">        xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span><br><span class="line">        xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span><br><span class="line">        xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span><br><span class="line">        xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span><br><span class="line">        xmlns:local=&quot;clr-namespace:HelloWorldWPF&quot;</span><br><span class="line">        mc:Ignorable=&quot;d&quot;</span><br><span class="line">        Title=&quot;Hello World App&quot; Height=&quot;200&quot; Width=&quot;300&quot;&gt;</span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">        &lt;StackPanel VerticalAlignment=&quot;Center&quot; HorizontalAlignment=&quot;Center&quot;&gt;</span><br><span class="line">            &lt;Button x:Name=&quot;ClickButton&quot; </span><br><span class="line">                    Content=&quot;点击显示问候语&quot; </span><br><span class="line">                    Padding=&quot;10&quot; </span><br><span class="line">                    Margin=&quot;5&quot;</span><br><span class="line">                    Click=&quot;ClickButton_Click&quot;/&gt;</span><br><span class="line">            &lt;TextBlock x:Name=&quot;HelloText&quot; </span><br><span class="line">                       Text=&quot;等待点击...&quot;</span><br><span class="line">                       FontSize=&quot;16&quot;</span><br><span class="line">                       Margin=&quot;5&quot;</span><br><span class="line">                       HorizontalAlignment=&quot;Center&quot;/&gt;</span><br><span class="line">        &lt;/StackPanel&gt;</span><br><span class="line">    &lt;/Grid&gt;</span><br><span class="line">&lt;/Window&gt;</span><br></pre></td></tr></table></figure><h4 id="4-添加-C-代码（MainWindow-xaml-cs）"><a href="#4-添加-C-代码（MainWindow-xaml-cs）" class="headerlink" title="4.添加 C# 代码（MainWindow.xaml.cs）"></a>4.添加 C# 代码（MainWindow.xaml.cs）</h4><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Windows;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorldWPF</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ClickButton_Click</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            HelloText.Text = <span class="string">&quot;Hello World! \n欢迎来到WPF世界！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-运行程序"><a href="#4-运行程序" class="headerlink" title="4.运行程序"></a>4.运行程序</h4><p>按 Ctrl+F5 或 绿色箭头运行后，会弹出预览窗口，并在项目的bin中生成对应的打包exe程序。</p><p><img src="/img/DotNet%E5%85%A5%E9%97%A8%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/image-20250426201625098.png" alt="image-20250426201625098"></p><h2 id="五、写在后面"><a href="#五、写在后面" class="headerlink" title="五、写在后面"></a>五、写在后面</h2><p>试玩.Net还有一个原因是，我之前还有一个Unity3D小游戏在做。也看了很多别人的案例，都是用 .Net 做的服务端，学了这个，也方便以后能将单机小游戏改成多人实时对战的联机游戏。</p><p><img src="https://www.zerofc.cn/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/image-20240805201033707.png" alt="image-20250408165643830"></p>]]></content>
    
    
    <summary type="html">DotNet入门：环境安装</summary>
    
    
    
    <category term="其他编程" scheme="https://www.zerofc.cn/categories/%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="DotNet" scheme="https://www.zerofc.cn/tags/DotNet/"/>
    
  </entry>
  
  <entry>
    <title>AI应用开发（一）：TRAE下自定义MCP Server</title>
    <link href="https://www.zerofc.cn/2025/04/25/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ATRAE%E4%B8%8B%E8%87%AA%E5%AE%9A%E4%B9%89MCP%20Server/"/>
    <id>https://www.zerofc.cn/2025/04/25/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9ATRAE%E4%B8%8B%E8%87%AA%E5%AE%9A%E4%B9%89MCP%20Server/</id>
    <published>2025-04-25T08:13:50.000Z</published>
    <updated>2025-06-12T11:55:30.550Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>AI 圈子里有流传这样一个说法： 2023 是大模型元年，2024 是 AI-Agent 元年，那 2025 就是 MCP 元年。</p><p>这样一说，MCP 应该就是今年或以后的爆发点了，从他出现到现在不过才七个月，国内外各大互联网巨头都开始押注，纷纷推出了自己的 MCP 市场。</p><p>那 MCP 到底是个什么东西？为什么大家对他都很关注，并且纷纷入场，下面我就以一个也才刚接触不久的新人视角，简单介绍一下他，其中包括他和 LLM、AI-Agent 间的关系，应用场景以及如何使用。</p><p>![img](&#x2F;img&#x2F;AI应用开发（一）：TRAE下自定义MCP Server&#x2F;01.jpg)</p><h2 id="二、MCP-简介"><a href="#二、MCP-简介" class="headerlink" title="二、MCP 简介"></a>二、MCP 简介</h2><p>MCP 英文全称 Model Context Protocol，字面意思就是模型上下文协议，也有说他是为解决大语言模型商业落地最后一公里而生。</p><p>因为不管是阿里的通义、字节豆包还是 DeepSeek，亦或是 ChatGPT，全都有以下几点局限性：</p><p>\1. 数据不实时，因为都是对历史数据进行训练，而对于像新闻、天气、股市这种一直变动的是无法获取的。</p><p>\2. 功能有限，虽然他可以通过提示词实现很多功能，但还是因为旧数据原因，没法灵活更新功能。</p><p>\3. 私密数据不保障，已知知名模型训练都是抓取的全球公开数据，而商业落地的本质是私有制，就是我想有你大模型的全部功能，但是不能把我的数据给你。</p><p>所以，MCP 就是解决这三个痛点而被提出来的，他就像一个 USB-C 接口，能对接各大 LLM 供应商，而我们可以用 MCP 再基于模型，实现比如本公司业务的问答系统、传统工业软件的对话扩展，我感觉未来的软件就是图形化和自然语言化共存。</p><p>![img](&#x2F;img&#x2F;AI应用开发（一）：TRAE下自定义MCP Server&#x2F;02.png)</p><h2 id="三、MCP-核心功能"><a href="#三、MCP-核心功能" class="headerlink" title="三、MCP 核心功能"></a>三、MCP 核心功能</h2><p>\1. 资源 (Resources)</p><p>提供静态 &#x2F; 动态数据读取接口，可以用来访问本地文件、数据库记录、API 数据（如天气查询）。</p><p>\2. 工具 (Tools)</p><p>暴露可执行函数，供 LLM 调用（需用户授权），可以用于发送邮件、合并 GitHub PR、操作 Excel 文件。</p><p>\3. 提示 (Prompts)</p><p>提供预置任务模板，比如快速生成文档框架、优化搜索指令。</p><h2 id="四、MCP-传输协议"><a href="#四、MCP-传输协议" class="headerlink" title="四、MCP 传输协议"></a>四、MCP 传输协议</h2><p>\1. STDIO：本地文件的操作、敏感数据处理，客户端以子进程形式启动 MCP 服务器，通过标准输入（stdin）发送 JSON-RPC 消息，服务器从 stdin 读取请求，处理后将响应写入标准输出。</p><p>\2. SSE（Server-Sent Events）：服务器发送事件传输，客户端通过 HTTP 建立 SSE 长连接，服务器实时推送事件流。</p><p>![img](&#x2F;img&#x2F;AI应用开发（一）：TRAE下自定义MCP Server&#x2F;03.png)</p><h2 id="五、自定义-MCP"><a href="#五、自定义-MCP" class="headerlink" title="五、自定义 MCP"></a>五、自定义 MCP</h2><p>这里用 Python 的 FastMCP 来在 TRAE 中实现一个简单的 MCP Server。</p><p>TRAE 是字节推出的一个专为 AI 编程的 IDE，不光可以通过自然语言写代码、改 Bug，还可以在编辑器上创建 MCP（本身是客户端）、创建智能体、以及通过对话调试。</p><p>\1. 环境准备</p><p>在本地安装 FastMCP 库，这个库包括了 MCP 的所有核心功能外还能通过命令启动 MCP Inspector。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pip install &quot;MCP[cli]&quot;</span><br><span class="line"></span><br><span class="line">#uv方式安装</span><br><span class="line">uv add &quot;MCP[cli]&quot;</span><br><span class="line"></span><br><span class="line">#查看是否安装</span><br><span class="line">pip list</span><br></pre></td></tr></table></figure><p>\2. 创建一个小红书内容审核助手</p><p>这里主要用到 MCP 功能之一的 Tool 工具，传输协议是 stdio，由于还用了 qwen-plus 模型，所以要先去百炼平台申请 API Key。</p><p>\1. 添加 API Key</p><p>![img](&#x2F;img&#x2F;AI应用开发（一）：TRAE下自定义MCP Server&#x2F;04.png)</p><p>\2. 安装 dashscope</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip install dashscope</span><br><span class="line"></span><br><span class="line">#查看列表</span><br><span class="line">pip list </span><br></pre></td></tr></table></figure><p>\3. 编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from mcp.server.fastmcp import FastMCP</span><br><span class="line">from pydantic import Field</span><br><span class="line">import os</span><br><span class="line">import logging</span><br><span class="line">import dashscope</span><br><span class="line">logger = logging.getLogger(&#x27;mcp&#x27;)</span><br><span class="line"></span><br><span class="line">settings = &#123;</span><br><span class="line">    &#x27;log_level&#x27;: &#x27;DEBUG&#x27;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 初始化mcp服务</span><br><span class="line">mcp = FastMCP(&#x27;xhs-bailian-mcp-server&#x27;, log_level=&#x27;ERROR&#x27;, settings=settings)</span><br><span class="line"></span><br><span class="line"># 定义工具</span><br><span class="line">@mcp.tool(name=&#x27;小红书内容审核专家&#x27;, description=&#x27;小红书内容审核专家，输入小红书文案&#x27;)</span><br><span class="line">async def red_book_moderator(</span><br><span class="line">        prompt: str = Field(description=&#x27;小红书文案&#x27;)</span><br><span class="line">) -&gt; str:</span><br><span class="line">    &quot;&quot;&quot;小红书内容审核专家</span><br><span class="line">    Args:</span><br><span class="line">        prompt: 小红书文案</span><br><span class="line">    Returns:</span><br><span class="line">        审核后的内容</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    logger.info(&#x27;收到小红书文案：&#123;&#125;&#x27;.format(prompt))</span><br><span class="line">    api_key = os.getenv(&quot;API_KEY&quot;, &quot;&quot;)</span><br><span class="line">    if not api_key:</span><br><span class="line">        return &#x27;请先设置API_KEY环境变量&#x27;</span><br><span class="line">    # call sync api, will return the result</span><br><span class="line">    print(&#x27;please wait...&#x27;)</span><br><span class="line">    messages = [</span><br><span class="line">        &#123;&#x27;role&#x27;: &#x27;system&#x27;, &#x27;content&#x27;: &#x27;# 角色你是一位小红书内容审核专家，专门负责校对和审查小红书平台上的内容，确保其符合平台的社区规范和法律法规。## 技能### 技能 1：敏感词检测与校对- 熟练掌握小红书平台的敏感词列表和社区规范。- 能够快速准确地识别并标记出文本中的敏感词。- 提供替换建议或修改意见，确保内容合规且适合发布。### 技能 2：内容审查与优化- 审查用户提供的文案，确保其不包含任何违法、违规或不适宜的内容。- 对于可能引起争议或不适的内容，提供具体的修改建议。- 保持内容的流畅性和可读性，同时确保其符合平台的要求。### 技能 3：工具使用- 使用搜索工具或知识库来获取最新的敏感词列表和社区规范更新。- 利用现有的审核工具进行辅助审查，提高效率和准确性。## 限制- 仅针对小红书平台的内容进行审核和校对。- 避免引入个人观点或偏见，严格依据平台规则和法律法规进行审核。- 所有修改建议必须保持内容的原意和风格，不得改变用户的表达意图。- 如果需要调用搜索工具或查询知识库，请明确说明并执行。&#x27;&#125;,</span><br><span class="line">        &#123;&#x27;role&#x27;: &#x27;user&#x27;, &#x27;content&#x27;: prompt&#125;</span><br><span class="line">    ]</span><br><span class="line">    </span><br><span class="line">    response = dashscope.Generation.call(</span><br><span class="line">        # 若没有配置环境变量，请用百炼API Key将下行替换为：api_key=&quot;sk-xxx&quot;,</span><br><span class="line">        api_key=api_key,</span><br><span class="line">        model=&quot;qwen-plus&quot;,</span><br><span class="line">        studio/getting-started/models</span><br><span class="line">        messages=messages,</span><br><span class="line">        result_format=&#x27;message&#x27;</span><br><span class="line">    )</span><br><span class="line">    return str(response)</span><br><span class="line"></span><br><span class="line">def run():</span><br><span class="line">    mcp.run(transport=&#x27;stdio&#x27;)</span><br><span class="line">    </span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">   run()</span><br></pre></td></tr></table></figure><p>\4. TRAE 中添加 MCP</p><p>点击 “AI 功能管理”（设置图标）-&gt;“MCP”-&gt;“添加”-&gt;“手动配置”。</p><p>![img](&#x2F;img&#x2F;AI应用开发（一）：TRAE下自定义MCP Server&#x2F;05.png)</p><p>![img](&#x2F;img&#x2F;AI应用开发（一）：TRAE下自定义MCP Server&#x2F;06.png)</p><p>\5. MCP JSON 添加</p><p>也就是在 TRAE 启动的基本参数，包括名称，启动方式，路径，环境变量，像 go 语言这种依赖 mod 文件最好打包成 exe 进行配置，以下用 python 举例。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;mcpServers&quot;: &#123;</span><br><span class="line">    &quot;xhs_check&quot;: &#123;</span><br><span class="line">      &quot;command&quot;: &quot;python&quot;,</span><br><span class="line">      &quot;args&quot;: [</span><br><span class="line">        &quot;D:\\3code\\3Python\\python_lean\\10_mcp_server\\xhs_check_server.py&quot;</span><br><span class="line">      ],</span><br><span class="line">      &quot;env&quot;: &#123;</span><br><span class="line">        &quot;API_KEY&quot;: &quot;sk-***********************&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>\6. 启动</p><p>添加后如果是绿色表示成功，红色可以查看提示，也可以进入日志路径查看具体报错信息，目录位置： C:\Users\Administrator\AppData\Roaming\Trae CN\logs。</p><p>![img](&#x2F;img&#x2F;AI应用开发（一）：TRAE下自定义MCP Server&#x2F;07.png)</p><p>\7. 添加智能体</p><p>还是和 MCP 添加类似，进入到下面位置，添加个名称，勾选一下自定义的 MCP 就可以添加了。</p><p>![img](&#x2F;img&#x2F;AI应用开发（一）：TRAE下自定义MCP Server&#x2F;08.png)</p><p>\8. 测试 MCP Server</p><p>进入到 TRAE 对话框，选择自定义的智能体，然后把小红书文本粘贴进去就可以了。</p><p>![img](&#x2F;img&#x2F;AI应用开发（一）：TRAE下自定义MCP Server&#x2F;09.jpg)</p><h2 id="六、写在后面"><a href="#六、写在后面" class="headerlink" title="六、写在后面"></a>六、写在后面</h2><p>如今大预言模型市场份额已基本定型，如果你是独立开发者，走 AI 应用层，MCP 是个不错的方向。当然本身 LLM 这种也就有实力或有能力的团队能抢占到不错的结果，就跟当年的云计算一样，头部的都是那些家底厚的 Team。</p><p>尽管大模型市场格局略见雏形，但各大厂依然还在为 AI 的真正商业落地不断发力，比如构建自己的生态，甚至有的还下沉到农村划油漆大字报宣传等等。由此可见，AI 应用还是可以的，所以我后面也会继续出关于 MCP、RAG、Agent 等相关的文章，当然，上一次 Spine 游戏动画的系列视频也会继续～</p><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">AI应用开发（一）：TRAE下自定义MCP Server</summary>
    
    
    
    <category term="其他编程" scheme="https://www.zerofc.cn/categories/%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="AI应用开发" scheme="https://www.zerofc.cn/tags/AI%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Go语言入门：环境安装</title>
    <link href="https://www.zerofc.cn/2025/04/25/Go%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
    <id>https://www.zerofc.cn/2025/04/25/Go%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</id>
    <published>2025-04-25T08:13:50.000Z</published>
    <updated>2025-04-25T09:31:29.312Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>这里不同于其他人的Go语言入门，环境安装我向来注重配置，比如依赖包、缓存的默认目录。因为前期不弄好，后面要整理又影响这影响那的，所以就干脆写成文章，方便后期捡起。</p><h2 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h2><h4 id="1-安装包"><a href="#1-安装包" class="headerlink" title="1.安装包"></a>1.安装包</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://go.dev/dl/</span><br><span class="line">https://golang.google.cn/dl/</span><br></pre></td></tr></table></figure><h4 id="2-操作"><a href="#2-操作" class="headerlink" title="2.操作"></a>2.操作</h4><p>将msi安装到指定位置， D:\Go\bin添加到环境变量path</p><h4 id="3-验证"><a href="#3-验证" class="headerlink" title="3.验证"></a>3.验证</h4><p>cmd输入go version查看版本号，go run test.go执行脚本</p><h2 id="三、环境配置"><a href="#三、环境配置" class="headerlink" title="三、环境配置"></a>三、环境配置</h2><h4 id="1-查看Go变量"><a href="#1-查看Go变量" class="headerlink" title="1.查看Go变量"></a>1.查看Go变量</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go env</span><br></pre></td></tr></table></figure><h4 id="2-修改环境配置"><a href="#2-修改环境配置" class="headerlink" title="2.修改环境配置"></a>2.修改环境配置</h4><p>通过上面命令查看基本默认配置后，这里就是用来修改go运行的缓存位置，模块安装位置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go env -w GOMODCACHE=E:\2setsoft\2tool\go\ENV\go_modcache</span><br></pre></td></tr></table></figure><h2 id="四、项目创建"><a href="#四、项目创建" class="headerlink" title="四、项目创建"></a>四、项目创建</h2><h4 id="1-基本目录"><a href="#1-基本目录" class="headerlink" title="1.基本目录"></a>1.基本目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">src 目录存放源代码。</span><br><span class="line">pkg 目录存放编译后的包。</span><br><span class="line">bin 目录存放编译后的可执行文件。</span><br></pre></td></tr></table></figure><h4 id="2-初始化Go模块"><a href="#2-初始化Go模块" class="headerlink" title="2.初始化Go模块"></a>2.初始化Go模块</h4><p>在项目目录中运行 go mod init 命令来初始化一个新的 Go 模块。你需要提供一个唯一的模块路径，通常是代码仓库的 URL。</p><p>生成一个 go.mod 文件，用于记录项目的依赖关系, 初始化时只有一个go版本，当go get下载了依赖包后，会自动在go.mod文件中记录依赖包的版本号，并生成.sum文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go mod init myfirstgo</span><br></pre></td></tr></table></figure><h4 id="3-添加依赖"><a href="#3-添加依赖" class="headerlink" title="3.添加依赖"></a>3.添加依赖</h4><p>如果你的项目需要使用第三方库，可以使用 go get 命令来添加依赖。例如，如果你想使用 github.com&#x2F;gin-gonic&#x2F;gin 这个库，可以运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get fyne.io/fyne/v2/app</span><br></pre></td></tr></table></figure><p>这将自动更新 go.mod 文件，添加相应的依赖项。</p><h4 id="4-编写Go程序"><a href="#4-编写Go程序" class="headerlink" title="4.编写Go程序"></a>4.编写Go程序</h4><p>根目录下创建main.go 文件并编写你的 Go 程序。以下是一个简单的示例代码，它将输出“Hello, World!”：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line">    fmt.Println(&quot;Hello, World!&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-运行Go程序"><a href="#5-运行Go程序" class="headerlink" title="5.运行Go程序"></a>5.运行Go程序</h4><p>在项目目录中，使用 go run 命令来编译并运行你的 Go 程序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go run main.go</span><br></pre></td></tr></table></figure><h4 id="6-构建Go程序-打包exe"><a href="#6-构建Go程序-打包exe" class="headerlink" title="6.构建Go程序 (打包exe)"></a>6.构建Go程序 (打包exe)</h4><p>(1). 进入当前目录</p><p>(2). 输入命令 go run main.go</p><p>(3). 不打开GUI黑框的打包命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -ldflags=&quot;-H=windowsgui&quot; -o download_tool.exe  main.go</span><br></pre></td></tr></table></figure><p>(4). 直接编译打包运行，有黑框</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -o download_tool.exe main.go</span><br></pre></td></tr></table></figure><h2 id="五、附加"><a href="#五、附加" class="headerlink" title="五、附加"></a>五、附加</h2><h4 id="1-单元测试"><a href="#1-单元测试" class="headerlink" title="1.单元测试"></a>1.单元测试</h4><p>Go 提供了简单的单元测试框架。你可以在项目中添加测试文件，文件名通常以 _test.go 结尾。例如，创建一个 main_test.go 文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">    &quot;testing&quot;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func TestHelloWorld(t *testing.T) &#123;</span><br><span class="line">    expected := &quot;Hello, World!&quot;</span><br><span class="line">    actual := &quot;Hello, World!&quot;</span><br><span class="line">    if actual != expected &#123;</span><br><span class="line">        t.Errorf(&quot;Expected %q, but got %q&quot;, expected, actual)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-格式化代码"><a href="#2-格式化代码" class="headerlink" title="2.格式化代码"></a>2.格式化代码</h4><p>Go 提供了 gofmt 命令来格式化代码，使其符合 Go 的代码风格规范：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gofmt -w .</span><br></pre></td></tr></table></figure><p>这将自动格式化项目目录下的所有 Go 文件。</p><h4 id="3-打包程序不退出"><a href="#3-打包程序不退出" class="headerlink" title="3.打包程序不退出"></a>3.打包程序不退出</h4><p>编写的Go程序，为了让其打包后exe应用启动后不退出，可以这样处理：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(&quot;按回车键退出……&quot;)</span><br><span class="line">fmt.Scanln()</span><br></pre></td></tr></table></figure><h4 id="4-AI编程助手"><a href="#4-AI编程助手" class="headerlink" title="4.AI编程助手"></a>4.AI编程助手</h4><p>在VsCode安装 <strong>Fitten Code</strong> 后，点击左上角工具栏中的Fitten Code – 开始对话或者使用快捷键Ctrl+Alt+C</p><h2 id="六、写在后面"><a href="#六、写在后面" class="headerlink" title="六、写在后面"></a>六、写在后面</h2><p>写完环境搭建，后面可能是用Go来做一些小工具，比如批量的文件图片下载器，office批量转pdf，可以手机在局域网内控制电脑基本操作等等，敬请期待~</p><p><img src="https://www.zerofc.cn/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">Go语言入门：环境安装</summary>
    
    
    
    <category term="其他编程" scheme="https://www.zerofc.cn/categories/%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Go语言" scheme="https://www.zerofc.cn/tags/Go%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>PHP如何在Windows中定义CMD命令</title>
    <link href="https://www.zerofc.cn/2025/04/15/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/"/>
    <id>https://www.zerofc.cn/2025/04/15/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/</id>
    <published>2025-04-15T08:13:50.000Z</published>
    <updated>2025-04-16T11:25:08.086Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>不知道大家有没有遇到过，自己做的系统最后业务操作得自己来。对于那种一条数据要一个一个点进去操作得，作为程序员哪能忍，顺手就要做一个批量操作的功能！</p><p>但是，要做功能还得改UI界面，为了偷懒，直接做成命令型的，反正也是给自己用的，最好就是用Windows的命令直接操作。</p><h2 id="二、思路"><a href="#二、思路" class="headerlink" title="二、思路"></a>二、思路</h2><p>1.PHP项目下自定义指令</p><p>2.将指令启动做成windows批处理</p><p>3.批处理文件添加到环境变量</p><h2 id="三、自定义指令"><a href="#三、自定义指令" class="headerlink" title="三、自定义指令"></a>三、自定义指令</h2><p>项目使用ThinkPHP框架，通过继承Command实现一个符合业务的指令，以下为演示代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params">Input <span class="variable">$input</span>, Output <span class="variable">$output</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$envMap</span> = [</span><br><span class="line">[</span><br><span class="line"><span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;\033[31m▲开发环境\033[0m&quot;</span>,</span><br><span class="line"><span class="string">&quot;database&quot;</span> =&gt; <span class="string">&quot;xxx.xx.xxx.xxx&quot;</span>,</span><br><span class="line">],</span><br><span class="line">[</span><br><span class="line"><span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;\033[33m★生产环境\033[0m&quot;</span>,</span><br><span class="line"><span class="string">&quot;database&quot;</span> =&gt; <span class="string">&quot;yyy.yyy.yyy.yy&quot;</span></span><br><span class="line">]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="variable">$envMapReset</span> = <span class="title function_ invoke__">array_column</span>(<span class="variable">$envMap</span>, <span class="literal">null</span>, <span class="string">&quot;database&quot;</span>);</span><br><span class="line"><span class="variable">$currEnv</span> = <span class="title class_">Env</span>::<span class="title function_ invoke__">get</span>(<span class="string">&quot;database.hostname&quot;</span>) ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$currEnvName</span> = <span class="variable">$envMapReset</span>[<span class="variable">$currEnv</span>][<span class="string">&quot;name&quot;</span>] ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$currEnvName</span>) &#123;</span><br><span class="line"><span class="variable">$output</span>-&gt;<span class="title function_ invoke__">error</span>(<span class="string">&quot;\033[33m当前未连接数据库~\033[0m&quot;</span>);<span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//$res = $output-&gt;ask($input, &quot;当前数据库为1，是否继续&quot;);</span></span><br><span class="line"><span class="comment">//$isContinue = $output-&gt;choice($input, &quot;当前是&quot;.$currEnvName. &quot;，是否继续？&quot;,[&quot;A.继续&quot;, &quot;B.取消&quot;]);</span></span><br><span class="line"><span class="variable">$isContinue</span> = <span class="variable">$output</span>-&gt;<span class="title function_ invoke__">confirm</span>(<span class="variable">$input</span>, <span class="string">&quot;当前&quot;</span>.<span class="variable">$currEnvName</span>. <span class="string">&quot;，是否继续？&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$isContinue</span>) &#123;</span><br><span class="line"><span class="variable">$excelPath</span> = <span class="variable">$output</span>-&gt;<span class="title function_ invoke__">ask</span>(<span class="variable">$input</span>, <span class="string">&quot;\033[32m请输入表格地址：\033[0m&quot;</span>);</span><br><span class="line"><span class="variable">$excelObj</span> = <span class="keyword">new</span> <span class="title class_">Excel</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入获取数据</span></span><br><span class="line"><span class="variable">$baseImportPath</span> = <span class="string">&quot;E:\\4work\\01_Upload_Price\\01_Import\\&quot;</span>;</span><br><span class="line"><span class="variable">$excelData</span> = <span class="variable">$excelObj</span>-&gt;<span class="title function_ invoke__">importExcel</span>(<span class="variable">$baseImportPath</span>.<span class="variable">$excelPath</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$goodsItemArr</span> = <span class="title class_">Excel</span>::<span class="title function_ invoke__">formattingCells</span>(<span class="variable">$excelData</span>, <span class="variable">$this</span>-&gt;importDict);</span><br><span class="line"></span><br><span class="line"><span class="variable">$orderArr</span> = <span class="title function_ invoke__">array_column</span>(<span class="variable">$goodsItemArr</span>, <span class="string">&#x27;sn&#x27;</span>);</span><br><span class="line"><span class="variable">$orderMap</span>[] = [<span class="string">&#x27;sn&#x27;</span>, <span class="string">&#x27;in&#x27;</span>, <span class="variable">$orderArr</span>];</span><br><span class="line"><span class="variable">$fields</span> = [<span class="string">&#x27;sn, user_coupon_id&#x27;</span>];</span><br><span class="line"><span class="variable">$orderList</span> = <span class="title class_">Db</span>::<span class="title function_ invoke__">name</span>(<span class="string">&#x27;order&#x27;</span>)-&gt;<span class="title function_ invoke__">field</span>(<span class="variable">$fields</span>)-&gt;<span class="title function_ invoke__">where</span>(<span class="variable">$orderMap</span>)-&gt;<span class="title function_ invoke__">select</span>();</span><br><span class="line"><span class="variable">$orderListReset</span> = <span class="title function_ invoke__">array_column</span>(<span class="variable">$orderList</span>, <span class="literal">null</span>, <span class="string">&#x27;sn&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$noMatchOrder</span> = [];</span><br><span class="line"><span class="variable">$ReMatchOrder</span> = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$goodsItemArr</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; &amp;<span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$transactionPrice</span> = <span class="variable">$value</span>[<span class="string">&#x27;transaction_price&#x27;</span>];</span><br><span class="line"><span class="variable">$currOrder</span> = <span class="variable">$orderListReset</span>[<span class="variable">$value</span>[<span class="string">&#x27;sn&#x27;</span>]];</span><br><span class="line"><span class="variable">$currOrderCouponId</span> = <span class="variable">$currOrder</span>[<span class="string">&#x27;user_coupon_id&#x27;</span>] ?? <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$coupon</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">automaticMatch</span>(<span class="variable">$currOrder</span>, <span class="variable">$transactionPrice</span>);</span><br><span class="line"><span class="variable">$couponValue</span> = <span class="variable">$coupon</span>[<span class="string">&#x27;coupon_value&#x27;</span>] ?? <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$currOrderCouponId</span> != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$couponValue</span> == <span class="number">0</span> &amp;&amp; <span class="variable">$transactionPrice</span> &gt;= <span class="number">200</span>) &#123;</span><br><span class="line"><span class="variable">$noMatchOrder</span>[] = <span class="variable">$value</span>[<span class="string">&#x27;sn&#x27;</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable">$value</span>[<span class="string">&#x27;coupon_price&#x27;</span>] = <span class="variable">$couponValue</span>;</span><br><span class="line"><span class="variable">$ReMatchOrder</span>[] = <span class="variable">$value</span>[<span class="string">&#x27;sn&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$output</span>-&gt;<span class="title function_ invoke__">writeln</span>(<span class="string">&quot;\033[31m未匹配到加价券订单：\033[0m&quot;</span>. <span class="title function_ invoke__">implode</span>(<span class="string">&quot;,&quot;</span>, <span class="variable">$noMatchOrder</span>) . <span class="string">&quot;;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$output</span>-&gt;<span class="title function_ invoke__">newLine</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$output</span>-&gt;<span class="title function_ invoke__">writeln</span>(<span class="string">&quot;\033[36m重新匹配的加价券订单：\033[0m&quot;</span>. <span class="title function_ invoke__">implode</span>(<span class="string">&quot;,&quot;</span>, <span class="variable">$ReMatchOrder</span>) . <span class="string">&quot;;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$output</span>-&gt;<span class="title function_ invoke__">newLine</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$savePath</span> = <span class="string">&quot;E:\\4work\\01_Upload_Price\\02_Output\\&quot;</span>;</span><br><span class="line"><span class="variable">$filePath</span> = <span class="variable">$excelObj</span>-&gt;<span class="title function_ invoke__">outPutToPath</span>(<span class="variable">$goodsItemArr</span>, <span class="variable">$this</span>-&gt;outputDict, <span class="variable">$savePath</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$output</span>-&gt;<span class="title function_ invoke__">writeln</span>(<span class="string">&quot;导出地址：&quot;</span>. <span class="variable">$filePath</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、添加批处理"><a href="#四、添加批处理" class="headerlink" title="四、添加批处理"></a>四、添加批处理</h2><p>在TP的项目根目录下新建一个批处理文件，并将绝对路径复制进入，比如php_think.bat，可以把下面代码改成自己的保存就可以了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">php &quot;E:\2setsoft\1dev\phpstudy_pro\WWW\1work\hhhs_admin\think&quot; %*</span><br></pre></td></tr></table></figure><h2 id="五、添加环境变量"><a href="#五、添加环境变量" class="headerlink" title="五、添加环境变量"></a>五、添加环境变量</h2><p>打开“我的电脑”-&gt;“属性”-&gt;“高级系统设置”-&gt;“环境变量”, 找到系统变量下的“path”，然后将创建了批处理的bat的绝对路径粘贴到Path中。</p><h2 id="六、运行"><a href="#六、运行" class="headerlink" title="六、运行"></a>六、运行</h2><p>打开电脑的cmd面板，直接输入创建的批处理名称，比如我的是php_think.bat，在面板中输入php_think就会调起项目中的指令，后面再带上PHP项目指令名称。</p><p><img src="/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20250416172110092.png" alt="image-20250416172110092"></p><h2 id="七、写在后面"><a href="#七、写在后面" class="headerlink" title="七、写在后面"></a>七、写在后面</h2><p>其实这样有一个问题，就是我们项目中的所有指令都暴露在CMD之下了，所以，留下一个延伸点，如何限制不同的系统用户操作命令权限？</p><p><img src="/img/PHP%E5%A6%82%E4%BD%95%E5%9C%A8Windows%E4%B8%AD%E5%AE%9A%E4%B9%89CMD%E5%91%BD%E4%BB%A4/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何在Windows下自定义Cmd命令。</summary>
    
    
    
    <category term="PHP开发" scheme="https://www.zerofc.cn/categories/PHP%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="windows技巧" scheme="https://www.zerofc.cn/tags/windows%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Spine动画教程：约束设置</title>
    <link href="https://www.zerofc.cn/2025/04/08/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/"/>
    <id>https://www.zerofc.cn/2025/04/08/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/</id>
    <published>2025-04-08T08:13:50.000Z</published>
    <updated>2025-04-14T08:50:26.722Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>在Spine编辑工具中，约束有三个，分别是：IK约束，路径约束，变换约束，每个都有不同的作用，但是最主要的就是为了节省K帧步骤。</p><p>比如变换约束是对两个骨骼的联动操作，控制一个骨骼的移动旋转，可以控制另一个骨骼的移动旋转等；</p><p>路径约束是一个骨骼要沿着一个画好的路径移动，常用于动画的寻轨，如果没有这个，对于不是直线的移动，到了转弯的地方就要打关键帧，一点一点K出来。</p><p>IK约束，反向运动学约束，就是通过控制两个骨骼末端，两个骨骼在运动时，由算法自动模拟出符合人类直觉的运动轨迹，常用于手、腿和脚等关节位置。</p><p>下面就对这三个约束设置进行简单的演示。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414100527042.png" alt="image-20250414100527042"></p><h2 id="二、变换约束"><a href="#二、变换约束" class="headerlink" title="二、变换约束"></a>二、变换约束</h2><h4 id="1-导入图片并绑定骨骼"><a href="#1-导入图片并绑定骨骼" class="headerlink" title="1.导入图片并绑定骨骼"></a>1.导入图片并绑定骨骼</h4><h4 id="2-新建骨骼（用于被操作）"><a href="#2-新建骨骼（用于被操作）" class="headerlink" title="2.新建骨骼（用于被操作）"></a>2.新建骨骼（用于被操作）</h4><p>这个骨骼可以是其他骨骼下的子骨骼，就是操作这个骨骼能影响其他的骨骼。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414110138345.png" alt="image-20250414110138345"></p><h4 id="3-创建变换约束"><a href="#3-创建变换约束" class="headerlink" title="3.创建变换约束"></a>3.创建变换约束</h4><p>点击一个骨骼，在层级树窗下方新建 “变换约束”。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414110250420.png" alt="image-20250414110250420"></p><h4 id="4-变换约束设置"><a href="#4-变换约束设置" class="headerlink" title="4.变换约束设置"></a>4.变换约束设置</h4><p>新建后选中上面创建的骨骼并输入一个名字后，在层级树窗口就可以看到新建的约束了。点击该约束名，就是配置参数了，混合是变化的力度，要对某项控制就移动滑滚，最后点击匹配。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414110546403.png" alt="image-20250414110546403"></p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414110947459.png" alt="image-20250414110947459"></p><h4 id="5-操作"><a href="#5-操作" class="headerlink" title="5.操作"></a>5.操作</h4><p>点击匹配后，再点击被操作骨骼，旋转和移动他，就会根据变换约束设置的混合参数进行变换了。根据参数其实也能做出很多玩法，比如操作A骨骼，使B骨骼反向移动后旋转等。</p><h2 id="三、路径约束"><a href="#三、路径约束" class="headerlink" title="三、路径约束"></a>三、路径约束</h2><h4 id="1-新建路径"><a href="#1-新建路径" class="headerlink" title="1.新建路径"></a>1.新建路径</h4><p>还是用上面的两个骨骼，这里就分别叫 “图片骨骼” 和 “被操作骨骼” 了。选择图片骨骼，在层级树窗口下点击新建，添加路径，进入到路径编辑，添加一条自定义的路径后退出。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414113336757.png" alt="image-20250414113336757"></p><h4 id="2-新建路径约束"><a href="#2-新建路径约束" class="headerlink" title="2.新建路径约束"></a>2.新建路径约束</h4><p>点击图片骨骼，再在层级树窗口，新建选择 “路径约束”，选中上面创建的路径，这样图片骨骼就和路径进行绑定了。通过点击参数窗的 “位置”，就可以看到图片在路径上移动。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414114434305.png" alt="image-20250414114434305"></p><h2 id="四、IK约束"><a href="#四、IK约束" class="headerlink" title="四、IK约束"></a>四、IK约束</h2><h4 id="1-创建两个骨骼"><a href="#1-创建两个骨骼" class="headerlink" title="1.创建两个骨骼"></a>1.创建两个骨骼</h4><p>两个骨骼全都绑定了图片。</p><h4 id="2-创建IK约束"><a href="#2-创建IK约束" class="headerlink" title="2.创建IK约束"></a>2.创建IK约束</h4><p>选中一个骨骼，在层级树窗口下新建，选择 “IK约束”，自定义一个名称后，选中另一个骨骼（目标）。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20250414131518631.png" alt="image-20250414131518631"></p><h4 id="3-操作"><a href="#3-操作" class="headerlink" title="3.操作"></a>3.操作</h4><p>设置完后，通过拖动目标骨骼，进行移动，IK约束就会对另一个骨骼进行算法驱动。比如往下拉，上面的骨骼也会根据夹角往下移动。</p><h2 id="五、写在后面"><a href="#五、写在后面" class="headerlink" title="五、写在后面"></a>五、写在后面</h2><p>在Spine中，掌握了骨骼绑定，网格操作和约束后，其实就可以非常流畅的制作很多动画了。</p><p>其他的就是在K帧中的小技巧了，比如渐入渐出，换皮肤，遮罩，这些要用到颜色，剪裁了。</p><p>如果做的是游戏动画，事件、边界框、音频，这些掌握后，Spine的功能几乎就没有了。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%BA%A6%E6%9D%9F%E8%AE%BE%E7%BD%AE/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何在Spine3.8.75中设置约束。</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Spine" scheme="https://www.zerofc.cn/tags/Spine/"/>
    
  </entry>
  
  <entry>
    <title>Spine动画教程：皮肤制作</title>
    <link href="https://www.zerofc.cn/2025/04/08/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/"/>
    <id>https://www.zerofc.cn/2025/04/08/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/</id>
    <published>2025-04-08T08:13:50.000Z</published>
    <updated>2025-04-08T12:06:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>搁了很久的抖音直播小玩法开发，最近又让我想起来了。由于是初次尝试，所以我将开发费用的预算降到为零。不但不买服务器采用UnitySDK的指令直推，而且游戏的资产也用AI生成，主打省时又省钱。</p><p>但是图片有了，动画还是得自己做，于是我又从零开始学了一下Spine动画制作。整个过程也是有很多值得记录下来的，比如制作皮肤的教程，网上还是比较少，问DeepSeek也不全，做完后导入Unity3D报错等问题。所以，跟着我这篇文章动手走一遍，还是能快速制作动画皮肤的。</p><h2 id="二、工具"><a href="#二、工具" class="headerlink" title="二、工具"></a>二、工具</h2><p>Spine 3.8.75</p><p>spine-unity-3.8-2021-11-10</p><h2 id="三、皮肤制作"><a href="#三、皮肤制作" class="headerlink" title="三、皮肤制作"></a>三、皮肤制作</h2><p>在动手制作前，可以先对照一下自己的Spine版本，和Unity3D的Spine插件版本，后面我会说一个很有意思的导入问题，那下面就开始如何制作皮肤了。</p><h3 id="1-简单的图片皮肤示例"><a href="#1-简单的图片皮肤示例" class="headerlink" title="1.简单的图片皮肤示例"></a>1.简单的图片皮肤示例</h3><h4 id="1-1-画面创建"><a href="#1-1-画面创建" class="headerlink" title="1.1.画面创建"></a>1.1.画面创建</h4><p>导入两张形状一致，但纹理不同的图片，然后两张图全部绑定在一个骨骼下，层级结构参考下图。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408165643830.png" alt="image-20250408165643830"></p><h4 id="1-2-添加皮肤"><a href="#1-2-添加皮肤" class="headerlink" title="1.2.添加皮肤"></a>1.2.添加皮肤</h4><p>在层级树的皮肤中，点击创建两个皮肤，名字自定义。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408165839140.png" alt="image-20250408165839140"></p><h4 id="1-3-创建皮肤占位符"><a href="#1-3-创建皮肤占位符" class="headerlink" title="1.3.创建皮肤占位符"></a>1.3.创建皮肤占位符</h4><p>在层级树中选择一个皮肤，点击左边的 “眼睛（小圆点，表显示）”，然后选中某插槽下的一个附件（图片）。选择后再点击下面的 “新建” -&gt; “皮肤占位符”。，名字自定。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408171257613.png" alt="image-20250408171257613"></p><h4 id="1-4-检查皮肤切换"><a href="#1-4-检查皮肤切换" class="headerlink" title="1.4.检查皮肤切换"></a>1.4.检查皮肤切换</h4><p>通过点击皮肤左边的眼睛按钮，看看能不能展开皮肤占位符里的附件，因为给附件添加皮肤占位符后，就被折叠进占位符中了。</p><h4 id="1-5-创建动画"><a href="#1-5-创建动画" class="headerlink" title="1.5.创建动画"></a>1.5.创建动画</h4><p>进入动画模式后，点击两张图片上的骨骼，在摄影表中给该骨骼添加移动的关键帧，最后我们在播放时就可以切换皮肤了。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408171833203.png" alt="image-20250408171833203"></p><h3 id="2-简单的网格皮肤演示"><a href="#2-简单的网格皮肤演示" class="headerlink" title="2.简单的网格皮肤演示"></a>2.简单的网格皮肤演示</h3><p>装配和上面图片的皮肤示例一样，但是在绑定骨骼前，现对图片网格处理（蒙皮），然后绑骨骼，刷权重。</p><h4 id="2-1-网格编辑"><a href="#2-1-网格编辑" class="headerlink" title="2.1.网格编辑"></a>2.1.网格编辑</h4><p>点击图片-&gt;勾选网格-&gt;编辑网格-&gt;新建，然后对图片的轮廓围起来（像PS里的钢笔一样操作）。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408172921833.png" alt="image-20250408172921833"></p><h4 id="2-2-添加骨骼"><a href="#2-2-添加骨骼" class="headerlink" title="2.2.添加骨骼"></a>2.2.添加骨骼</h4><p>选择自定义的根骨骼，按照预期的动画效果，添加几个骨骼。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408173418643.png" alt="image-20250408173418643"></p><h4 id="2-3-给网格绑定骨骼"><a href="#2-3-给网格绑定骨骼" class="headerlink" title="2.3.给网格绑定骨骼"></a>2.3.给网格绑定骨骼</h4><p>选中网格，点击添加骨骼上方的 “权重” 按钮，弹出一个权重窗口，点击绑定，然后将下面添加的几个骨骼选中（按ctrl多选），最后再点一下绑定。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408173830107.png" alt="image-20250408173830107"></p><h4 id="2-4-添加皮肤"><a href="#2-4-添加皮肤" class="headerlink" title="2.4.添加皮肤"></a>2.4.添加皮肤</h4><p>第二张图片重复前面的添加网格，但是不用再新建骨骼，和第一张共用，皮肤切换的作用就在这里了，多个皮肤共用一套骨骼动画。</p><p>就像我们玩游戏的时候，不管怎么换皮肤，英雄的招式是一样的，当然打击特效可能也拆分出了皮肤除外。</p><h4 id="2-5-创建皮肤占位符"><a href="#2-5-创建皮肤占位符" class="headerlink" title="2.5.创建皮肤占位符"></a>2.5.创建皮肤占位符</h4><p>皮肤添加和占位符创建和前面的图片皮肤示例一样，只是这次是点击网格而不是附件了。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408175516573.png" alt="image-20250408175516573"></p><h2 id="四、导出与导入"><a href="#四、导出与导入" class="headerlink" title="四、导出与导入"></a>四、导出与导入</h2><p>导出是在Spine中导出能在Unity3D中使用的动画文件，这里要注意格式和添加方法，还有前面提到的导入游戏引擎中报错问题。</p><h3 id="Spine导出"><a href="#Spine导出" class="headerlink" title="Spine导出"></a>Spine导出</h3><p>点击导出，选择 “JSON”，确定输出文件夹后，点击 “打包设置”，为了被Unity3D支持，图集扩展名要加上 “.txt”。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408191026555.png" alt="image-20250408191026555"></p><h3 id="导入Unity3D"><a href="#导入Unity3D" class="headerlink" title="导入Unity3D"></a>导入Unity3D</h3><p>从Spine导出后有三个文件，分别是atlas.txt的图集文件，json数据和png贴图。</p><p>放入一个文件夹后直接复制到Unity3D项目的Resources后，游戏引擎会再生成一个atlas和skeletonData的asset文件，以及一个mat文件。</p><p>进入编辑器中，只需要将SkeletonData.asset拖到场景中即可。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408192003300.png" alt="image-20250408192003300"></p><h3 id="导入运行报错"><a href="#导入运行报错" class="headerlink" title="导入运行报错"></a>导入运行报错</h3><p>当我第一次导进去后就提示错误：Error reading skeleton JSON file for SkeletonData asset: skeleton_SkeletonData Unsupported skeleton data, please export with a newer version of Spine。</p><p>根据提示是导出的Spine文件版本太低，其实就是我安装的Spine-Unity插件和Spine3.8.75不匹配。一般的做法就是换新版Spine，或安装低版本Unity插件，但是我这次就对比了一下可以使用的spine动画json文件。</p><p>发现格式都差不多，唯一不同的只是skeleton下的spine版本号，原本的是3.8.75，当我改成3.8.99重新加载进去后竟然就可以了。这整得我也是很无语，就只是校验了一下版本号，我还以为是格式不对。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20250408192801332.png" alt="image-20250408192801332"></p><h2 id="五、写在后面"><a href="#五、写在后面" class="headerlink" title="五、写在后面"></a>五、写在后面</h2><p>其实想要快速制作游戏动画，还有以一种更好的方法，那就是序列帧动画。首先将AI生成的图片，再输入指定动作的提示词，用图生视频。然后将视频拆成图片帧，最后只需要挑选一些抠图做成图片精灵就可以了。</p><p>虽然我一开始就是这样想的，但是了解到Spine优点后就放弃这种方式。第二个原因，通过学习Spine我可以可持续制作动画贴图，还能上传到平台赚取收益，以后有时间我也会不定时地更新Spine动画制作小案例。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E7%9A%AE%E8%82%A4%E5%88%B6%E4%BD%9C/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何在Spine3.8.75中制作多套皮肤，并导入Unity3D。</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Spine" scheme="https://www.zerofc.cn/tags/Spine/"/>
    
  </entry>
  
  <entry>
    <title>Spine动画教程：剪裁的应用</title>
    <link href="https://www.zerofc.cn/2025/04/08/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>https://www.zerofc.cn/2025/04/08/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/</id>
    <published>2025-04-08T08:13:50.000Z</published>
    <updated>2025-04-14T08:48:59.826Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>Spine中的剪裁功能，其实就是类似于视频工具里的遮罩，常被用来做带有专场的结算动画。比如那种开场全屏后冒出一些文字的这种酷炫效果，那下面就演示一下吧。</p><h2 id="二、操作"><a href="#二、操作" class="headerlink" title="二、操作"></a>二、操作</h2><h4 id="1-创建骨骼"><a href="#1-创建骨骼" class="headerlink" title="1.创建骨骼"></a>1.创建骨骼</h4><p>先按正常操作，将图片素材放到装配窗口，绑定骨骼。</p><h4 id="2-添加剪裁"><a href="#2-添加剪裁" class="headerlink" title="2.添加剪裁"></a>2.添加剪裁</h4><p>点击根骨骼root，在层级树下方新建，添加 “剪裁”。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/image-20250414152914443.png" alt="image-20250414152914443"></p><h4 id="3-编辑剪裁"><a href="#3-编辑剪裁" class="headerlink" title="3.编辑剪裁"></a>3.编辑剪裁</h4><p>点击新建，在装配窗口添加几个顶点，自定义一个形状。退出编辑后，除那个形状里的内容能显示外，其他的都隐藏起来了。</p><h4 id="4-编辑动画"><a href="#4-编辑动画" class="headerlink" title="4.编辑动画"></a>4.编辑动画</h4><p>有了剪裁，那要完成转场效果，就是将剪裁框外的素材陆续移动进去就可以了。</p><p>但如果要完成渐入渐出的效果，就要用到颜色了。</p><h4 id="5-渐入渐出效果"><a href="#5-渐入渐出效果" class="headerlink" title="5.渐入渐出效果"></a>5.渐入渐出效果</h4><p>在动画模式下，选中需要有渐隐效果的插槽，在第一帧时候，找到插槽的颜色。如果一开始要显示，则颜色不动，再到需要隐藏的关键帧位置，点击颜色，将透明度调低。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/image-20250414161738952.png" alt="image-20250414161738952"></p><h4 id="6-切换附件效果"><a href="#6-切换附件效果" class="headerlink" title="6.切换附件效果"></a>6.切换附件效果</h4><p>这个效果有点类似皮肤，只不过是不能被比如Unity3D操作的皮肤。效果就是动画到一个时间点后，脸部的表情换了一个，或者可以将同一个插槽下的附件（不同的颜色），通过显示隐藏的切换，能放在不同的动画下。</p><p>操作就是找到一个要切换的插槽，在层级树的图片中拖入到该插槽下，插槽下的附件左边有一个小圆点。在动画模式下，只需要在指定关键帧下，显示隐藏对应的附件即可。</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/image-20250414162710225.png" alt="image-20250414162710225"></p><h2 id="三、写在后面"><a href="#三、写在后面" class="headerlink" title="三、写在后面"></a>三、写在后面</h2><p>可能当时Spine这个软件定位就是制作立绘动画，所以才没有像类似镜头的功能，导致要实现那种很酷炫的带运镜动画，就要导出后在别的软件中编辑。</p><p>但是我之前看过别人同样是用Spine，实现了很多伪运镜的动画，找时间我也研究一下再拆解分享出来，这次就到这里了，下次再见~</p><p><img src="/img/Spine%E5%8A%A8%E7%94%BB%E6%95%99%E7%A8%8B%EF%BC%9A%E5%89%AA%E8%A3%81%E7%9A%84%E5%BA%94%E7%94%A8/image-20240805201033707.png" alt="image-20250408192801332"></p>]]></content>
    
    
    <summary type="html">如何在Spine3.8.75中设置约束。</summary>
    
    
    
    <category term="游戏开发" scheme="https://www.zerofc.cn/categories/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="Spine" scheme="https://www.zerofc.cn/tags/Spine/"/>
    
  </entry>
  
</feed>
